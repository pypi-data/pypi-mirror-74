[metadata]
name = sql_column_parser
url = https://github.com/nymann/sql-column-parser
license = GPL v3
maintainer = Kristian Nymann Jakobsen, Sebastian Olsen
maintainer_email = kristian@nymann.dev, seol@itu.dk
description = SQL Column Parser
long_description = file: README.md
long_description_content_type = text/markdown

[options]
packages = find:
include_package_data = true
package_dir = = src
python_requires = >= 3.8
setup_requires = 
	pytest-runner
tests_require = 
	pytest
	pytest-cov
install_requires = 
	pydantic
	inflect

[options.packages.find]
where = src

[tool:pytest]
testpaths = tests
addopts = 
	--cov-report=xml
	--cov-report=html
	--cov=src
	--cov-report=term-missing

[coverage:run]
branch = True
source = 
	sql_column_parser
	tests

[coverage:paths]
source = 
	src

[aliases]
test = pytest

[yapf]
based_on_style = google

[isort]
lexicographical = True
force_sort_within_sections = True
force_single_line = True
src_paths = src,tests,migrations
single_line_exclusions = typing
known_first_party = sql_column_parser

[tool.pylint.reports]
output-format = text
files-output = no
reports = no
evaluation = 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)
msg-template = "{path}:{line}: [{msg_id}({symbol}), {obj}] {msg}"

[tool.pylint.master]
ignore = third_party
fail-under = 9
ignore-patterns = version
persistent = yes
load-plugins = 
jobs = 4
unsafe-load-any-extension = no
extension-pkg-whitelist = 

[tool.pylint.message_control]
confidence = 
disable = abstract-method,
	apply-builtin,
	arguments-differ,
	attribute-defined-outside-init,
	backtick,
	bad-continuation,
	bad-option-value,
	bad-whitespace,
	basestring-builtin,
	buffer-builtin,
	c-extension-no-member,
	consider-using-enumerate,
	cmp-builtin,
	cmp-method,
	coerce-builtin,
	coerce-method,
	delslice-method,
	div-method,
	duplicate-code,
	eq-without-hash,
	execfile-builtin,
	file-builtin,
	filter-builtin-not-iterating,
	fixme,
	getslice-method,
	global-statement,
	hex-method,
	idiv-method,
	implicit-str-concat-in-sequence,
	import-error,
	import-self,
	import-star-module-level,
	inconsistent-return-statements,
	input-builtin,
	intern-builtin,
	invalid-str-codec,
	locally-disabled,
	long-builtin,
	long-suffix,
	map-builtin-not-iterating,
	misplaced-comparison-constant,
	missing-function-docstring,
	metaclass-assignment,
	next-method-called,
	next-method-defined,
	no-absolute-import,
	no-else-break,
	no-else-continue,
	no-else-raise,
	no-else-return,
	no-init,  # added
	no-member,
	no-name-in-module,
	no-self-use,
	nonzero-method,
	oct-method,
	old-division,
	old-ne-operator,
	old-octal-literal,
	old-raise-syntax,
	parameter-unpacking,
	print-statement,
	raising-string,
	range-builtin-not-iterating,
	raw_input-builtin,
	rdiv-method,
	reduce-builtin,
	relative-import,
	reload-builtin,
	round-builtin,
	setslice-method,
	signature-differs,
	standarderror-builtin,
	suppressed-message,
	sys-max-int,
	too-few-public-methods,
	too-many-ancestors,
	too-many-arguments,
	too-many-boolean-expressions,
	too-many-branches,
	too-many-instance-attributes,
	too-many-locals,
	too-many-nested-blocks,
	too-many-public-methods,
	too-many-return-statements,
	too-many-statements,
	trailing-newlines,
	unichr-builtin,
	unicode-builtin,
	unnecessary-pass,
	unpacking-in-except,
	useless-else-on-loop,
	useless-object-inheritance,
	useless-suppression,
	using-cmp-argument,
	wrong-import-order,
	xrange-builtin,
	zip-builtin-not-iterating,

[tool.pylint.basic]
good-names = main,_
bad-names = 
name-group = 
include-naming-hint = no
property-classes = abc.abstractproperty,cached_property.cached_property,cached_property.threaded_cached_property,cached_property.cached_property_with_ttl,cached_property.threaded_cached_property_with_ttl
function-rgx = ^(?:(?P<exempt>setUp|tearDown|setUpModule|tearDownModule)|(?P<camel_case>_?[A-Z][a-zA-Z0-9]*)|(?P<snake_case>_?[a-z][a-z0-9_]*))$
variable-rgx = ^[a-z][a-z0-9_]*$
const-rgx = ^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$
attr-rgx = ^_{0,2}[a-z][a-z0-9_]*$
argument-rgx = ^[a-z][a-z0-9_]*$
class-attribute-rgx = ^(_?[A-Z][A-Z0-9_]*|__[a-z0-9_]+__|_?[a-z][a-z0-9_]*)$
inlinevar-rgx = ^[a-z][a-z0-9_]*$
class-rgx = ^_?[A-Z][a-zA-Z0-9]*$
module-rgx = ^(_?[a-z][a-z0-9_]*|__init__)$
method-rgx = (?x)^(?:(?P<exempt>_[a-z0-9_]+__|runTest|setUp|tearDown|setUpTestCase|tearDownTestCase|setupSelf|tearDownClass|setUpClass|(test|assert)_*[A-Z0-9][a-zA-Z0-9_]*|next)|(?P<camel_case>_{0,2}[A-Z][a-zA-Z0-9_]*)|(?P<snake_case>_{0,2}[a-z][a-z0-9_]*))$
no-docstring-rgx = (__.*__|main|test.*|.*test|.*Test)$
docstring-min-length = 10

[tool.pylint.typecheck]
contextmanager-decorators = contextlib.contextmanager,contextlib2.contextmanager
ignore-mixin-members = yes
ignored-modules = 
ignored-classes = optparse.Values,thread._local,_thread._local
generated-members = 

[tool.pylint.format]
max-line-length = 80
ignore-long-lines = (?x)(
	^\s*(\#\ )?<?https?://\S+>?$|
	^\s*(from\s+\S+\s+)?import\s+.+$)
single-line-if-stmt = yes
no-space-check = 
max-module-lines = 99999
indent-string = '    '
indent-after-paren = 4
expected-line-ending-format = 

[tool.pylint.miscellaneous]
notes = TODO

[tool.pylint.string]
check-quote-consistency = yes

[tool.pylint.variables]
init-import = no
dummy-variables-rgx = ^\*{0,2}(_$|unused_|dummy_)
additional-builtins = 
callbacks = cb_,_cb
redefining-builtins-modules = six,six.moves,past.builtins,future.builtins,functools

[tool.pylint.logging]
logging-modules = logging,absl.logging,tensorflow.google.logging

[tool.pylint.similarities]
min-similarity-lines = 4
ignore-comments = yes
ignore-docstrings = yes
ignore-imports = no

[tool.pylint.spelling]
spelling-dict = 
spelling-ignore-words = 
spelling-private-dict-file = 
spelling-store-unknown-words = no

[tool.pylint.imports]
deprecated-modules = regsub,
	TERMIOS,
	Bastion,
	rexec,
	sets
import-graph = dependency_graph.png
ext-import-graph = external_only_dependency_graph.png
int-import-graph = internal_only_dependency_graph.png
known-standard-library = typing
known-third-party = enchant, absl
analyse-fallback-blocks = no

[tool.pylint.classes]
defining-attr-methods = __init__,
	__new__,
	setUp
exclude-protected = _asdict,
	_fields,
	_replace,
	_source,
	_make
valid-classmethod-first-arg = cls,
	class_
valid-metaclass-classmethod-first-arg = mcs

[tool.pylint.exceptions]
overgeneral-exceptions = StandardError,
	Exception,
	BaseException

[egg_info]
tag_build = 
tag_date = 0

