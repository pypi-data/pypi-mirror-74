# -*- coding: utf-8 -*-
from __future__ import print_function
import datetime as dt
import logging

from . import Property
from . import FHIRBase, Element, Extension, Reference

from .backboneelement import BackboneElement
from .domainresource import DomainResource

from ._boolean import boolean
from ._canonical import canonical
from ._code import code
from ._date import date
from ._datetime import dateTime
from ._decimal import decimal
from ._integer import integer
from ._markdown import markdown
from ._string import string
from ._uri import uri

from .backboneelement import BackboneElement
from .codeableconcept import CodeableConcept
from .coding import Coding
from .contactdetail import ContactDetail
from .identifier import Identifier
from .usagecontext import UsageContext

__author__ = "Melle Sieswerda"
__copyright__  = "Copyright 2017, Melle Sieswerda"
__license__ = "GPL"
__version__ = "0.8"

__all__ = ['ValueSet']

class Compose(BackboneElement):
    """Autogenerated class for implicit type."""
    lockedDate = Property('lockedDate', 'date', '0', '1')
    inactive = Property('inactive', 'boolean', '0', '1')
    include = Property('include', 'Include', '1', '*')
    exclude = Property('exclude', 'Include', '0', '*')

class Include(BackboneElement):
    """Autogenerated class for implicit type."""
    system = Property('system', 'uri', '0', '1')
    version = Property('version', 'string', '0', '1')
    concept = Property('concept', 'Concept', '0', '*')
    filter = Property('filter', 'Filter', '0', '*')
    valueSet = Property('valueSet', 'canonical', '0', '*')

class Concept(BackboneElement):
    """Autogenerated class for implicit type."""
    code = Property('code', 'code', '1', '1')
    display = Property('display', 'string', '0', '1')
    designation = Property('designation', 'Designation', '0', '*')

class Designation(BackboneElement):
    """Autogenerated class for implicit type."""
    language = Property('language', 'code', '0', '1')
    use = Property('use', 'Coding', '0', '1')
    value = Property('value', 'string', '1', '1')

class Filter(BackboneElement):
    """Autogenerated class for implicit type."""
    property = Property('property', 'code', '1', '1')
    op = Property('op', 'code', '1', '1')
    value = Property('value', 'string', '1', '1')

class Expansion(BackboneElement):
    """Autogenerated class for implicit type."""
    identifier = Property('identifier', 'uri', '0', '1')
    timestamp = Property('timestamp', 'dateTime', '1', '1')
    total = Property('total', 'integer', '0', '1')
    offset = Property('offset', 'integer', '0', '1')
    parameter = Property('parameter', 'Parameter', '0', '*')
    contains = Property('contains', 'Contains', '0', '*')

class Parameter(BackboneElement):
    """Autogenerated class for implicit type."""
    name = Property('name', 'string', '1', '1')
    value = Property('value', ['string', 'boolean', 'integer', 'decimal', 'uri', 'code', 'dateTime'], '0', '1')

class Contains(BackboneElement):
    """Autogenerated class for implicit type."""
    system = Property('system', 'uri', '0', '1')
    abstract = Property('abstract', 'boolean', '0', '1')
    inactive = Property('inactive', 'boolean', '0', '1')
    version = Property('version', 'string', '0', '1')
    code = Property('code', 'code', '0', '1')
    display = Property('display', 'string', '0', '1')
    designation = Property('designation', 'Designation', '0', '*')
    contains = Property('contains', 'Contains', '0', '*')


# ------------------------------------------------------------------------------
# ValueSet
# ------------------------------------------------------------------------------
class ValueSet(DomainResource):
    """
    A ValueSet resource instance specifies a set of codes drawn from one
    or more code systems, intended for use in a particular context. Value
    sets link between [CodeSystem](codesystem.html) definitions and their
    use in [coded elements](terminologies.html).
    
    Autogenerated class.
    """
    _url = 'http://hl7.org/fhir/StructureDefinition/ValueSet'
    
    url = Property('url', uri, '0', '1')
    identifier = Property('identifier', Identifier, '0', '*')
    version = Property('version', string, '0', '1')
    name = Property('name', string, '0', '1')
    title = Property('title', string, '0', '1')
    status = Property('status', code, '1', '1')
    experimental = Property('experimental', boolean, '0', '1')
    date = Property('date', dateTime, '0', '1')
    publisher = Property('publisher', string, '0', '1')
    contact = Property('contact', ContactDetail, '0', '*')
    description = Property('description', markdown, '0', '1')
    useContext = Property('useContext', UsageContext, '0', '*')
    jurisdiction = Property('jurisdiction', CodeableConcept, '0', '*')
    immutable = Property('immutable', boolean, '0', '1')
    purpose = Property('purpose', markdown, '0', '1')
    copyright = Property('copyright', markdown, '0', '1')
    compose = Property('compose', Compose, '0', '1')
    expansion = Property('expansion', Expansion, '0', '1')
