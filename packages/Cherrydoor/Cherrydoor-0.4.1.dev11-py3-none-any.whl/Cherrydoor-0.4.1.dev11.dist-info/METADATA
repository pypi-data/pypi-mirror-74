Metadata-Version: 2.1
Name: Cherrydoor
Version: 0.4.1.dev11
Summary: An overengineered rfid lock manager created for my school community. Made for Raspberry Pi connected with another microcontroler that send and recieved rfid data via UART
Home-page: https://github.com/oplik0/cherrydoor
Author: opliko
License: MIT
Keywords: wisniowasu mongodb flask rfid lock cherrydoor
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Education
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Home Automation
Classifier: Topic :: Terminals :: Serial
Classifier: Topic :: Internet :: WWW/HTTP
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: argon2-cffi (>=19)
Requires-Dist: DateTimeRange (>=0.6Flask>=1)
Requires-Dist: Flask-WTF (>=0.14)
Requires-Dist: Flask-Login (>=0.4)
Requires-Dist: Flask-PyMongo (>=2.3)
Requires-Dist: Flask-RESTful (>=0.3)
Requires-Dist: Flask-SocketIO (>=4.2)
Requires-Dist: flask-talisman (>=0.7)
Requires-Dist: pyserial (>=3.4)
Requires-Dist: pymongo (>=3.10)
Requires-Dist: eventlet
Requires-Dist: elevate

[![python tests](https://github.com/wisniowa56/cherrydoor/workflows/python%20tests/badge.svg)](https://github.com/wisniowa56/cherrydoor/actions?query=workflow%3A%22python+tests%22)
[![Maintainability](https://api.codeclimate.com/v1/badges/7b05467561774c611f8c/maintainability)](https://codeclimate.com/github/oplik0/cherrydoor/maintainability)
[![HitCount](http://hits.dwyl.io/wisniowa56/cherrydoor.svg)](http://hits.dwyl.io/wisniowa56/cherrydoor)

<h1 align="center">cherrydoor</h1>
<p align="center">
  <img src="cherrydoor/static/images/logo/logo.svg">
</p>
Prosta webaplikacja do zarządzania i przeglądania statystyk wykorzystania zamka RFID korzystająca z Flaska i MongoDB.

## Obecny stan (v0.1)

- Podstawa backendu działa
- Działa REST API
- Działa websocket
- Jest działające logowanie
- Działa większość frontendu - brakuje zarządzania administratorami i ustawień przerw

## Instalacja i uruchamianie:

1. Sklonuj projekt `git clone https://github.com/wisniowa56/cherrydoor cherrydoor` i przejdź do powstałego folderu `cd cherrydoor`
2. Uruchom skrypt instalacyjny: `bash install.sh`
3. Jeśli nie jesteś pewien, czy korzystasz z najnowszej wersji aplikacji, wpisz `y` przy pytaniu o aktualizację
4. Wpisz `y` by skonfigurować MongoDB, kolejne `y` by stworzyć pierwszego administratora. Wpisz jego nazwę i hasło.
5. (opcjonalne, ale zalecane) Zmień klucz w [`config.json`](config.json) na losową wartość. Możesz ją wygenerować np. w Pythonie:

```Python
>>> import os
>>> os.urandom(24)
```

5. Uruchom aplikację: `python3 main.py`


