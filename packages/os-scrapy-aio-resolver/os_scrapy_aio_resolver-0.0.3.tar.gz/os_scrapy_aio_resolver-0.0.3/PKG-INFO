Metadata-Version: 2.1
Name: os_scrapy_aio_resolver
Version: 0.0.3
Summary: Auto Generated by os-scrapy-cookiecutter
Home-page: UNKNOWN
License: MIT License
Description: # os-scrapy-aio-resolver
        
        [![Build Status](https://www.travis-ci.org/cfhamlet/os-scrapy-aio-resolver.svg?branch=master)](https://www.travis-ci.org/cfhamlet/os-scrapy-aio-resolver)
        [![codecov](https://codecov.io/gh/cfhamlet/os-scrapy-aio-resolver/branch/master/graph/badge.svg)](https://codecov.io/gh/cfhamlet/os-scrapy-aio-resolver)
        [![PyPI - Python Version](https://img.shields.io/pypi/pyversions/os-scrapy-aio-resolver.svg)](https://pypi.python.org/pypi/os-scrapy-aio-resolver)
        [![PyPI](https://img.shields.io/pypi/v/os-scrapy-aio-resolver.svg)](https://pypi.python.org/pypi/os-scrapy-aio-resolver)
        
        This project provide a async DNS resolver.
        
        ## Install
        
        ```
        pip install os-scrapy-aio-resolver
        ```
        
        You can run example spider directly in the project root path
        
        ```
        scrapy crawl example
        ```
        
        ## Usage
        
        ### Settings
        
        * enable DNS resolver in the project settings file:
        
            ```
            DNS_RESOLVER = "os_scrapy_aio_resolver.AsyncResolver"
            ```
        
        * [use asyncio reactor](https://docs.scrapy.org/en/latest/topics/asyncio.html)
        
            ```
            TWISTED_REACTOR = "twisted.internet.asyncioreactor.AsyncioSelectorReactor"
            ```
        
            or you can use os-scrapy command line to start crawling with ``-r asyncio``
        
            ```
            os-scrapy crawl example -r asyncio
            ```
        
        * enable/disable DNS cache, set cache size
        
            ```
            DNSCACHE_ENABLED = True
            DNSCACHE_SIZE = 10000
            ```
        
        ## Unit Tests
        
        ```
        sh scripts/test.sh
        ```
        
        ## License
        
        MIT licensed.
        
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.6
Description-Content-Type: text/markdown
