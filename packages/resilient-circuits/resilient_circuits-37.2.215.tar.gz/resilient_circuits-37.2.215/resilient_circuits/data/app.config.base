[resilient]
# Basic service connection
host=resilient
port=443

# Use (api_key_id, api_key_secret)
api_key_id=ApiKeyId
api_key_secret=ApiKeySecret
# Or (email, password)
#email=api_user@example.com
#password=MyPassword

org=My Org

# Actions Module connection
#stomp_port=65001

# Directory containing additional components to load
# componentsdir=components
# Existing directory to write logs to, or set with $APP_LOG_DIR
logdir=/tmp
logfile=app.log
loglevel=INFO

# If your Resilient server uses a self-signed TLS certificate, or some
# other certificate that is not automatically trusted by your machine,
# you need to explicitly tell the Python scripts that it should be trusted.
# If you don't want to use a cert you can set cafile=false.
# To explicitly trust a site, download its certificate to a file, e.g:
#    mkdir -p ~/.resilient
#    openssl s_client -connect resilient.example.com:443 -showcerts < /dev/null 2> /dev/null | openssl x509 -outform PEM > ~/.resilient/cert.cer
# then specify the file (remove the '#' from the line below):
#cafile=~/.resilient/cert.cer
