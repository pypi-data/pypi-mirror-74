Metadata-Version: 2.1
Name: tamcolors
Version: 1.0.2
Summary: This library standardizes console color output across multiple platforms.
Home-page: https://github.com/cmcmarrow/tamcolors
Author: Charles McMarrow
Author-email: Charles.M.McMarrow@gmail.com
License: Apache Software License 2.0
Description: tamcolors
        =========
        
        .. image:: https://raw.githubusercontent.com/cmcmarrow/tamcolors/master/icon.png
        
        pip install tamcolors
        ---------------------
        
        basic example
        ---------------------
        .. code-block:: python
        
           import tamcolors
           tamcolors.examples.basic.run()
        
        .. code-block:: python
        
           import tamcolors
           tamcolors.printc("Hello", "World!", ("light blue", "white"), same_color=True)
           name = tamcolors.inputc("Whats Your Name? >>> ", ("light aqua", "gray"))
           tamcolors.clear()
           tamcolors.printc("Hello, ", ("white", "red"), name, (2, 7), "!", ("gray", "light aqua"), sep="")
        
        icon example
        ---------------------
        .. code-block:: python
        
           import tamcolors
           tamcolors.examples.icon.run()
        
        .. code-block:: python
        
           from tamcolors import tam, tam_tools, tam_io
        
        
           class BootLogo(tam.tam_loop.TAMFrame):
               def __init__(self):
                   super().__init__(fps=10,
                                    char=" ",
                                    foreground_color=2,
                                    background_color=0,
                                    min_width=70, max_width=70, min_height=40, max_height=40)
        
                   self.icon = tam_tools.tam_fade.tam_fade_in(buffer=tam_tools.tam_icon.get_icon(),
                                                              char=" ",
                                                              foreground_color=tam_io.tam_colors.BLACK,
                                                              background_color=tam_io.tam_colors.BLACK)
                   self.wait = 10
        
               def update(self, tam_loop, keys, loop_data):
        
                   if not self.icon.done():
                       self.icon.slide()
                   else:
                       self.wait -= 1
        
                   if self.wait == 0:
                       tam_loop.done()
        
               def draw(self, tam_buffer, loop_data):
                   tam_buffer.clear()
        
                   tam_buffer.draw_onto(self.icon.peak(),
                                        *tam_tools.tam_placing.center(x=35, y=15, buffer=self.icon.peak()))
        
                   tam_tools.tam_print.tam_print(tam_buffer, *tam_tools.tam_placing.center(x=35,
                                                                                           y=28,
                                                                                           width=len("tamcolors"),
                                                                                           height=1),
                                                 text="tamcolors",
                                                 foreground_color=tam_io.tam_colors.LIGHT_WHITE,
                                                 background_color=tam_io.tam_colors.BLACK)
        
           tam.tam_loop.TAMLoop(BootLogo()).run()
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS :: MacOS X
Classifier: Programming Language :: C
Classifier: Programming Language :: C++
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Terminals
Classifier: Topic :: Utilities
Description-Content-Type: text/x-rst
