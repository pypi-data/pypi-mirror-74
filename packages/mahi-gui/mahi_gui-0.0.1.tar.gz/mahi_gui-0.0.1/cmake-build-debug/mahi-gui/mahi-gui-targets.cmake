# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget mahi::glfw mahi::glad mahi::nfd mahi::nanovg mahi::clipper mahi::gui)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target mahi::glfw
add_library(mahi::glfw STATIC IMPORTED)

set_target_properties(mahi::glfw PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/joel/Documents/dev/py-mahi-gui/mahi-gui/3rdparty/glfw/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:Threads::Threads>;/usr/lib/x86_64-linux-gnu/librt.so;/usr/lib/x86_64-linux-gnu/libm.so;\$<LINK_ONLY:dl>;/usr/lib/x86_64-linux-gnu/libX11.so"
)

# Create imported target mahi::glad
add_library(mahi::glad STATIC IMPORTED)

set_target_properties(mahi::glad PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/joel/Documents/dev/py-mahi-gui/mahi-gui/3rdparty/glad/include"
)

# Create imported target mahi::nfd
add_library(mahi::nfd STATIC IMPORTED)

set_target_properties(mahi::nfd PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/joel/Documents/dev/py-mahi-gui/mahi-gui/3rdparty/nativefiledialog-extended/src/include"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:gtk-3>;\$<LINK_ONLY:gdk-3>;\$<LINK_ONLY:pangocairo-1.0>;\$<LINK_ONLY:pango-1.0>;\$<LINK_ONLY:harfbuzz>;\$<LINK_ONLY:atk-1.0>;\$<LINK_ONLY:cairo-gobject>;\$<LINK_ONLY:cairo>;\$<LINK_ONLY:gdk_pixbuf-2.0>;\$<LINK_ONLY:gio-2.0>;\$<LINK_ONLY:gobject-2.0>;\$<LINK_ONLY:glib-2.0>"
)

# Create imported target mahi::nanovg
add_library(mahi::nanovg STATIC IMPORTED)

set_target_properties(mahi::nanovg PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "NANOVG_GLAD"
  INTERFACE_INCLUDE_DIRECTORIES "/home/joel/Documents/dev/py-mahi-gui/mahi-gui/3rdparty/nanovg/src"
)

# Create imported target mahi::clipper
add_library(mahi::clipper STATIC IMPORTED)

set_target_properties(mahi::clipper PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/joel/Documents/dev/py-mahi-gui/mahi-gui/3rdparty/clipper"
)

# Create imported target mahi::gui
add_library(mahi::gui STATIC IMPORTED)

set_target_properties(mahi::gui PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "MAHI_GUI;IMGUI_IMPL_OPENGL_LOADER_GLAD"
  INTERFACE_COMPILE_FEATURES "cxx_std_17"
  INTERFACE_INCLUDE_DIRECTORIES "/home/joel/Documents/dev/py-mahi-gui/mahi-gui/include;/home/joel/Documents/dev/py-mahi-gui/mahi-gui/3rdparty/imgui;/home/joel/Documents/dev/py-mahi-gui/mahi-gui/3rdparty/implot;/home/joel/Documents/dev/py-mahi-gui/mahi-gui/3rdparty/nanosvg/src"
  INTERFACE_LINK_LIBRARIES "mahi::util;mahi::glfw;mahi::glad;mahi::nanovg;mahi::clipper;mahi::nfd;GL;stdc++fs"
)

# Import target "mahi::glfw" for configuration "Debug"
set_property(TARGET mahi::glfw APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mahi::glfw PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
  IMPORTED_LOCATION_DEBUG "/home/joel/Documents/dev/py-mahi-gui/cmake-build-debug/mahi-gui/3rdparty/glfw/src/libglfw3.a"
  )

# Import target "mahi::glad" for configuration "Debug"
set_property(TARGET mahi::glad APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mahi::glad PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
  IMPORTED_LOCATION_DEBUG "/home/joel/Documents/dev/py-mahi-gui/cmake-build-debug/mahi-gui/3rdparty/glad/libglad.a"
  )

# Import target "mahi::nfd" for configuration "Debug"
set_property(TARGET mahi::nfd APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mahi::nfd PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "/home/joel/Documents/dev/py-mahi-gui/cmake-build-debug/mahi-gui/3rdparty/nativefiledialog-extended/src/libnfd.a"
  )

# Import target "mahi::nanovg" for configuration "Debug"
set_property(TARGET mahi::nanovg APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mahi::nanovg PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "C"
  IMPORTED_LOCATION_DEBUG "/home/joel/Documents/dev/py-mahi-gui/cmake-build-debug/mahi-gui/3rdparty/nanovg/libnanovg.a"
  )

# Import target "mahi::clipper" for configuration "Debug"
set_property(TARGET mahi::clipper APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mahi::clipper PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "/home/joel/Documents/dev/py-mahi-gui/cmake-build-debug/mahi-gui/3rdparty/clipper/libclipper.a"
  )

# Import target "mahi::gui" for configuration "Debug"
set_property(TARGET mahi::gui APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(mahi::gui PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "/home/joel/Documents/dev/py-mahi-gui/cmake-build-debug/mahi-gui/libmahi-gui-d.a"
  )

# Make sure the targets which have been exported in some other 
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "mahi::util" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
