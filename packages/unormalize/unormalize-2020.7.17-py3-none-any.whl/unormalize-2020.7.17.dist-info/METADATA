Metadata-Version: 2.1
Name: unormalize
Version: 2020.7.17
Summary: Unicode normalization filters
Home-page: https://github.com/eddieantonio/unormalize
Author: Eddie Antonio Santos
Author-email: easantos@ualberta.ca
License: MIT
Download-URL: https://github.com/eddieantonio/unormalize
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Environment :: Console
Classifier: License :: OSI Approved :: MIT License
Classifier: Topic :: Text Processing
Classifier: Topic :: Utilities
Description-Content-Type: text/x-rst

**********
unormalize
**********

Converts UTF-8 input to the desired UTF-8 in Unicode normalization form.

Read about the `Unicode Normalization Forms`_!

=====
Usage
=====

There are five executables included, that all have the exact same usage and
arguments:

- unormalize
- nfc
- nfd
- nfkc
- nfkd

You may either redirect or pipe input into `unormalize` (and its buddies), or
provide filenames as arguments.

-------
Options
-------

``-f FORM``/``--form=FORM``
  Selects the normalization form: one of NFC, NFD, NFKC, or NFKD. The
  equivalently named executables imply their respective normalization form;
  ``unormalize`` is equivilent to ``nfk`` without the ``--form`` arugment.

``-i EXTENSION``/``--in-place EXTENSION``
  Filenames **must** be specified as arguments. If so, this opens them, and
  converts them into the desired normalization form, in place. ``EXTENSION`` is
  the extension given to back-ups of the original files.

========
Examples
========

Convert clipboard contents to NFC (macOS)::

    $ pbpaste | nfc | pbcopy

Convert a file, in-place, to NFKD::

    $ nfkd --in-place=.bak file.txt && rm file.txt.bak

Convert circled, variants, and half-widths to their compatible forms::

    $ echo 'ℍ①ｶ' | nfkc 
    H1カ

=======
License
=======

© 2015, 2017, 2020 Eddie Antonio Santos. MIT Licensed.

.. _`Unicode Normalization Forms`: http://unicode.org/reports/tr15/


