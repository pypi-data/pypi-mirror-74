- hosts: all
  name: Grenade Devstack Zaqar Base
  tasks:

    - name: Ensure legacy workspace directory
      file:
        path: '{{ ansible_user_dir }}/workspace'
        state: directory

    - shell:
        cmd: |
          set -e
          set -x
          cat > clonemap.yaml << EOF
          clonemap:
            - name: openstack/devstack-gate
              dest: devstack-gate
          EOF
          /usr/zuul-env/bin/zuul-cloner -m clonemap.yaml --cache-dir /opt/git \
              https://opendev.org \
              openstack/devstack-gate
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          cat << 'EOF' >>"/tmp/dg-local.conf"
          [[local|localrc]]
          enable_plugin zaqar https://opendev.org/openstack/zaqar
          # Enable Zaqar Tempest plugin
          TEMPEST_PLUGINS='/opt/stack/new/zaqar-tempest-plugin'

          EOF
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'

    - shell:
        cmd: |
          set -e
          set -x
          export PROJECTS="openstack/grenade $PROJECTS"
          export PROJECTS="openstack/python-zaqarclient $PROJECTS"
          export PYTHONUNBUFFERED=true
          export ENABLED_SERVICES=tempest
          export DEVSTACK_GATE_TEMPEST=0
          export DEVSTACK_GATE_TEMPEST_REGEX="zaqar_tempest_plugin.tests"

          export DEVSTACK_GATE_GRENADE=pullup
          export GRENADE_PLUGINRC="enable_grenade_plugin zaqar https://opendev.org/openstack/zaqar"
          export BRANCH_OVERRIDE=default
          if [ "$BRANCH_OVERRIDE" != "default" ] ; then
              export OVERRIDE_ZUUL_BRANCH=$BRANCH_OVERRIDE
          fi

          export PROJECTS="openstack/zaqar-tempest-plugin $PROJECTS"

          function pre_test_hook {
              cd /opt/stack/new/zaqar/zaqar_upgradetests
              ./pre_test_hook.sh
          }
          export -f pre_test_hook

          function post_test_hook {
              cd /opt/stack/new/zaqar/zaqar_upgradetests
              ./post_test_hook.sh
          }
          export -f post_test_hook

          function gate_hook {
              cd /opt/stack/new/zaqar/devstack/gate
              ./gate_hook.sh tempest "{{ database_backend }}"
          }
          export -f gate_hook

          cp devstack-gate/devstack-vm-gate-wrap.sh ./safe-devstack-vm-gate-wrap.sh
          ./safe-devstack-vm-gate-wrap.sh
        executable: /bin/bash
        chdir: '{{ ansible_user_dir }}/workspace'
      environment: '{{ zuul | zuul_legacy_vars }}'
