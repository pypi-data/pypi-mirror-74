# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from cogneed_protos.cogneed_waveform.services import waveform_loading_pb2 as cogneed__protos_dot_cogneed__waveform_dot_services_dot_waveform__loading__pb2


class WaveformLoadingServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.load = channel.unary_unary(
        '/ai.cogneed.cloud.speech.v1.WaveformLoadingService/load',
        request_serializer=cogneed__protos_dot_cogneed__waveform_dot_services_dot_waveform__loading__pb2.WaveformLoadRequest.SerializeToString,
        response_deserializer=cogneed__protos_dot_cogneed__waveform_dot_services_dot_waveform__loading__pb2.WaveformLoadResponse.FromString,
        )


class WaveformLoadingServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def load(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_WaveformLoadingServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'load': grpc.unary_unary_rpc_method_handler(
          servicer.load,
          request_deserializer=cogneed__protos_dot_cogneed__waveform_dot_services_dot_waveform__loading__pb2.WaveformLoadRequest.FromString,
          response_serializer=cogneed__protos_dot_cogneed__waveform_dot_services_dot_waveform__loading__pb2.WaveformLoadResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.cogneed.cloud.speech.v1.WaveformLoadingService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
