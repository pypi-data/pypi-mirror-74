.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_misc_plot_lstm.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_misc_plot_lstm.py:


LSTM
====

Hello world


.. code-block:: default


    import numpy as np
    import matplotlib.pyplot as plt

    from tensorflow.keras.layers import LSTM  # , Bidirectional








.. code-block:: default


    num_seqs = 5
    seq_len = 25
    num_features = 1

    seed = 42  # set random seed for reproducibility
    random_state = np.random.RandomState(seed)








.. code-block:: default


    # random walks in Euclidean space
    inputs = np.cumsum(random_state.randn(num_seqs, seq_len, num_features), axis=1)
    # lstm = Bidirectional(LSTM(units=1, return_sequences=True), merge_mode="concat")
    lstm = LSTM(units=1, return_sequences=True)
    output = lstm(inputs)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    WARNING:tensorflow:Layer lstm is casting an input tensor from dtype float64 to the layer's dtype of float32, which is new behavior in TensorFlow 2.  The layer has dtype float32 because it's dtype defaults to floatx.

    If you intended to run this layer in float32, you can safely ignore this warning. If in doubt, this warning is likely only an issue if you are porting a TensorFlow 1.X model to TensorFlow 2.

    To change all layers to have dtype float64 by default, call `tf.keras.backend.set_floatx('float64')`. To change just this layer, pass dtype='float64' to the layer constructor. If you are the author of this layer, you can disable autocasting by passing autocast=False to the base Layer constructor.






.. code-block:: default


    print(output.shape)




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (5, 25, 1)





.. code-block:: default


    fig, ax = plt.subplots()

    ax.plot(inputs[..., 0].T)

    ax.set_xlabel(r"$t$")
    ax.set_ylabel(r"$x(t)$")

    plt.show()



.. image:: /auto_examples/misc/images/sphx_glr_plot_lstm_001.png
    :alt: plot lstm
    :class: sphx-glr-single-img






.. code-block:: default


    fig, ax = plt.subplots()

    ax.plot(output.numpy()[..., 0].T)

    ax.set_xlabel(r"$t$")
    ax.set_ylabel(r"$h(t)$")

    plt.show()



.. image:: /auto_examples/misc/images/sphx_glr_plot_lstm_002.png
    :alt: plot lstm
    :class: sphx-glr-single-img






.. code-block:: default


    fig, ax = plt.subplots()

    ax.plot(inputs[..., 0].T,
            output.numpy()[..., 0].T)

    ax.set_xlabel(r"$x(t)$")
    ax.set_ylabel(r"$h(t)$")

    plt.show()



.. image:: /auto_examples/misc/images/sphx_glr_plot_lstm_003.png
    :alt: plot lstm
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.827 seconds)


.. _sphx_glr_download_auto_examples_misc_plot_lstm.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_lstm.py <plot_lstm.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_lstm.ipynb <plot_lstm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
