
#include "scv.h"

extern "C" {

struct CConstraint : public scv_constraint_base {
{% for n, t in vars.items() -%}
  scv_smart_ptr<{{t[0]}}> {{n}};
{% endfor %}

  SCV_CONSTRAINT_CTOR(CConstraint) {

{% for c in constraints -%}
    SCV_CONSTRAINT ( {{c}} );
{% endfor %}
  }
};

CConstraint *top;

int init(void) {
	top = new CConstraint("addr");
	return 0;
}

void next(void) {
  top->next();
  {# top->print(); #}
}

{% for n, t in vars.items() -%}
  {% if t[1] and (t[1] < 64 ) %}
long int get_{{n}}(void) {
    return (top->{{n}})->to_int();
}
  {% endif %}
{% endfor %}

int sc_main (int argc, char** argv) {
    return 0;
}

void set_seed(unsigned long long seed) {
    scv_random::set_global_seed(seed);
}

unsigned long long randomize_seed() {
    unsigned long long seed = scv_random::pick_random_seed();
    set_seed(seed);
    return seed;
}

}

