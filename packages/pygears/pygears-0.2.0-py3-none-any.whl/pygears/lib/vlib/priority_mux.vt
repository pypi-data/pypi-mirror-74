
{%- import 'snippet.j2' as snippet -%}
{% set Queue = import_from('pygears.typing', 'Queue') %}
{% set typeof = import_from('pygears.typing', 'typeof') %}

{% call snippet.module_with_intf_structs(module_name, intfs, intfs|isoutput, comment) %}

  {% set is_queue = typeof(_dout_t, Queue) %}

   logic [{{intfs|isinput|length - 1}}:0] flag, flag_reg; // {{intfs|isinput|length}} = no of input interfaces
   logic handshake;
   assign handshake = dout.valid && dout.ready;
{% if is_queue %}
   logic start_reg;
{% endif %}

   always_comb begin
      flag = 0;
  {% if is_queue %}
      dout_s.data.ctrl = 0;
      dout_s.data.data = din0.data;
      dout_s.eot = din0.data[{{_din0_t.width-1}}];
  {% else %}
      dout_s.ctrl = 0;
      dout_s.data = din0.data;
  {% endif %}
      dout.valid = 1'b0;
{% for i in intfs|isinput %}
      {{i['name']}}.ready = 1'b0;
{% endfor %}

      if(din0.valid && (!(|flag_reg) || flag_reg[0])) begin
         dout.valid = din0.valid;
         din0.ready = dout.ready;
         flag[0] = 1;
{% for i in intfs[1:]|isinput %}
      end else if ({{i['name']}}.valid && (!(|flag_reg) || flag_reg[{{loop.index}}])) begin
  {% if is_queue %}
         dout_s.data.data = {{i['name']}}.data;
         dout_s.data.ctrl = {{loop.index}};
         dout_s.eot = {{i['name']}}.data[{{i['width']-1}}:{{i['width']-1}}];
  {% else %}
         dout_s.data = {{i['name']}}.data;
         dout_s.ctrl = {{loop.index}};
  {% endif %}
         dout.valid = {{i['name']}}.valid;
         {{i['name']}}.ready = dout.ready;
         flag[{{loop.index}}] = 1;
{% endfor %}
      end
   end

   always_ff @(posedge clk) begin
  {% if is_queue %}
      if (rst | (handshake && dout_s.eot)) begin
         start_reg <= 0;
  {% else %}
      if (rst | handshake) begin
  {% endif %}
         flag_reg <= 0;
  {% if is_queue %}
      end else if (dout.valid && !start_reg) begin
         start_reg <= 1;
  {% else %}
      end else begin
  {% endif %}
         flag_reg <= flag;
      end
   end

{% endcall %}