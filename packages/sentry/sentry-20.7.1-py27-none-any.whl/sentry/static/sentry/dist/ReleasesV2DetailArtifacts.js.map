{"version":3,"sources":["webpack:///./app/components/links/linkWithConfirmation.tsx","webpack:///./app/components/fileSize.tsx","webpack:///./app/components/alertLink.tsx","webpack:///./app/views/releases/detail/releaseArtifacts.jsx","webpack:///./app/views/releasesV2/detail/artifacts/index.tsx"],"names":["LinkWithConfirmation","this","props","className","disabled","title","children","otherProps","href","classNames","React","PureComponent","FileSize","bytes","getDynamicText","value","formatBytes","fixed","AlertLink","size","priority","icon","onClick","withoutMarginBottom","openInNewTab","to","StyledLink","IconWrapper","src","AlertLinkText","IconLink","direction","Component","defaultProps","linkProps","omit","p","theme","alert","backgroundLight","gray700","border","space","ReleaseArtifacts","fetchData","setState","loading","error","api","request","getFilesEndpoint","method","data","location","query","Object","values","URL_PARAM","success","_","jqXHR","fileList","pageLinks","getResponseHeader","state","params","orgId","projectId","release","encodedVersion","encodeURIComponent","project","id","addLoadingMessage","t","filter","file","addSuccessMessage","addErrorMessage","onRetry","length","small","smallEmptyMessage","access","Set","organization","NameColumn","DistributionColumn","SizeAndActionsColumn","map","key","name","dist","AlignCenter","has","data-test-id","baseUrl","style","marginLeft","message","onConfirm","handleRemove","bind","withOrganization","withApi","routeTitleGen","formatVersion","slug","context","fullWidth","features","hasFeature","tct","sourceMaps","AsyncView","contextType","ReleaseContext"],"mappings":"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","file":"ReleasesV2DetailArtifacts.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\n\ntype Props = {\n  message: React.ReactNode;\n  title: string;\n  onConfirm: () => void;\n  disabled?: boolean;\n  className?: string;\n  priority?: React.ComponentProps<typeof Button>['priority'];\n};\n\n/**\n * <Confirm> is a more generic version of this component\n */\nclass LinkWithConfirmation extends React.PureComponent<Props> {\n  render() {\n    const {className, disabled, title, children, ...otherProps} = this.props;\n    return (\n      <Confirm {...otherProps} disabled={disabled}>\n        <a href=\"#\" className={classNames(className || '', {disabled})} title={title}>\n          {children}\n        </a>\n      </Confirm>\n    );\n  }\n}\n\nexport default LinkWithConfirmation;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {formatBytes} from 'app/utils';\nimport getDynamicText from 'app/utils/getDynamicText';\n\ntype Props = {\n  className?: string;\n  bytes: number;\n};\n\nfunction FileSize(props: Props) {\n  const {className, bytes} = props;\n\n  return (\n    <span className={className}>\n      {getDynamicText({value: formatBytes(bytes), fixed: 'xx KB'})}\n    </span>\n  );\n}\n\nFileSize.propTypes = {\n  className: PropTypes.string,\n  bytes: PropTypes.number.isRequired,\n};\n\nexport default FileSize;\n","import styled from '@emotion/styled';\nimport React from 'react';\nimport omit from 'lodash/omit';\n\nimport Link from 'app/components/links/link';\nimport ExternalLink from 'app/components/links/externalLink';\nimport InlineSvg from 'app/components/inlineSvg';\nimport {IconChevron} from 'app/icons';\nimport space from 'app/styles/space';\n\ntype Size = 'small' | 'normal';\ntype Priority = 'info' | 'warning' | 'success' | 'error' | 'muted';\n\ntype LinkProps = React.ComponentPropsWithoutRef<typeof Link>;\n\ntype OtherProps = {\n  icon?: string | React.ReactNode;\n  onClick?: (e: React.MouseEvent) => void;\n};\n\ntype DefaultProps = {\n  size: Size;\n  priority: Priority;\n  withoutMarginBottom: boolean;\n  openInNewTab: boolean;\n  href?: string;\n};\n\ntype Props = OtherProps & DefaultProps & Partial<Pick<LinkProps, 'to'>>;\n\ntype StyledLinkProps = DefaultProps &\n  Partial<Pick<LinkProps, 'to'>> &\n  Omit<LinkProps, 'to' | 'size'>;\n\nclass AlertLink extends React.Component<Props> {\n  static defaultProps: DefaultProps = {\n    priority: 'warning',\n    size: 'normal',\n    withoutMarginBottom: false,\n    openInNewTab: false,\n  };\n\n  render() {\n    const {\n      size,\n      priority,\n      icon,\n      children,\n      onClick,\n      withoutMarginBottom,\n      openInNewTab,\n      to,\n      href,\n    } = this.props;\n    return (\n      <StyledLink\n        to={to}\n        href={href}\n        onClick={onClick}\n        size={size}\n        priority={priority}\n        withoutMarginBottom={withoutMarginBottom}\n        openInNewTab={openInNewTab}\n      >\n        {icon && (\n          <IconWrapper>\n            {typeof icon === 'string' ? <InlineSvg src={icon} /> : icon}\n          </IconWrapper>\n        )}\n        <AlertLinkText>{children}</AlertLinkText>\n        <IconLink>\n          <IconChevron direction=\"right\" />\n        </IconLink>\n      </StyledLink>\n    );\n  }\n}\n\nexport default AlertLink;\n\nconst StyledLink = styled(({openInNewTab, to, href, ...props}: StyledLinkProps) => {\n  const linkProps = omit(props, ['withoutMarginBottom', 'priority', 'size']);\n  if (href) {\n    return <ExternalLink {...linkProps} href={href} openInNewTab={openInNewTab} />;\n  }\n\n  return <Link {...linkProps} to={to || ''} />;\n})`\n  display: flex;\n  background-color: ${p => p.theme.alert[p.priority].backgroundLight};\n  color: ${p => p.theme.gray700};\n  border: 1px dashed ${p => p.theme.alert[p.priority].border};\n  padding: ${p => (p.size === 'small' ? `${space(1)} ${space(1.5)}` : space(2))};\n  margin-bottom: ${p => (p.withoutMarginBottom ? 0 : space(3))};\n  border-radius: 0.25em;\n  transition: 0.2s border-color;\n\n  &.focus-visible {\n    outline: none;\n    box-shadow: ${p => p.theme.alert[p.priority].border}7f 0 0 0 2px;\n  }\n`;\n\nconst IconWrapper = styled('span')`\n  display: flex;\n  margin: ${space(0.5)} ${space(1.5)} ${space(0.5)} 0;\n`;\n\nconst IconLink = styled(IconWrapper)`\n  margin: ${space(0.5)} 0;\n`;\n\nconst AlertLinkText = styled('div')`\n  line-height: 1.5;\n  flex-grow: 1;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport omit from 'lodash/omit';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelHeader, PanelBody, PanelItem} from 'app/components/panels';\nimport {URL_PARAM} from 'app/constants/globalSelectionHeader';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport EmptyStateWarning from 'app/components/emptyStateWarning';\nimport FileSize from 'app/components/fileSize';\nimport LinkWithConfirmation from 'app/components/links/linkWithConfirmation';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport SentryTypes from 'app/sentryTypes';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport space from 'app/styles/space';\nimport {IconDelete, IconOpen} from 'app/icons';\n\nclass ReleaseArtifacts extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n    api: PropTypes.object,\n    projectId: PropTypes.string,\n    smallEmptyMessage: PropTypes.string,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      error: false,\n      fileList: [],\n      pageLinks: null,\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  getFilesEndpoint() {\n    const {orgId, projectId, release} = this.props.params;\n    const encodedVersion = encodeURIComponent(release);\n    const project = projectId ?? this.props.projectId;\n\n    return project\n      ? `/projects/${orgId}/${project}/releases/${encodedVersion}/files/`\n      : `/organizations/${orgId}/releases/${encodedVersion}/files/`;\n  }\n\n  fetchData = () => {\n    this.setState({\n      loading: true,\n      error: false,\n    });\n\n    this.props.api.request(this.getFilesEndpoint(), {\n      method: 'GET',\n      // We need to omit global selection header url params because they are not supported\n      data: omit(this.props.location.query, [...Object.values(URL_PARAM), 'query']),\n      success: (data, _, jqXHR) => {\n        this.setState({\n          error: false,\n          loading: false,\n          fileList: data,\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          error: true,\n          loading: false,\n        });\n      },\n    });\n  };\n\n  handleRemove(id) {\n    addLoadingMessage(t('Removing artifact\\u2026'));\n\n    this.props.api.request(this.getFilesEndpoint() + `${id}/`, {\n      method: 'DELETE',\n      success: () => {\n        const fileList = this.state.fileList.filter(file => file.id !== id);\n\n        this.setState({\n          fileList,\n        });\n\n        addSuccessMessage(t('Artifact removed.'));\n      },\n      error: () => {\n        addErrorMessage(t('Unable to remove artifact. Please try again.'));\n      },\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return <LoadingIndicator />;\n    } else if (this.state.error) {\n      return <LoadingError onRetry={this.fetchData} />;\n    } else if (this.state.fileList.length === 0) {\n      return (\n        <Panel>\n          <PanelBody>\n            <EmptyStateWarning small={this.props.smallEmptyMessage}>\n              <p>{t('There are no artifacts uploaded for this release.')}</p>\n            </EmptyStateWarning>\n          </PanelBody>\n        </Panel>\n      );\n    }\n\n    const access = new Set(this.props.organization.access);\n\n    // TODO(dcramer): files should allow you to download them\n    return (\n      <div>\n        <Panel>\n          <PanelHeader>\n            <NameColumn>{t('Name')}</NameColumn>\n            <DistributionColumn>{t('Distribution')}</DistributionColumn>\n            <SizeAndActionsColumn>{t('Size')}</SizeAndActionsColumn>\n          </PanelHeader>\n          <PanelBody>\n            {this.state.fileList.map(file => (\n              <PanelItem key={file.id}>\n                <NameColumn>\n                  <strong>{file.name || '(empty)'}</strong>\n                </NameColumn>\n                <DistributionColumn>\n                  {file.dist || <span className=\"text-light\">{t('None')}</span>}\n                </DistributionColumn>\n                <SizeAndActionsColumn>\n                  <FileSize bytes={file.size} />\n                  <AlignCenter>\n                    {access.has('project:write') ? (\n                      <Button\n                        data-test-id=\"artifact-download\"\n                        href={\n                          this.props.api.baseUrl +\n                          this.getFilesEndpoint() +\n                          `${file.id}/?download=1`\n                        }\n                        size=\"small\"\n                        icon={<IconOpen size=\"xs\" />}\n                      />\n                    ) : (\n                      <Button\n                        data-test-id=\"artifact-download\"\n                        title={t(\n                          'You do not have the required permission to download this artifact.'\n                        )}\n                        disabled\n                        size=\"small\"\n                        icon={<IconOpen size=\"xs\" />}\n                      />\n                    )}\n                    <div style={{marginLeft: 5}}>\n                      <LinkWithConfirmation\n                        className=\"btn btn-sm btn-default\"\n                        title={t('Delete artifact')}\n                        message={t('Are you sure you want to remove this artifact?')}\n                        onConfirm={this.handleRemove.bind(this, file.id)}\n                      >\n                        <IconDelete />\n                      </LinkWithConfirmation>\n                    </div>\n                  </AlignCenter>\n                </SizeAndActionsColumn>\n              </PanelItem>\n            ))}\n          </PanelBody>\n        </Panel>\n        <Pagination pageLinks={this.state.pageLinks} />\n      </div>\n    );\n  }\n}\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex: 7;\n  padding-right: ${space(2)};\n  word-wrap: break-word;\n  word-break: break-all;\n`;\nconst DistributionColumn = styled('div')`\n  display: flex;\n  flex: 2;\n  padding-right: ${space(2)};\n`;\nconst SizeAndActionsColumn = styled('div')`\n  display: flex;\n  flex: 3;\n  justify-content: space-between;\n`;\nconst AlignCenter = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport {ReleaseArtifacts};\nexport default withOrganization(withApi(ReleaseArtifacts));\n","import React from 'react';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport {t, tct} from 'app/locale';\nimport ReleaseArtifactsV1 from 'app/views/releases/detail/releaseArtifacts';\nimport AsyncView from 'app/views/asyncView';\nimport routeTitleGen from 'app/utils/routeTitle';\nimport {formatVersion} from 'app/utils/formatters';\nimport withOrganization from 'app/utils/withOrganization';\nimport {Organization} from 'app/types';\nimport AlertLink from 'app/components/alertLink';\nimport Feature from 'app/components/acl/feature';\nimport {Main} from 'app/components/layouts/thirds';\n\nimport {ReleaseContext} from '..';\n\ntype RouteParams = {\n  orgId: string;\n  release: string;\n};\n\ntype Props = RouteComponentProps<RouteParams, {}> & {\n  organization: Organization;\n};\n\nclass ReleaseArtifacts extends AsyncView<Props> {\n  static contextType = ReleaseContext;\n\n  getTitle() {\n    const {params, organization} = this.props;\n    return routeTitleGen(\n      t('Artifacts - Release %s', formatVersion(params.release)),\n      organization.slug,\n      false\n    );\n  }\n\n  renderBody() {\n    const {project} = this.context;\n    const {params, location, organization} = this.props;\n\n    return (\n      <Main fullWidth>\n        <Feature features={['artifacts-in-settings']}>\n          {({hasFeature}) =>\n            hasFeature ? (\n              <AlertLink\n                to={`/settings/${organization.slug}/projects/${\n                  project.slug\n                }/source-maps/${encodeURIComponent(params.release)}/`}\n                priority=\"info\"\n              >\n                {tct('Artifacts were moved to [sourceMaps] in Settings.', {\n                  sourceMaps: <u>{t('Source Maps')}</u>,\n                })}\n              </AlertLink>\n            ) : (\n              <ReleaseArtifactsV1\n                params={params}\n                location={location}\n                projectId={project.slug}\n                smallEmptyMessage\n              />\n            )\n          }\n        </Feature>\n      </Main>\n    );\n  }\n}\n\nexport default withOrganization(ReleaseArtifacts);\n"],"sourceRoot":""}