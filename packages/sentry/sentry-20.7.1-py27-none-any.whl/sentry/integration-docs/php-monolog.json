{
  "html": "<h2 id=\"install\">Installation</h2>\n\n<p>There are various ways to install the PHP integration for Sentry. The recommended way is to use <a href=\"http://getcomposer.org/\">Composer</a>:</p>\n\n<pre class=\"highlight\"><code><span class=\"nv\">$ </span>composer require sentry/sentry <span class=\"s2\">\"^1.0\"</span>\n</code></pre>\n\n<p>Alternatively you can manually install it:</p>\n\n<ol>\n  <li>Download and extract the latest <a href=\"https://github.com/getsentry/sentry-php/archive/master.zip\">sentry-php</a> archive to your PHP project.</li>\n  <li>\n    <p>Require the autoloader in your application:</p>\n\n    <pre class=\"highlight\"><code><span class=\"k\">require_once</span> <span class=\"s1\">'/path/to/Raven/library/Raven/Autoloader.php'</span><span class=\"p\">;</span>\n<span class=\"nx\">Raven_Autoloader</span><span class=\"o\">::</span><span class=\"na\">register</span><span class=\"p\">();</span>\n</code></pre>\n    </li>\n</ol><h3 id=\"capturing-errors\">Capturing Errors</h3>\n\n<p>Monolog supports Sentry out of the box, so you\u2019ll just need to configure a handler:</p>\n\n<pre class=\"highlight\"><code><span class=\"nv\">$client</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Raven_Client</span><span class=\"p\">(</span><span class=\"s1\">'___PUBLIC_DSN___'</span><span class=\"p\">);</span>\n\n<span class=\"nv\">$handler</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Monolog\\Handler\\RavenHandler</span><span class=\"p\">(</span><span class=\"nv\">$client</span><span class=\"p\">);</span>\n<span class=\"nv\">$handler</span><span class=\"o\">-&gt;</span><span class=\"na\">setFormatter</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"nx\">Monolog\\Formatter\\LineFormatter</span><span class=\"p\">(</span><span class=\"s2\">\"%message% %context% %extra%</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">));</span>\n\n<span class=\"nv\">$monolog</span><span class=\"o\">-&gt;</span><span class=\"na\">pushHandler</span><span class=\"p\">(</span><span class=\"nv\">$handler</span><span class=\"p\">);</span>\n</code></pre>\n\n<h3 id=\"adding-context-1\">Adding Context</h3>\n\n<p>Capturing context can be done via a monolog processor:</p>\n\n<pre class=\"highlight\"><code><span class=\"nv\">$monolog</span><span class=\"o\">-&gt;</span><span class=\"na\">pushProcessor</span><span class=\"p\">(</span><span class=\"k\">function</span> <span class=\"p\">(</span><span class=\"nv\">$record</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// record the current user</span>\n    <span class=\"nv\">$user</span> <span class=\"o\">=</span> <span class=\"nx\">Acme</span><span class=\"o\">::</span><span class=\"na\">getCurrentUser</span><span class=\"p\">();</span>\n    <span class=\"nv\">$record</span><span class=\"p\">[</span><span class=\"s1\">'context'</span><span class=\"p\">][</span><span class=\"s1\">'user'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">array</span><span class=\"p\">(</span>\n        <span class=\"s1\">'name'</span> <span class=\"o\">=&gt;</span> <span class=\"nv\">$user</span><span class=\"o\">-&gt;</span><span class=\"na\">getName</span><span class=\"p\">(),</span>\n        <span class=\"s1\">'username'</span> <span class=\"o\">=&gt;</span> <span class=\"nv\">$user</span><span class=\"o\">-&gt;</span><span class=\"na\">getUsername</span><span class=\"p\">(),</span>\n        <span class=\"s1\">'email'</span> <span class=\"o\">=&gt;</span> <span class=\"nv\">$user</span><span class=\"o\">-&gt;</span><span class=\"na\">getEmail</span><span class=\"p\">(),</span>\n    <span class=\"p\">);</span>\n\n    <span class=\"c1\">// Add various tags</span>\n    <span class=\"nv\">$record</span><span class=\"p\">[</span><span class=\"s1\">'context'</span><span class=\"p\">][</span><span class=\"s1\">'tags'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"k\">array</span><span class=\"p\">(</span><span class=\"s1\">'key'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'value'</span><span class=\"p\">);</span>\n\n    <span class=\"c1\">// Add various generic context</span>\n    <span class=\"nv\">$record</span><span class=\"p\">[</span><span class=\"s1\">'extra'</span><span class=\"p\">][</span><span class=\"s1\">'key'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'value'</span><span class=\"p\">;</span>\n\n    <span class=\"k\">return</span> <span class=\"nv\">$record</span><span class=\"p\">;</span>\n<span class=\"p\">});</span>\n</code></pre>\n\n<h3 id=\"breadcrumbs\">Breadcrumbs</h3>\n\n<p>Sentry provides a breadcrumb handler to automatically send logs along as crumbs:</p>\n\n<pre class=\"highlight\"><code><span class=\"nv\">$client</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">Raven_Client</span><span class=\"p\">(</span><span class=\"s1\">'___PUBLIC_DSN___'</span><span class=\"p\">);</span>\n\n<span class=\"nv\">$handler</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">\\Raven_Breadcrumbs_MonologHandler</span><span class=\"p\">(</span><span class=\"nv\">$client</span><span class=\"p\">);</span>\n<span class=\"nv\">$monolog</span><span class=\"o\">-&gt;</span><span class=\"na\">pushHandler</span><span class=\"p\">(</span><span class=\"nv\">$handler</span><span class=\"p\">);</span>\n</code></pre>\n<!-- TODO-ADD-VERIFICATION-EXAMPLE -->", 
  "link": "https://docs.sentry.io/clients/php/integrations/monolog/", 
  "id": "php-monolog", 
  "name": "Monolog"
}
