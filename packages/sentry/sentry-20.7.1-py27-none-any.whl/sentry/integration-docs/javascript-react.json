{
  "html": "<p>To use Sentry with your React application, you will need to use <code class=\"highlighter-rouge\">@sentry/react</code> (Sentry\u2019s Browser React SDK).</p>\n\n<div class=\"alert alert-info\" role=\"alert\">\n<h5 class=\"no_toc\">Note</h5>\n<div class=\"alert-body content-flush-bottom\">\n<p><code class=\"highlighter-rouge\">@sentry/react</code> is a wrapper around the <code class=\"highlighter-rouge\">@sentry/browser</code> package, with added functionality related to React. All methods available in the <code class=\"highlighter-rouge\">@sentry/browser</code> package can also be imported from <code class=\"highlighter-rouge\">@sentry/react</code>.</p> </div>\n</div>\n\n<p>Add the Sentry SDK as a dependency using yarn or npm:</p>\n\n<pre class=\"highlight\"><code><span class=\"c\"># Using yarn</span>\n<span class=\"nv\">$ </span>yarn add @sentry/react\n\n<span class=\"c\"># Using npm</span>\n<span class=\"nv\">$ </span>npm <span class=\"nb\">install</span> @sentry/react\n</code></pre>\n\n<h2 id=\"connecting-the-sdk-to-sentry\">Connecting the SDK to Sentry</h2>\n\n<p>After you\u2019ve completed setting up a project in Sentry, Sentry will give you a value which we call a <em>DSN</em> or <em>Data Source Name</em>. It looks a lot like a standard URL, but it\u2019s just a representation of the configuration required by the Sentry SDKs. It consists of a few pieces, including the protocol, public key, the server address, and the project identifier.</p>\n\n<p>You should <code class=\"highlighter-rouge\">init</code> the Sentry browser SDK as soon as possible during your application load up, before initializing React:</p>\n\n<pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"nx\">React</span> <span class=\"k\">from</span> <span class=\"s1\">'react'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">ReactDOM</span> <span class=\"k\">from</span> <span class=\"s1\">'react-dom'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">Sentry</span> <span class=\"k\">from</span> <span class=\"s1\">'@sentry/react'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"nx\">App</span> <span class=\"k\">from</span> <span class=\"s1\">'./App'</span><span class=\"p\">;</span>\n\n<span class=\"nx\">Sentry</span><span class=\"p\">.</span><span class=\"nx\">init</span><span class=\"p\">({</span><span class=\"na\">dsn</span><span class=\"p\">:</span> <span class=\"s2\">\"___PUBLIC_DSN___\"</span><span class=\"p\">});</span>\n\n<span class=\"nx\">ReactDOM</span><span class=\"p\">.</span><span class=\"nx\">render</span><span class=\"p\">(&lt;</span><span class=\"nc\">App</span> <span class=\"p\">/&gt;,</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">getElementById</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">));</span>\n</code></pre>\n\n<p>On its own, <code class=\"highlighter-rouge\">@sentry/react</code> will report any uncaught exceptions triggered by your application.</p>\n\n<p>You can trigger your first event from your development environment by raising an exception somewhere within your application. An example of this would be rendering a button:</p>\n\n<pre class=\"highlight\"><code><span class=\"k\">return</span> <span class=\"p\">&lt;</span><span class=\"nt\">button</span> <span class=\"na\">onClick=</span><span class=\"si\">{</span><span class=\"nx\">methodDoesNotExist</span><span class=\"si\">}</span><span class=\"p\">&gt;</span>Break the world<span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;;</span>\n</code></pre>", 
  "link": "https://docs.sentry.io/platforms/javascript/react/", 
  "id": "javascript-react", 
  "name": "React"
}
