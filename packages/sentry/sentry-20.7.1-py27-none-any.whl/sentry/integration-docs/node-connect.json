{
  "html": "<p>If you are using <code class=\"highlighter-rouge\">yarn</code> or <code class=\"highlighter-rouge\">npm</code>, you can add our package as a dependency:</p>\n\n<pre class=\"highlight\"><code><span class=\"c\"># Using yarn</span>\n<span class=\"nv\">$ </span>yarn add @sentry/node@5.19.2\n\n<span class=\"c\"># Using npm</span>\n<span class=\"nv\">$ </span>npm <span class=\"nb\">install</span> @sentry/node@5.19.2\n</code></pre>\n\n<pre class=\"highlight\"><code><span class=\"k\">import</span> <span class=\"nx\">connect</span> <span class=\"k\">from</span> <span class=\"s1\">'connect'</span><span class=\"p\">;</span>\n<span class=\"k\">import</span> <span class=\"o\">*</span> <span class=\"k\">as</span> <span class=\"nx\">Sentry</span> <span class=\"k\">from</span> <span class=\"s1\">'@sentry/node'</span><span class=\"p\">;</span>\n\n<span class=\"c1\">// or using CommonJS</span>\n<span class=\"c1\">// const connect = require('connect');</span>\n<span class=\"c1\">// const Sentry = require('@sentry/node');</span>\n\n<span class=\"c1\">// Must configure Sentry before doing anything else with it</span>\n<span class=\"nx\">Sentry</span><span class=\"p\">.</span><span class=\"nx\">init</span><span class=\"p\">({</span> <span class=\"na\">dsn</span><span class=\"p\">:</span> <span class=\"s1\">'___PUBLIC_DSN___'</span> <span class=\"p\">});</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">mainHandler</span><span class=\"p\">(</span><span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"nb\">Error</span><span class=\"p\">(</span><span class=\"s1\">'My first Sentry error!'</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">onError</span><span class=\"p\">(</span><span class=\"nx\">err</span><span class=\"p\">,</span> <span class=\"nx\">req</span><span class=\"p\">,</span> <span class=\"nx\">res</span><span class=\"p\">,</span> <span class=\"nx\">next</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n  <span class=\"c1\">// The error id is attached to `res.sentry` to be returned</span>\n  <span class=\"c1\">// and optionally displayed to the user for support.</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">statusCode</span> <span class=\"o\">=</span> <span class=\"mi\">500</span><span class=\"p\">;</span>\n  <span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">end</span><span class=\"p\">(</span><span class=\"nx\">res</span><span class=\"p\">.</span><span class=\"nx\">sentry</span> <span class=\"o\">+</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"nx\">connect</span><span class=\"p\">(</span>\n  <span class=\"c1\">// The request handler be the first item</span>\n  <span class=\"nx\">Sentry</span><span class=\"p\">.</span><span class=\"nx\">Handlers</span><span class=\"p\">.</span><span class=\"nx\">requestHandler</span><span class=\"p\">(),</span>\n\n  <span class=\"nx\">connect</span><span class=\"p\">.</span><span class=\"nx\">bodyParser</span><span class=\"p\">(),</span>\n  <span class=\"nx\">connect</span><span class=\"p\">.</span><span class=\"nx\">cookieParser</span><span class=\"p\">(),</span>\n  <span class=\"nx\">mainHandler</span><span class=\"p\">,</span>\n\n  <span class=\"c1\">// The error handler must be before any other error middleware</span>\n  <span class=\"nx\">Sentry</span><span class=\"p\">.</span><span class=\"nx\">Handlers</span><span class=\"p\">.</span><span class=\"nx\">errorHandler</span><span class=\"p\">(),</span>\n\n  <span class=\"c1\">// Optional fallthrough error handler</span>\n  <span class=\"nx\">onError</span>\n<span class=\"p\">).</span><span class=\"nx\">listen</span><span class=\"p\">(</span><span class=\"mi\">3000</span><span class=\"p\">);</span>\n</code></pre>\n\n<p><code class=\"highlighter-rouge\">requestHandler</code> accepts some options that let you decide what data should be included in the event sent to Sentry.</p>\n\n<p>Possible options are:</p>\n\n<pre class=\"highlight\"><code><span class=\"c1\">// keys to be extracted from req</span>\n<span class=\"nx\">request</span><span class=\"p\">?:</span> <span class=\"kr\">boolean</span> <span class=\"o\">|</span> <span class=\"nx\">string</span><span class=\"p\">[];</span> <span class=\"c1\">// default: true = ['cookies', 'data', 'headers', 'method', 'query_string', 'url']</span>\n<span class=\"c1\">// server name</span>\n<span class=\"nx\">serverName</span><span class=\"p\">?:</span> <span class=\"kr\">boolean</span><span class=\"p\">;</span> <span class=\"c1\">// default: true</span>\n<span class=\"c1\">// generate transaction name</span>\n<span class=\"c1\">//   path == request.path (eg. \"/foo\")</span>\n<span class=\"c1\">//   methodPath == request.method + request.path (eg. \"GET|/foo\")</span>\n<span class=\"c1\">//   handler == function name (eg. \"fooHandler\")</span>\n<span class=\"nx\">transaction</span><span class=\"p\">?:</span> <span class=\"kr\">boolean</span> <span class=\"o\">|</span> <span class=\"s1\">'path'</span> <span class=\"o\">|</span> <span class=\"s1\">'methodPath'</span> <span class=\"o\">|</span> <span class=\"s1\">'handler'</span><span class=\"p\">;</span> <span class=\"c1\">// default: true = 'methodPath'</span>\n<span class=\"c1\">// keys to be extracted from req.user</span>\n<span class=\"nx\">user</span><span class=\"p\">?:</span> <span class=\"kr\">boolean</span> <span class=\"o\">|</span> <span class=\"nx\">string</span><span class=\"p\">[];</span> <span class=\"c1\">// default: true = ['id', 'username', 'email']</span>\n<span class=\"c1\">// client ip address</span>\n<span class=\"nx\">ip</span><span class=\"p\">?:</span> <span class=\"kr\">boolean</span><span class=\"p\">;</span> <span class=\"c1\">// default: false</span>\n<span class=\"c1\">// node version</span>\n<span class=\"nx\">version</span><span class=\"p\">?:</span> <span class=\"kr\">boolean</span><span class=\"p\">;</span> <span class=\"c1\">// default: true</span>\n<span class=\"c1\">// timeout for fatal route errors to be delivered</span>\n<span class=\"nx\">flushTimeout</span><span class=\"p\">?:</span> <span class=\"nx\">number</span><span class=\"p\">;</span> <span class=\"c1\">// default: 2000</span>\n</code></pre>\n\n<p>For example, if you want to skip the server name and add just user, you would use <code class=\"highlighter-rouge\">requestHandler</code> like this:</p>\n\n<pre class=\"highlight\"><code><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">Sentry</span><span class=\"p\">.</span><span class=\"nx\">Handlers</span><span class=\"p\">.</span><span class=\"nx\">requestHandler</span><span class=\"p\">({</span>\n  <span class=\"na\">serverName</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n  <span class=\"na\">user</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'email'</span><span class=\"p\">]</span>\n<span class=\"p\">}));</span>\n</code></pre>\n\n<p>By default, <code class=\"highlighter-rouge\">errorHandler</code> will capture only errors with a status code of <code class=\"highlighter-rouge\">500</code> or higher. If you want to change it, provide it with the <code class=\"highlighter-rouge\">shouldHandleError</code> callback, which accepts middleware errors as its argument and decides, whether an error should be sent or not, by returning an appropriate boolean value.</p>\n\n<pre class=\"highlight\"><code><span class=\"nx\">app</span><span class=\"p\">.</span><span class=\"nx\">use</span><span class=\"p\">(</span><span class=\"nx\">Sentry</span><span class=\"p\">.</span><span class=\"nx\">Handlers</span><span class=\"p\">.</span><span class=\"nx\">errorHandler</span><span class=\"p\">({</span>\n  <span class=\"nx\">shouldHandleError</span><span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"c1\">// Capture all 404 and 500 errors</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">status</span> <span class=\"o\">===</span> <span class=\"mi\">404</span> <span class=\"o\">||</span> <span class=\"nx\">error</span><span class=\"p\">.</span><span class=\"nx\">status</span> <span class=\"o\">===</span> <span class=\"mi\">500</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"kc\">true</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"kc\">false</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}));</span>\n</code></pre>", 
  "link": "https://docs.sentry.io/platforms/node/connect/", 
  "id": "node-connect", 
  "name": "Connect"
}
