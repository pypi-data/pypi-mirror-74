{"version":3,"sources":["webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/components/avatar/avatarList.tsx","webpack:///./images/spot/releases.svg","webpack:///./images/spot/breadcrumbs-generic.svg","webpack:///./images/spot/code-arguments-tags-mirrored.svg","webpack:///./app/utils/withTeamsForUser.tsx","webpack:///./app/utils/getProjectsByTeams.tsx","webpack:///./app/components/resourceCard.tsx","webpack:///./app/views/projectsDashboard/resources.jsx","webpack:///./app/views/projectsDashboard/teamMembers.jsx","webpack:///./app/views/projectsDashboard/chart.jsx","webpack:///./app/views/projectsDashboard/deploys.jsx","webpack:///./app/views/projectsDashboard/noEvents.jsx","webpack:///./app/views/projectsDashboard/projectCard.jsx","webpack:///./app/views/projectsDashboard/teamSection.jsx","webpack:///./app/views/projectsDashboard/index.jsx"],"names":["SentryDocumentTitle","props","_title","title","objSlug","children","AvatarList","this","className","users","avatarSize","maxVisibleAvatars","renderTooltip","typeMembers","tooltipOptions","visibleUsers","slice","numCollapsedUsers","length","position","AvatarListWrapper","CollapsedUsers","size","Plus","map","user","StyledAvatar","key","id","email","hasTooltip","React","Component","defaultProps","Circle","UserAvatar","p","theme","gray300","gray500","Math","floor","module","exports","withTeamsForUser","WrappedComponent","state","teams","loadingTeams","error","fetchTeams","setState","metric","mark","name","api","requestPromise","getUsersTeamsEndpoint","teamsWithProjects","measure","start","data","route","organization_id","parseInt","organization","projects","projectsByTeam","isSuperuser","teamlessProjects","usersTeams","Set","filter","team","isMember","slug","forEach","project","push","has","hasOwnProperty","getProjectsByTeams","ConfigStore","get","displayName","getDisplayName","ResourceCard","link","imgUrl","ResourceCardWrapper","onClick","analytics","StyledLink","href","StyledImg","src","alt","StyledTitle","Panel","space","ExternalLink","gray700","fontSizeLarge","Resources","ResourcesWrapper","data-test-id","t","ResourceCards","releasesImg","breadcrumbsImg","docsImg","borderLight","TeamMembers","orgId","teamId","members","AsyncComponent","Chart","stats","d","x","y","StyledBarChart","points","label","height","gap","BarChart","Deploys","deploys","Object","entries","latestDeploys","environment","sort","a","b","Date","dateFinished","DeployContainer","deploy","version","Deploy","DeployRow","Environment","StyledTextOverflow","projectId","tooltipRawVersion","truncate","DeployTimeWrapper","getDynamicText","value","moment","fromNow","fixed","TextOverflow","gray100","borderRadius","NoDeploys","Background","external","NoEvents","Container","EmptyText","ProjectCard","Client","loadStatsForProject","hasProjectAccess","firstEvent","ProjectCardWrapper","width","StyledProjectCard","StyledProjectCardHeader","StyledIdBadge","to","ChartContainer","noEvents","LoadingCard","ProjectCardContainer","createReactClass","mixins","Reflux","listenTo","ProjectsStatsStore","getInitialState","projectDetails","onProjectStoreUpdate","itemsBySlug","render","Box","borderDark","dropShadowLight","IdBadge","withOrganization","TeamSection","showBorder","access","hasTeamAccess","TeamSectionWrapper","TeamTitleBar","TeamName","ProjectCards","PageHeading","Dashboard","reset","params","message","filteredTeams","team1","team2","localeCompare","uniq","flatten","teamObj","favorites","isBookmarked","canCreateProjects","hasTeamAdminAccess","showEmptyMessage","showResources","Fragment","ProjectsHeader","disabled","undefined","icon","isCircled","index","once","debounce","offset","TeamLink","sortProjects","OrganizationDashboard","OrganizationDashboardWrapper","Link","withApi","withProfiler"],"mappings":"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","file":"ProjectsDashboard.js","sourcesContent":["import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport {css} from '@emotion/core';\n\nimport {AvatarUser} from 'app/types';\nimport SentryTypes from 'app/sentryTypes';\nimport UserAvatar from 'app/components/avatar/userAvatar';\nimport Tooltip from 'app/components/tooltip';\n\nconst defaultProps = {\n  avatarSize: 28,\n  maxVisibleAvatars: 5,\n  typeMembers: 'users',\n  tooltipOptions: {},\n};\n\ntype DefaultProps = Readonly<typeof defaultProps>;\ntype Mutable<T> = {-readonly [P in keyof T]: T[P]};\n\ntype Props = {\n  className?: string;\n  users: AvatarUser[];\n  renderTooltip?: UserAvatar['props']['renderTooltip'];\n  tooltipOptions: Mutable<UserAvatar['props']['tooltipOptions']>;\n} & DefaultProps;\n\nexport default class AvatarList extends React.Component<Props> {\n  static propTypes = {\n    users: PropTypes.arrayOf(SentryTypes.User).isRequired,\n    avatarSize: PropTypes.number,\n    maxVisibleAvatars: PropTypes.number,\n    renderTooltip: PropTypes.func,\n    tooltipOptions: PropTypes.object,\n    typeMembers: PropTypes.string,\n  };\n\n  static defaultProps = defaultProps;\n\n  render() {\n    const {\n      className,\n      users,\n      avatarSize,\n      maxVisibleAvatars,\n      renderTooltip,\n      typeMembers,\n      tooltipOptions,\n    } = this.props;\n\n    const visibleUsers = users.slice(0, maxVisibleAvatars);\n    const numCollapsedUsers = users.length - visibleUsers.length;\n\n    if (!tooltipOptions.position) {\n      tooltipOptions.position = 'top';\n    }\n\n    return (\n      <AvatarListWrapper className={className}>\n        {!!numCollapsedUsers && (\n          <Tooltip title={`${numCollapsedUsers} other ${typeMembers}`}>\n            <CollapsedUsers size={avatarSize}>\n              {numCollapsedUsers < 99 && <Plus>+</Plus>}\n              {numCollapsedUsers}\n            </CollapsedUsers>\n          </Tooltip>\n        )}\n        {visibleUsers.map(user => (\n          <StyledAvatar\n            key={`${user.id}-${user.email}`}\n            user={user}\n            size={avatarSize}\n            renderTooltip={renderTooltip}\n            tooltipOptions={tooltipOptions}\n            hasTooltip\n          />\n        ))}\n      </AvatarListWrapper>\n    );\n  }\n}\n\n// used in releases list page to do some alignment\nexport const AvatarListWrapper = styled('div')`\n  display: flex;\n  flex-direction: row-reverse;\n`;\n\nconst Circle = css`\n  border-radius: 50%;\n  border: 2px solid white;\n  margin-left: -8px;\n  cursor: default;\n\n  &:hover {\n    z-index: 1;\n  }\n`;\n\nconst StyledAvatar = styled(UserAvatar)`\n  overflow: hidden;\n  ${Circle};\n`;\n\nconst CollapsedUsers = styled('div')<{size: number}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  text-align: center;\n  font-weight: 600;\n  background-color: ${p => p.theme.gray300};\n  color: ${p => p.theme.gray500};\n  font-size: ${p => Math.floor(p.size / 2.3)}px;\n  width: ${p => p.size}px;\n  height: ${p => p.size}px;\n  ${Circle};\n`;\n\nconst Plus = styled('span')`\n  font-size: 10px;\n  margin-left: 1px;\n  margin-right: -1px;\n`;\n","module.exports = __webpack_public_path__ + \"releases.07d461.svg\";","module.exports = __webpack_public_path__ + \"breadcrumbs-generic.f48299.svg\";","module.exports = __webpack_public_path__ + \"code-arguments-tags-mirrored.83a400.svg\";","import React from 'react';\n\nimport {Client} from 'app/api';\nimport {Organization, Project, Team, TeamWithProjects} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\nimport getProjectsByTeams from 'app/utils/getProjectsByTeams';\nimport ConfigStore from 'app/stores/configStore';\n\nimport {metric} from './analytics';\n\n// We require these props when using this HOC\ntype DependentProps = {\n  api: Client;\n  organization: Organization;\n};\n\ntype InjectedTeamsProps = {\n  teams: TeamWithProjects[];\n  loadingTeams: boolean;\n  error: Error | null;\n};\n\nconst withTeamsForUser = <P extends InjectedTeamsProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  class extends React.Component<\n    Omit<P, keyof InjectedTeamsProps> & Partial<InjectedTeamsProps> & DependentProps,\n    InjectedTeamsProps\n  > {\n    static displayName = `withUsersTeams(${getDisplayName(WrappedComponent)})`;\n\n    state = {\n      teams: [],\n      loadingTeams: true,\n      error: null,\n    };\n\n    componentDidMount() {\n      this.fetchTeams();\n    }\n\n    async fetchTeams() {\n      this.setState({\n        loadingTeams: true,\n      });\n\n      try {\n        metric.mark({name: 'user-teams-fetch-start'});\n        const teamsWithProjects: TeamWithProjects[] = await this.props.api.requestPromise(\n          this.getUsersTeamsEndpoint()\n        );\n        this.setState(\n          {\n            teams: teamsWithProjects,\n            loadingTeams: false,\n          },\n          () => {\n            metric.measure({\n              name: 'app.component.perf',\n              start: 'user-teams-fetch-start',\n              data: {\n                name: 'user-teams',\n                route: '/organizations/:orgid/user-teams',\n                organization_id: parseInt(this.props.organization.id, 10),\n              },\n            });\n          }\n        );\n      } catch (error) {\n        this.setState({\n          error,\n          loadingTeams: false,\n        });\n      }\n    }\n\n    populateTeamsWithProjects(teams: Team[], projects: Project[]) {\n      const {isSuperuser} = ConfigStore.get('user');\n      const {projectsByTeam} = getProjectsByTeams(teams, projects, isSuperuser);\n      const teamsWithProjects: TeamWithProjects[] = teams.map(team => {\n        const teamProjects = projectsByTeam[team.slug] || [];\n        return {...team, projects: teamProjects};\n      });\n      this.setState({\n        teams: teamsWithProjects,\n        loadingTeams: false,\n      });\n    }\n\n    getUsersTeamsEndpoint() {\n      return `/organizations/${this.props.organization.slug}/user-teams/`;\n    }\n\n    render() {\n      return <WrappedComponent {...(this.props as P & DependentProps)} {...this.state} />;\n    }\n  };\n\nexport default withTeamsForUser;\n","import {Project, Team} from 'app/types';\n\nexport default function getProjectsByTeams(\n  teams: Team[],\n  projects: Project[],\n  isSuperuser: boolean = false\n): {projectsByTeam: {[teamSlug: string]: Project[]}; teamlessProjects: Project[]} {\n  const projectsByTeam = {};\n  const teamlessProjects: Project[] = [];\n  let usersTeams = new Set(teams.filter(team => team.isMember).map(team => team.slug));\n\n  if (usersTeams.size === 0 && isSuperuser) {\n    usersTeams = new Set(teams.map(team => team.slug));\n  }\n\n  projects.forEach(project => {\n    if (!project.teams.length && project.isMember) {\n      teamlessProjects.push(project);\n    } else {\n      project.teams.forEach(team => {\n        if (!usersTeams.has(team.slug)) {\n          return;\n        }\n        if (!projectsByTeam.hasOwnProperty(team.slug)) {\n          projectsByTeam[team.slug] = [];\n        }\n        projectsByTeam[team.slug].push(project);\n      });\n    }\n  });\n\n  return {projectsByTeam, teamlessProjects};\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {analytics} from 'app/utils/analytics';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel} from 'app/components/panels';\nimport space from 'app/styles/space';\n\ntype Props = {\n  title: string;\n  link: string;\n  imgUrl: string;\n};\n\nconst ResourceCard = ({title, link, imgUrl}: Props) => (\n  <ResourceCardWrapper\n    onClick={() => analytics('orgdash.resource_clicked', {link, title})}\n  >\n    <StyledLink href={link}>\n      <StyledImg src={imgUrl} alt={title} />\n      <StyledTitle>{title}</StyledTitle>\n    </StyledLink>\n  </ResourceCardWrapper>\n);\n\nexport default ResourceCard;\n\nconst ResourceCardWrapper = styled(Panel)`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  padding: ${space(3)};\n  margin-bottom: 0;\n`;\n\nconst StyledLink = styled(ExternalLink)`\n  flex: 1;\n`;\n\nconst StyledImg = styled('img')`\n  display: block;\n  margin: 0 auto ${space(3)} auto;\n  height: 160px;\n`;\n\nconst StyledTitle = styled('div')`\n  color: ${p => p.theme.gray700};\n  font-size: ${p => p.theme.fontSizeLarge};\n  text-align: center;\n  font-weight: bold;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {analytics} from 'app/utils/analytics';\nimport PageHeading from 'app/components/pageHeading';\nimport ResourceCard from 'app/components/resourceCard';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nimport releasesImg from '../../../images/spot/releases.svg';\nimport breadcrumbsImg from '../../../images/spot/breadcrumbs-generic.svg';\nimport docsImg from '../../../images/spot/code-arguments-tags-mirrored.svg';\n\nexport default class Resources extends React.Component {\n  componentDidMount() {\n    analytics('orgdash.resources_shown');\n  }\n\n  render() {\n    return (\n      <ResourcesWrapper data-test-id=\"resources\">\n        <PageHeading>{t('Resources')}</PageHeading>\n        <ResourceCards>\n          <ResourceCard\n            link=\"https://blog.sentry.io/2018/03/06/the-sentry-workflow\"\n            imgUrl={releasesImg}\n            title={t('The Sentry Workflow')}\n          />\n          <ResourceCard\n            link=\"https://sentry.io/vs/logging/\"\n            imgUrl={breadcrumbsImg}\n            title={t('Sentry vs Logging')}\n          />\n          <ResourceCard\n            link=\"https://docs.sentry.io/\"\n            imgUrl={docsImg}\n            title={t('Docs')}\n          />\n        </ResourceCards>\n      </ResourcesWrapper>\n    );\n  }\n}\n\nconst ResourcesWrapper = styled('div')`\n  border-top: 1px solid ${p => p.theme.borderLight};\n  padding: 25px 30px 10px 30px;\n`;\n\nconst ResourceCards = styled('div')`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: ${space(4)};\n  margin-top: ${space(3)};\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport AvatarList from 'app/components/avatar/avatarList';\n\nexport default class TeamMembers extends AsyncComponent {\n  static propTypes = {\n    teamId: PropTypes.string.isRequired,\n    orgId: PropTypes.string.isRequired,\n  };\n\n  getEndpoints() {\n    const {orgId, teamId} = this.props;\n    return [['members', `/teams/${orgId}/${teamId}/members/`]];\n  }\n\n  renderLoading() {\n    return null;\n  }\n\n  renderBody() {\n    if (this.state.members) {\n      const users = this.state.members.filter(({user}) => !!user).map(({user}) => user);\n      return <AvatarList users={users} />;\n    }\n    return null;\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nimport BarChart from 'app/components/barChart';\n\nexport default class Chart extends React.Component {\n  static propTypes = {\n    stats: PropTypes.array,\n  };\n\n  static defaultProps = {\n    stats: [],\n  };\n\n  render() {\n    const data = this.props.stats.map(d => ({x: d[0], y: d[1]}));\n\n    return (\n      <div>\n        <StyledBarChart points={data} label=\"events\" height={60} gap={1.5} />\n      </div>\n    );\n  }\n}\n\nconst StyledBarChart = styled(BarChart)`\n  a {\n    &:not(:first-child) {\n      border-left: 2px solid transparent;\n    }\n    &:not(:last-child) {\n      border-right: 2px solid transparent;\n    }\n    > span {\n      left: 0;\n      right: 0;\n    }\n  }\n`;\n","import React from 'react';\nimport moment from 'moment-timezone';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport SentryTypes from 'app/sentryTypes';\nimport TextOverflow from 'app/components/textOverflow';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport Version from 'app/components/version';\nimport space from 'app/styles/space';\n\nconst DEPLOY_COUNT = 2;\n\nexport default class Deploys extends React.Component {\n  static propTypes = {\n    project: SentryTypes.Project.isRequired,\n    organization: SentryTypes.Organization.isRequired,\n  };\n\n  render() {\n    const {project, organization} = this.props;\n\n    const flattenedDeploys = Object.entries(\n      project.latestDeploys || {}\n    ).map(([environment, value]) => ({environment, ...value}));\n\n    const deploys = (flattenedDeploys || [])\n      .sort((a, b) => new Date(b.dateFinished) - new Date(a.dateFinished))\n      .slice(0, DEPLOY_COUNT);\n\n    if (deploys.length) {\n      return (\n        <DeployContainer>\n          {deploys.map(deploy => (\n            <Deploy\n              key={`${deploy.environment}-${deploy.version}`}\n              deploy={deploy}\n              project={project}\n              organization={organization}\n            />\n          ))}\n        </DeployContainer>\n      );\n    } else {\n      return <NoDeploys />;\n    }\n  }\n}\n\nclass Deploy extends React.Component {\n  static propTypes = {\n    deploy: SentryTypes.Deploy.isRequired,\n    project: SentryTypes.Project.isRequired,\n  };\n\n  render() {\n    const {deploy, project} = this.props;\n\n    return (\n      <DeployRow>\n        <Environment>{deploy.environment}</Environment>\n\n        <StyledTextOverflow>\n          <Version\n            version={deploy.version}\n            projectId={project.id}\n            tooltipRawVersion\n            truncate\n          />\n        </StyledTextOverflow>\n\n        <DeployTimeWrapper>\n          {getDynamicText({\n            value: moment(deploy.dateFinished).fromNow(),\n            fixed: '3 hours ago',\n          })}\n        </DeployTimeWrapper>\n      </DeployRow>\n    );\n  }\n}\n\nconst DeployRow = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  color: ${p => p.theme.gray500};\n  font-size: 12px;\n\n  &:not(:last-of-type) {\n    margin-top: ${space(1)};\n  }\n`;\n\nconst Environment = styled(TextOverflow)`\n  font-size: 11px;\n  text-transform: uppercase;\n  width: 80px;\n  border: 1px solid ${p => p.theme.borderLight};\n  margin-right: ${space(1)};\n  background-color: ${p => p.theme.gray100};\n  text-align: center;\n  border-radius: ${p => p.theme.borderRadius};\n  flex-shrink: 0;\n`;\n\nconst StyledTextOverflow = styled(TextOverflow)`\n  margin-right: ${space(1)};\n`;\n\nconst DeployTimeWrapper = styled('div')`\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 90px;\n  flex-grow: 1;\n  flex-shrink: 0;\n  text-align: right;\n`;\n\nclass NoDeploys extends React.Component {\n  render() {\n    return (\n      <DeployContainer>\n        <Background>\n          <Button size=\"xsmall\" href=\"https://docs.sentry.io/learn/releases/\" external>\n            {t('Track deploys')}\n          </Button>\n        </Background>\n      </DeployContainer>\n    );\n  }\n}\n\nconst DeployContainer = styled('div')`\n  height: 92px;\n  padding: ${space(2)};\n`;\n\nconst Background = styled('div')`\n  display: flex;\n  height: 100%;\n  background-color: ${p => p.theme.gray100};\n  align-items: center;\n  justify-content: center;\n`;\n","import React from 'react';\nimport styled from '@emotion/styled';\n\nimport {t} from 'app/locale';\n\nexport default class NoEvents extends React.Component {\n  render() {\n    return (\n      <Container>\n        <EmptyText>{t('No activity yet.')}</EmptyText>\n      </Container>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n`;\n\nconst EmptyText = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-left: 4px;\n  margin-right: 4px;\n  height: 68px;\n  color: ${p => p.theme.gray500};\n`;\n","import {Box} from 'reflexbox';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\nimport styled from '@emotion/styled';\n\nimport BookmarkStar from 'app/components/projects/bookmarkStar';\nimport {Client} from 'app/api';\nimport {loadStatsForProject} from 'app/actionCreators/projects';\nimport IdBadge from 'app/components/idBadge';\nimport Link from 'app/components/links/link';\nimport ProjectsStatsStore from 'app/stores/projectsStatsStore';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport Chart from './chart';\nimport Deploys from './deploys';\nimport NoEvents from './noEvents';\n\nclass ProjectCard extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n    project: SentryTypes.Project.isRequired,\n    hasProjectAccess: PropTypes.bool,\n  };\n\n  componentDidMount() {\n    const {organization, project} = this.props;\n\n    this.api = new Client();\n\n    // fetch project stats\n    loadStatsForProject(this.api, project.id, {\n      orgId: organization.slug,\n    });\n  }\n\n  render() {\n    const {organization, project, hasProjectAccess} = this.props;\n    const {id, firstEvent, stats, slug} = project;\n\n    return (\n      <ProjectCardWrapper data-test-id={slug} width={['100%', '50%', '33%', '25%']}>\n        {stats ? (\n          <StyledProjectCard>\n            <StyledProjectCardHeader>\n              <StyledIdBadge\n                project={project}\n                avatarSize={18}\n                displayName={\n                  hasProjectAccess ? (\n                    <Link\n                      to={`/organizations/${organization.slug}/issues/?project=${id}`}\n                    >\n                      <strong>{slug}</strong>\n                    </Link>\n                  ) : (\n                    <span>{slug}</span>\n                  )\n                }\n              />\n              <BookmarkStar organization={organization} project={project} />\n            </StyledProjectCardHeader>\n            <ChartContainer>\n              <Chart stats={stats} noEvents={!firstEvent} />\n              {!firstEvent && <NoEvents />}\n            </ChartContainer>\n            <Deploys project={project} organization={organization} />\n          </StyledProjectCard>\n        ) : (\n          <LoadingCard />\n        )}\n      </ProjectCardWrapper>\n    );\n  }\n}\n\nconst ProjectCardContainer = createReactClass({\n  propTypes: {\n    project: SentryTypes.Project,\n  },\n  mixins: [Reflux.listenTo(ProjectsStatsStore, 'onProjectStoreUpdate')],\n  getInitialState() {\n    const {project} = this.props;\n    const initialState = ProjectsStatsStore.getInitialState() || {};\n    return {\n      projectDetails: initialState[project.slug] || null,\n    };\n  },\n  onProjectStoreUpdate(itemsBySlug) {\n    const {project} = this.props;\n\n    // Don't update state if we already have stats\n    if (!itemsBySlug[project.slug]) {\n      return;\n    }\n    if (itemsBySlug[project.slug] === this.state.projectDetails) {\n      return;\n    }\n\n    this.setState({\n      projectDetails: itemsBySlug[project.slug],\n    });\n  },\n  render() {\n    const {project, ...props} = this.props;\n    const {projectDetails} = this.state;\n    return (\n      <ProjectCard\n        {...props}\n        project={{\n          ...project,\n          ...(projectDetails || {}),\n        }}\n      />\n    );\n  },\n});\n\nconst ChartContainer = styled('div')`\n  position: relative;\n  background: ${p => p.theme.gray100};\n  padding-top: ${space(1)};\n`;\n\nconst StyledProjectCardHeader = styled('div')`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin: 12px ${space(2)};\n`;\n\nconst ProjectCardWrapper = styled(Box)`\n  padding: 10px;\n`;\n\nconst StyledProjectCard = styled('div')`\n  background-color: white;\n  border: 1px solid ${p => p.theme.borderDark};\n  border-radius: ${p => p.theme.borderRadius};\n  box-shadow: ${p => p.theme.dropShadowLight};\n`;\n\nconst LoadingCard = styled('div')`\n  border: 1px solid transparent;\n  background-color: ${p => p.theme.gray100};\n  height: 210px;\n`;\n\nconst StyledIdBadge = styled(IdBadge)`\n  overflow: hidden;\n  white-space: nowrap;\n`;\n\nexport {ProjectCard};\nexport default withOrganization(ProjectCardContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport PageHeading from 'app/components/pageHeading';\n\nimport TeamMembers from './teamMembers';\nimport ProjectCard from './projectCard';\n\nclass TeamSection extends React.Component {\n  static propTypes = {\n    team: SentryTypes.Team,\n    orgId: PropTypes.string,\n    showBorder: PropTypes.bool,\n    access: PropTypes.object,\n    title: PropTypes.node,\n    projects: PropTypes.array,\n  };\n\n  render() {\n    const {team, projects, title, showBorder, orgId, access} = this.props;\n\n    const hasTeamAccess = access.has('team:read');\n    const hasProjectAccess = access.has('project:read');\n\n    return (\n      <TeamSectionWrapper data-test-id=\"team\" showBorder={showBorder}>\n        <TeamTitleBar>\n          <TeamName>{title}</TeamName>\n          {hasTeamAccess && team && <TeamMembers teamId={team.slug} orgId={orgId} />}\n        </TeamTitleBar>\n        <ProjectCards>\n          {projects.map(project => (\n            <ProjectCard\n              data-test-id={project.slug}\n              key={project.slug}\n              project={project}\n              hasProjectAccess={hasProjectAccess}\n            />\n          ))}\n        </ProjectCards>\n      </TeamSectionWrapper>\n    );\n  }\n}\n\nconst ProjectCards = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 0 ${space(3)} ${space(3)};\n`;\n\nconst TeamSectionWrapper = styled('div')`\n  border-bottom: ${p => (p.showBorder ? '1px solid ' + p.theme.borderLight : 0)};\n\n  &:last-child {\n    ${ProjectCards} {\n      padding-bottom: 0;\n    }\n  }\n`;\n\nconst TeamTitleBar = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(3)} ${space(4)} 10px;\n`;\n\nconst TeamName = styled(PageHeading)`\n  font-size: 20px;\n  line-height: 24px; /* We need this so that header doesn't flicker when lazy loading because avatarList height > this */\n`;\n\nexport default TeamSection;\n","import {Link} from 'react-router';\nimport LazyLoad from 'react-lazyload';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from '@emotion/styled';\nimport uniq from 'lodash/uniq';\nimport flatten from 'lodash/flatten';\nimport {withProfiler} from '@sentry/react';\n\nimport {sortProjects} from 'app/utils';\nimport {t} from 'app/locale';\nimport LoadingError from 'app/components/loadingError';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport NoProjectMessage from 'app/components/noProjectMessage';\nimport PageHeading from 'app/components/pageHeading';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport ProjectsStatsStore from 'app/stores/projectsStatsStore';\nimport SentryTypes from 'app/sentryTypes';\nimport space from 'app/styles/space';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport withTeamsForUser from 'app/utils/withTeamsForUser';\nimport {IconAdd} from 'app/icons';\n\nimport Resources from './resources';\nimport TeamSection from './teamSection';\n\nclass Dashboard extends React.Component {\n  static propTypes = {\n    teams: PropTypes.array,\n    organization: SentryTypes.Organization,\n    loadingTeams: PropTypes.bool,\n    error: PropTypes.instanceOf(Error),\n  };\n\n  componentWillUnmount() {\n    ProjectsStatsStore.reset();\n  }\n\n  render() {\n    const {teams, params, organization, loadingTeams, error} = this.props;\n\n    if (loadingTeams) {\n      return <LoadingIndicator />;\n    }\n\n    if (error) {\n      return <LoadingError message=\"An error occurred while fetching your projects\" />;\n    }\n\n    const filteredTeams = teams.filter(team => team.projects.length);\n    filteredTeams.sort((team1, team2) => team1.slug.localeCompare(team2.slug));\n\n    const projects = uniq(flatten(teams.map(teamObj => teamObj.projects)), 'id');\n    const favorites = projects.filter(project => project.isBookmarked);\n\n    const access = new Set(organization.access);\n    const canCreateProjects = access.has('project:admin');\n    const hasTeamAdminAccess = access.has('team:admin');\n\n    const showEmptyMessage = projects.length === 0 && favorites.length === 0;\n    const showResources = projects.length === 1 && !projects[0].firstEvent;\n\n    if (showEmptyMessage) {\n      return (\n        <NoProjectMessage organization={organization} projects={projects}>\n          {null}\n        </NoProjectMessage>\n      );\n    }\n    return (\n      <React.Fragment>\n        <SentryDocumentTitle\n          title={t('Projects Dashboard')}\n          objSlug={organization.slug}\n        />\n        {projects.length > 0 && (\n          <ProjectsHeader>\n            <PageHeading>Projects</PageHeading>\n            <Button\n              size=\"small\"\n              disabled={!canCreateProjects}\n              title={\n                !canCreateProjects\n                  ? t('You do not have permission to create projects')\n                  : undefined\n              }\n              to={`/organizations/${organization.slug}/projects/new/`}\n              icon={<IconAdd size=\"xs\" isCircled />}\n              data-test-id=\"create-project\"\n            >\n              {t('Create Project')}\n            </Button>\n          </ProjectsHeader>\n        )}\n\n        {filteredTeams.map((team, index) => {\n          const showBorder = index !== teams.length - 1;\n          return (\n            <LazyLoad key={team.slug} once debounce={50} height={300} offset={300}>\n              <TeamSection\n                orgId={params.orgId}\n                team={team}\n                showBorder={showBorder}\n                title={\n                  hasTeamAdminAccess ? (\n                    <TeamLink to={`/settings/${organization.slug}/teams/${team.slug}/`}>\n                      <IdBadge team={team} avatarSize={22} />\n                    </TeamLink>\n                  ) : (\n                    <IdBadge team={team} avatarSize={22} />\n                  )\n                }\n                projects={sortProjects(team.projects)}\n                access={access}\n              />\n            </LazyLoad>\n          );\n        })}\n\n        {showResources && <Resources />}\n      </React.Fragment>\n    );\n  }\n}\n\nconst OrganizationDashboard = props => (\n  <OrganizationDashboardWrapper>\n    <Dashboard {...props} />\n  </OrganizationDashboardWrapper>\n);\n\nconst TeamLink = styled(Link)`\n  display: flex;\n  align-items: center;\n`;\n\nconst ProjectsHeader = styled('div')`\n  padding: ${space(3)} ${space(4)} 0 ${space(4)};\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst OrganizationDashboardWrapper = styled('div')`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport {Dashboard};\nexport default withApi(\n  withOrganization(withTeamsForUser(withProfiler(OrganizationDashboard)))\n);\n"],"sourceRoot":""}