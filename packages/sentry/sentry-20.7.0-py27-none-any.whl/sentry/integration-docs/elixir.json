{
  "html": "<h2 id=\"install\">Installation</h2>\n\n<p>Edit your mix.exs file to add it as a dependency and add the <code class=\"highlighter-rouge\">:sentry</code> package to your applications:</p>\n\n<pre class=\"highlight\"><code><span class=\"k\">defp</span> <span class=\"n\">deps</span> <span class=\"k\">do</span>\n  <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"p\">{</span><span class=\"ss\">:sentry</span><span class=\"p\">,</span> <span class=\"sd\">\"</span><span class=\"s2\">~&gt; 7.0\"</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"ss\">:jason</span><span class=\"p\">,</span> <span class=\"sd\">\"</span><span class=\"s2\">~&gt; 1.1\"</span><span class=\"p\">},</span>\n  <span class=\"p\">]</span>\n<span class=\"k\">end</span>\n</code></pre>\n\n<h2 id=\"configure\">Configuration</h2>\n\n<p>Setup the application production environment in your <code class=\"highlighter-rouge\">config/prod.exs</code></p>\n\n<pre class=\"highlight\"><code><span class=\"n\">config</span> <span class=\"ss\">:sentry</span><span class=\"p\">,</span>\n  <span class=\"ss\">dsn:</span> <span class=\"sd\">\"</span><span class=\"s2\">___PUBLIC_DSN___\"</span><span class=\"p\">,</span>\n  <span class=\"ss\">environment_name:</span> <span class=\"ss\">:prod</span><span class=\"p\">,</span>\n  <span class=\"ss\">enable_source_code_context:</span> <span class=\"no\">true</span><span class=\"p\">,</span>\n  <span class=\"ss\">root_source_code_path:</span> <span class=\"no\">File</span><span class=\"o\">.</span><span class=\"n\">cwd!</span><span class=\"p\">,</span>\n  <span class=\"ss\">tags:</span> <span class=\"p\">%{</span>\n    <span class=\"ss\">env:</span> <span class=\"sd\">\"</span><span class=\"s2\">production\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"ss\">included_environments:</span> <span class=\"p\">[</span><span class=\"ss\">:prod</span><span class=\"p\">]</span>\n</code></pre>\n\n<p>The <code class=\"highlighter-rouge\">environment_name</code> and <code class=\"highlighter-rouge\">included_environments</code> work together to determine if and when Sentry should record exceptions. The <code class=\"highlighter-rouge\">environment_name</code> is the name of the current environment. In the example above, we have explicitly set the environment to <code class=\"highlighter-rouge\">:prod</code> which works well if you are inside an environment specific configuration like <code class=\"highlighter-rouge\">config/prod.exs</code>.</p>\n\n<p>An alternative is to use <code class=\"highlighter-rouge\">Mix.env</code> in your general configuration file:</p>\n\n<pre class=\"highlight\"><code><span class=\"n\">config</span> <span class=\"ss\">:sentry</span><span class=\"p\">,</span> <span class=\"ss\">dsn:</span> <span class=\"sd\">\"</span><span class=\"s2\">___PUBLIC_DSN___\"</span><span class=\"p\">,</span>\n   <span class=\"ss\">included_environments:</span> <span class=\"p\">[</span><span class=\"ss\">:prod</span><span class=\"p\">],</span>\n   <span class=\"ss\">environment_name:</span> <span class=\"no\">Mix</span><span class=\"o\">.</span><span class=\"n\">env</span>\n</code></pre>\n\n<p>This will set the environment name to whatever the current Mix environment atom is, but it will only send events if the current environment is <code class=\"highlighter-rouge\">:prod</code>, since that is the only entry in the <code class=\"highlighter-rouge\">included_environments</code> key.</p>\n\n<p>You can even rely on more custom determinations of the environment name. It\u2019s not uncommon for most applications to have a \u201cstaging\u201d environment. In order to handle this without adding an additional Mix environment, you can set an environment variable that determines the release level.</p>\n\n<pre class=\"highlight\"><code><span class=\"n\">config</span> <span class=\"ss\">:sentry</span><span class=\"p\">,</span> <span class=\"ss\">dsn:</span> <span class=\"sd\">\"</span><span class=\"s2\">___PUBLIC_DSN___\"</span><span class=\"p\">,</span>\n  <span class=\"ss\">included_environments:</span> <span class=\"sx\">~w(production staging)</span><span class=\"p\">,</span>\n  <span class=\"ss\">environment_name:</span> <span class=\"no\">System</span><span class=\"o\">.</span><span class=\"n\">get_env</span><span class=\"p\">(</span><span class=\"sd\">\"</span><span class=\"s2\">RELEASE_LEVEL\"</span><span class=\"p\">)</span> <span class=\"o\">||</span> <span class=\"sd\">\"</span><span class=\"s2\">development\"</span>\n</code></pre>\n\n<p>In this example, we are getting the environment name from the <code class=\"highlighter-rouge\">RELEASE_LEVEL</code> environment variable. If that variable does not exist, it will default to <code class=\"highlighter-rouge\">\"development\"</code>. Now, on our servers, we can set the environment variable appropriately. On our local development machines, exceptions will never be sent, because the default value is not in the list of <code class=\"highlighter-rouge\">included_environments</code>.</p>\n\n<p>If using an environment with Plug or Phoenix, add the following to your Plug.Router or Phoenix.Router:</p>\n\n<pre class=\"highlight\"><code><span class=\"kn\">use</span> <span class=\"no\">Plug</span><span class=\"o\">.</span><span class=\"no\">ErrorHandler</span>\n<span class=\"kn\">use</span> <span class=\"no\">Sentry</span><span class=\"o\">.</span><span class=\"no\">Plug</span>\n</code></pre>\n<!-- TODO-ADD-VERIFICATION-EXAMPLE -->\n<h2 id=\"capturing-errors\">Capturing Errors</h2>\n\n<p>If you use the LoggerBackend and set up the Plug/Phoenix integrations, all errors will bubble up to Sentry.</p>\n\n<p>Otherwise, we provide a simple way to capture exceptions manually:</p>\n\n<pre class=\"highlight\"><code><span class=\"k\">try</span> <span class=\"k\">do</span>\n  <span class=\"no\">ThisWillError</span><span class=\"o\">.</span><span class=\"n\">really</span><span class=\"p\">()</span>\n<span class=\"k\">rescue</span>\n  <span class=\"n\">my_exception</span> <span class=\"o\">-&gt;</span>\n    <span class=\"no\">Sentry</span><span class=\"o\">.</span><span class=\"n\">capture_exception</span><span class=\"p\">(</span><span class=\"n\">my_exception</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"ss\">stacktrace:</span> <span class=\"n\">__STACKTRACE__</span><span class=\"p\">,</span> <span class=\"ss\">extra:</span> <span class=\"p\">%{</span><span class=\"ss\">extra:</span> <span class=\"n\">information</span><span class=\"p\">}])</span>\n<span class=\"k\">end</span>\n</code></pre>", 
  "link": "https://docs.sentry.io/clients/elixir/", 
  "id": "elixir", 
  "name": "Elixir"
}
