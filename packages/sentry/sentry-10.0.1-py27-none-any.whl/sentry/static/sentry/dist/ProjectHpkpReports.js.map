{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/settings/projectSecurityHeaders/reportUri.jsx","webpack:///./app/components/previewFeature.jsx","webpack:///./app/views/settings/projectSecurityHeaders/hpkp.jsx"],"names":["getTitle","render","title","this","renderComponent","icon","action","tabs","noTitleStyles","props","TitleAndActions","Icon","Title","styled","Action","propTypes","node","isRequired","bool","defaultProps","Component","p","StyledSettingsPageHeading","SettingsPageHeading","routeName","orgSlug","withSentry","tmpl","getSecurityDsn","keyList","endpoint","length","dsn","security","getDynamicText","value","fixed","ReportUri","params","orgId","projectId","type","tct","link","to","inline","flexibleControlStateSize","React","PreviewFeature","t","ProjectHpkpReports","setProjectNavSection","routeTitleGen","state","disablePadding","href","getInstructions","getReportOnlyInstructions","AsyncView"],"mappings":"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","file":"ProjectHpkpReports.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p => (p.tabs ? `${space(4)} 0 ${space(2)}` : `${space(4)} 0`)};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true\n): string {\n  const tmpl = `${routeName} - ${orgSlug}`;\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router';\n\nimport {tct} from 'app/locale';\nimport Field from 'app/views/settings/components/forms/field';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\n\nconst DEFAULT_ENDPOINT = 'https://sentry.example.com/api/security-report/';\n\nexport const getSecurityDsn = keyList => {\n  const endpoint = keyList.length ? keyList[0].dsn.security : DEFAULT_ENDPOINT;\n  return getDynamicText({\n    value: endpoint,\n    fixed: DEFAULT_ENDPOINT,\n  });\n};\n\nexport default class ReportUri extends React.Component {\n  static propTypes = {\n    keyList: PropTypes.array.isRequired,\n  };\n\n  render() {\n    const {orgId, projectId} = this.props.params;\n    return (\n      <Panel>\n        <PanelHeader>{'Report URI'}</PanelHeader>\n        <PanelBody>\n          <PanelAlert type=\"info\">\n            {tct(\n              \"We've automatically pulled these credentials from your available [link:Client Keys]\",\n              {\n                link: <Link to={`/settings/${orgId}/projects/${projectId}/keys/`} />,\n              }\n            )}\n          </PanelAlert>\n          <Field inline={false} flexibleControlStateSize>\n            <TextCopyInput>{getSecurityDsn(this.props.keyList)}</TextCopyInput>\n          </Field>\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport {t} from 'app/locale';\nimport PropTypes from 'prop-types';\nimport Alert from './alert';\n\nexport default class PreviewFeature extends Component {\n  static propTypes = {\n    type: PropTypes.oneOf(['success', 'error', 'warning', 'info']),\n  };\n\n  static defaultProps = {\n    type: 'info',\n  };\n\n  render() {\n    const {type, ...props} = this.props;\n\n    return (\n      <Alert type={type} icon=\"icon-labs\" {...props}>\n        {t(\n          'This feature is a preview and may change in the future. Thanks for being an early adopter!'\n        )}\n      </Alert>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {t, tct} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport ExternalLink from 'app/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport ReportUri, {\n  getSecurityDsn,\n} from 'app/views/settings/projectSecurityHeaders/reportUri';\nimport PreviewFeature from 'app/components/previewFeature';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport routeTitleGen from 'app/utils/routeTitle';\n\nexport default class ProjectHpkpReports extends AsyncView {\n  static propTypes = {\n    setProjectNavSection: PropTypes.func,\n  };\n\n  componentWillMount() {\n    super.componentWillMount();\n    this.props.setProjectNavSection('settings');\n  }\n\n  getEndpoints() {\n    const {orgId, projectId} = this.props.params;\n    return [\n      ['keyList', `/projects/${orgId}/${projectId}/keys/`],\n      ['project', `/projects/${orgId}/${projectId}/`],\n    ];\n  }\n\n  getTitle() {\n    const {projectId} = this.props.params;\n    return routeTitleGen(t('HTTP Public Key Pinning (HPKP)'), projectId, false);\n  }\n\n  getInstructions() {\n    return (\n      'def middleware(request, response):\\n' +\n      \"    response['Public-Key-Pins'] = \\\\\\n\" +\n      '        \\'pin-sha256=\"cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs=\"; \\' \\\\\\n' +\n      '        \\'pin-sha256=\"M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE=\"; \\' \\\\\\n' +\n      \"        'max-age=5184000; includeSubDomains; ' \\\\\\n\" +\n      `        \\'report-uri=\"${getSecurityDsn(this.state.keyList)}\"\\' \\n` +\n      '    return response\\n'\n    );\n  }\n\n  getReportOnlyInstructions() {\n    return (\n      'def middleware(request, response):\\n' +\n      \"    response['Public-Key-Pins-Report-Only'] = \\\\\\n\" +\n      '        \\'pin-sha256=\"cUPcTAZWKaASuYWhhneDttWpY3oBAkE3h2+soZS7sWs=\"; \\' \\\\\\n' +\n      '        \\'pin-sha256=\"M8HztCzM3elUxkcjR2S5P4hhyBNf6lHkmjAHKhpGPWE=\"; \\' \\\\\\n' +\n      \"        'max-age=5184000; includeSubDomains; ' \\\\\\n\" +\n      `        \\'report-uri=\"${getSecurityDsn(this.state.keyList)}\"\\' \\n` +\n      '    return response\\n'\n    );\n  }\n\n  renderBody() {\n    return (\n      <div>\n        <SettingsPageHeader title={t('HTTP Public Key Pinning')} />\n\n        <PreviewFeature />\n\n        <ReportUri keyList={this.state.keyList} params={this.props.params} />\n\n        <Panel>\n          <PanelHeader>{t('About')}</PanelHeader>\n\n          <PanelBody disablePadding={false}>\n            <p>\n              {tct(\n                `[link:HTTP Public Key Pinning]\n              (HPKP) is a security feature that tells a web client to associate a specific\n              cryptographic public key with a certain web server to decrease the risk of MITM\n              attacks with forged certificates. It's enforced by browser vendors, and Sentry\n              supports capturing violations using the standard reporting hooks.`,\n                {\n                  link: (\n                    <ExternalLink href=\"https://en.wikipedia.org/wiki/HTTP_Public_Key_Pinning\" />\n                  ),\n                }\n              )}\n            </p>\n\n            <p>\n              {t(\n                `To configure HPKP reports\n              in Sentry, you'll need to send a header from your server describing your\n              policy, as well specifying the authenticated Sentry endpoint.`\n              )}\n            </p>\n\n            <p>\n              {t(\n                'For example, in Python you might achieve this via a simple web middleware'\n              )}\n            </p>\n            <pre>{this.getInstructions()}</pre>\n\n            <p>\n              {t(`Alternatively you can setup HPKP reports to simply send reports rather than\n              actually enforcing the policy`)}\n            </p>\n            <pre>{this.getReportOnlyInstructions()}</pre>\n\n            <p>\n              {tct(\n                `We recommend setting this up to only run on a percentage of requests, as\n              otherwise you may find that you've quickly exhausted your quota. For more\n              information, take a look at [link:the documentation on MDN].`,\n                {\n                  link: (\n                    <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Public_Key_Pinning\" />\n                  ),\n                }\n              )}\n            </p>\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}