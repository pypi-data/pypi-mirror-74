{"version":3,"sources":["webpack:///./app/components/modals/commandPalette.jsx"],"names":["dropdownStyle","css","theme","borderLight","CommandPaletteModal","handleSuccess","data","props","onClose","closeModal","analytics","Body","this","entryPoint","minSearch","maxResults","renderInput","getInputProps","InputWrapper","Input","autoFocus","innerRef","ref","searchInput","type","placeholder","t","React","Component","styled"],"mappings":"iQASMA,EAAgBC,YAAH,0IAOOC,IAAMC,YAPb,KAUbC,E,mLAWJC,cAAgB,SAAAC,GACV,EAAKC,MAAMC,SACb,EAAKD,MAAMC,QAAQF,GAGrB,EAAKC,MAAME,c,mEARXC,YAAU,qB,+BAWH,WACAC,EAAQC,KAAKL,MAAbI,KAEP,OACE,kBAACA,EAAD,KACE,kBAAC,IAAD,OACMC,KAAKL,MADX,CAEEM,WAAW,kBACXC,UAAW,EACXC,WAAY,GACZf,cAAeA,EACfgB,YAAa,gBAAEC,EAAF,EAAEA,cAAF,OACX,kBAACC,EAAD,KACE,kBAACC,EAAD,KACEC,WAAS,EACTC,SAAU,SAAAC,GAAG,OAAK,EAAKC,YAAcD,IACjCL,EAAc,CAChBO,KAAM,OACNC,YAAaC,YAAE,8D,GArCCC,IAAMC,WAAlCxB,E,kCAgDSA,YAEf,IAAMc,EAAeW,YAAO,MAAV,oBAAGA,CAAH,gBAIZV,EAAQU,YAAO,QAAV,oBAAGA,CAAH","file":"CommandPalette.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled, {css} from 'react-emotion';\n\nimport {analytics} from 'app/utils/analytics';\nimport {t} from 'app/locale';\nimport Search from 'app/components/search';\nimport theme from 'app/utils/theme';\n\nconst dropdownStyle = css`\n  width: 100%;\n  border: transparent;\n  border-top-left-radius: 0;\n  border-top-right-radius: 0;\n  position: initial;\n  box-shadow: none;\n  border-top: 1px solid ${theme.borderLight};\n`;\n\nclass CommandPaletteModal extends React.Component {\n  static propTypes = {\n    closeModal: PropTypes.func,\n    onClose: PropTypes.func,\n    Body: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n  };\n\n  componentDidMount() {\n    analytics('omnisearch.open');\n  }\n\n  handleSuccess = data => {\n    if (this.props.onClose) {\n      this.props.onClose(data);\n    }\n\n    this.props.closeModal();\n  };\n\n  render() {\n    const {Body} = this.props;\n\n    return (\n      <Body>\n        <Search\n          {...this.props}\n          entryPoint=\"command_palette\"\n          minSearch={1}\n          maxResults={10}\n          dropdownStyle={dropdownStyle}\n          renderInput={({getInputProps}) => (\n            <InputWrapper>\n              <Input\n                autoFocus\n                innerRef={ref => (this.searchInput = ref)}\n                {...getInputProps({\n                  type: 'text',\n                  placeholder: t('Search for projects, teams, settings, etc...'),\n                })}\n              />\n            </InputWrapper>\n          )}\n        />\n      </Body>\n    );\n  }\n}\n\nexport default CommandPaletteModal;\n\nconst InputWrapper = styled('div')`\n  padding: 2px;\n`;\n\nconst Input = styled('input')`\n  width: 100%;\n  padding: 8px;\n  border: none;\n  border-radius: 8px;\n  outline: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n"],"sourceRoot":""}