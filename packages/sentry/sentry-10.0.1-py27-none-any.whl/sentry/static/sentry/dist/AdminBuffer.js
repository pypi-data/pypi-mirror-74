(window.sntryWpJsonp=window.sntryWpJsonp||[]).push([[43],{1836:function(e,t,a){"use strict";var n=a(45),s=a.n(n),r=a(6),i=a.n(r),o=a(7),l=a.n(o),u=a(9),c=a.n(u),h=a(8),d=a.n(h),p=a(10),f=a.n(p),m=a(0),v=a.n(m),b=a(598),y=a(159),E=a(50),g=a(61),k=function(e){function t(){var e,a;i()(this,t);for(var n=arguments.length,s=new Array(n),r=0;r<n;r++)s[r]=arguments[r];return(a=c()(this,(e=d()(t)).call.apply(e,[this].concat(s)))).state={error:!1,loading:!0,data:null},a}return f()(t,e),l()(t,[{key:"componentDidMount",value:function(){this.fetchData()}},{key:"shouldComponentUpdate",value:function(e,t){return this.state.loading!==t.loading}},{key:"componentDidUpdate",value:function(e){e.since===this.props.since&&e.stat===this.props.stat&&e.resolution===this.props.resolution||this.fetchData()}},{key:"fetchData",value:function(){var e=this;this.setState({loading:!0}),this.props.api.request("/internal/stats/",{method:"GET",data:{since:this.props.since,resolution:this.props.resolution,key:this.props.stat},success:function(t){return e.setState({data:t,loading:!1,error:!1})},error:function(){return e.setState({error:!0})}})}},{key:"getChartPoints",value:function(){return this.state.data.map((function(e){var t=s()(e,2);return{x:t[0],y:t[1]}}))}},{key:"render",value:function(){return this.state.loading?v.a.createElement(E.default,null):this.state.error?v.a.createElement(y.a,{onRetry:this.fetchData}):v.a.createElement(b.a,{points:this.getChartPoints(),className:"standard-barchart",label:this.props.label,height:this.props.height})}}]),t}(v.a.Component);k.displayName="InternalStatChart",k.defaultProps={height:150},t.a=Object(g.a)(k)},2592:function(e,t,a){"use strict";a.r(t),a.d(t,"default",(function(){return v}));var n=a(6),s=a.n(n),r=a(7),i=a.n(r),o=a(9),l=a.n(o),u=a(8),c=a.n(u),h=a(10),d=a.n(h),p=a(0),f=a.n(p),m=a(1836),v=function(e){function t(){return s()(this,t),l()(this,c()(t).apply(this,arguments))}return d()(t,e),i()(t,[{key:"render",value:function(){var e=this.props.resolution,t=(new Date).getTime()/1e3-604800;return f.a.createElement("div",null,f.a.createElement("h3",null,"Buffers"),f.a.createElement("div",{className:"box"},f.a.createElement("div",{className:"box-header"},f.a.createElement("h4",null,"About")),f.a.createElement("div",{className:"box-content with-padding"},f.a.createElement("p",null,"Sentry buffers are responsible for making changes to cardinality counters — such as an issues event count — as well as updating attributes like"," ",f.a.createElement("em",null,"last seen"),". These are flushed on a regularly interval, and are directly affected by the queue backlog."))),f.a.createElement("div",{className:"box"},f.a.createElement("div",{className:"box-header"},f.a.createElement("h4",null,"Updates Processed")),f.a.createElement(m.a,{since:t,resolution:e,stat:"jobs.finished.sentry.tasks.process_buffer.process_incr",label:"Jobs"})),f.a.createElement("div",{className:"box"},f.a.createElement("div",{className:"box-header"},f.a.createElement("h4",null,"Revoked Updates")),f.a.createElement(m.a,{since:t,resolution:e,stat:"buffer.revoked",label:"Jobs"})))}}]),t}(f.a.Component);v.displayName="AdminBuffer",v.defaultProps={resolution:"1h"}}}]);
//# sourceMappingURL=AdminBuffer.js.map