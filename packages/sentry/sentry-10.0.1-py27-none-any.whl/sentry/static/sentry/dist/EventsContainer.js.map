{"version":3,"sources":["webpack:///./app/views/settings/components/tag.jsx","webpack:///./app/components/betaTag.jsx","webpack:///./app/views/events/searchBar.jsx","webpack:///./app/views/events/index.jsx"],"names":["Tag","styled","children","icon","props","priority","size","border","StyledInlineSvg","src","p","gray5","theme","alert","background","offWhite2","gray1","getBorder","inline","getMarginLeft","propTypes","PropTypes","string","bool","InlineSvg","BetaTag","title","t","position","StyledTag","fontSizeSmall","space","tagToObjectReducer","acc","name","key","SEARCH_SPECIAL_CHARS_REGEXP","RegExp","NEGATION_OPERATOR","SEARCH_WILDCARD","SearchBar","state","tags","fetchData","a","async","api","organization","projectIds","fetchOrganizationTags","slug","setState","getAllTags","map","addErrorMessage","getEventFieldValues","memoize","tag","query","endpointParams","fetchTagValues","then","results","flatten","filter","defined","Error","orgTags","sort","reduce","prepareQuery","replace","this","prevProps","cache","clear","hasRecentSearches","savedSearchType","SEARCH_TYPES","EVENT","onGetTagValues","supportedTags","excludeEnvironment","dropdownClassName","css","React","PureComponent","withApi","EventsContainer","handleSearch","router","location","push","pathname","getParams","selection","features","hookName","renderDisabled","resetParamsOnChange","Body","HeaderTitle","StyledSearchBar","projects","placeholder","onSearch","Component","withOrganization","withGlobalSelection","whiteDark","PageHeading"],"mappings":"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","file":"EventsContainer.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport InlineSvg from 'app/components/inlineSvg';\n\nconst getMarginLeft = p => {\n  if (!p.inline) {\n    return '';\n  }\n  return `margin-left: ${p.size === 'small' ? '0.25em' : '0.5em'};`;\n};\n\nconst getBorder = p =>\n  p.border\n    ? `border: 1px solid ${\n        p.priority ? p.theme.alert[p.priority].border : p.theme.gray1\n      };`\n    : '';\n\nconst Tag = styled(\n  ({children, icon, priority: _priority, size: _size, border: _border, ...props}) => (\n    <div {...props}>\n      {icon && <StyledInlineSvg src={icon} size=\"12px\" />}\n      {children}\n    </div>\n  )\n)`\n  display: inline-flex;\n  box-sizing: border-box;\n  padding: ${p => (p.size === 'small' ? '0.1em 0.4em 0.2em' : '0.35em 0.8em 0.4em')};\n  font-size: 75%;\n  line-height: 1;\n  color: ${p => (p.priority ? '#fff' : p.gray5)};\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  border-radius: ${p => (p.size === 'small' ? '0.25em' : '2em')};\n  text-transform: lowercase;\n  font-weight: ${p => (p.size === 'small' ? 'bold' : 'normal')};\n  background: ${p =>\n    p.priority ? p.theme.alert[p.priority].background : p.theme.offWhite2};\n  ${p => getBorder(p)};\n  ${p => getMarginLeft(p)};\n`;\n\nTag.propTypes = {\n  priority: PropTypes.string,\n  size: PropTypes.string,\n  border: PropTypes.bool,\n  icon: PropTypes.string,\n  inline: PropTypes.bool,\n};\n\nconst StyledInlineSvg = styled(InlineSvg)`\n  margin-right: 4px;\n`;\n\nexport default Tag;\n","import React from 'react';\nimport styled from 'react-emotion';\nimport Tag from 'app/views/settings/components/tag';\nimport Tooltip from 'app/components/tooltip';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nconst BetaTag = () => (\n  <Tooltip\n    title={t('This feature is in beta and may change in the future.')}\n    position=\"right\"\n  >\n    <StyledTag priority=\"beta\" size=\"small\">\n      {t('beta')}\n    </StyledTag>\n  </Tooltip>\n);\n\nconst StyledTag = styled(Tag)`\n  position: relative;\n  top: -1px;\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: normal;\n  padding: 3px 6px;\n  margin-left: ${space(0.5)};\n  border-radius: 20px;\n`;\n\nexport default BetaTag;\n","import {css} from 'react-emotion';\nimport flatten from 'lodash/flatten';\nimport memoize from 'lodash/memoize';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {NEGATION_OPERATOR, SEARCH_TYPES, SEARCH_WILDCARD} from 'app/constants';\nimport {addErrorMessage} from 'app/actionCreators/indicator';\nimport {defined} from 'app/utils';\nimport {fetchOrganizationTags, fetchTagValues} from 'app/actionCreators/tags';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\nimport SmartSearchBar from 'app/components/smartSearchBar';\nimport withApi from 'app/utils/withApi';\n\nconst tagToObjectReducer = (acc, name) => {\n  acc[name] = {\n    key: name,\n    name,\n  };\n  return acc;\n};\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\n\nclass SearchBar extends React.PureComponent {\n  static propTypes = {\n    api: PropTypes.object,\n    organization: SentryTypes.Organization,\n    projectIds: PropTypes.arrayOf(PropTypes.number),\n  };\n\n  state = {\n    tags: {},\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.projectIds !== prevProps.projectIds) {\n      this.fetchData();\n      // Clear memoized data when projects change.\n      this.getEventFieldValues.cache.clear();\n    }\n  }\n\n  fetchData = async () => {\n    const {api, organization, projectIds} = this.props;\n    try {\n      const tags = await fetchOrganizationTags(api, organization.slug, projectIds);\n      this.setState({\n        tags: this.getAllTags(tags.map(({key}) => key)),\n      });\n    } catch (_) {\n      addErrorMessage(t('There was a problem fetching tags'));\n    }\n  };\n\n  /**\n   * Returns array of tag values that substring match `query`; invokes `callback`\n   * with data when ready\n   */\n  getEventFieldValues = memoize(\n    (tag, query, endpointParams) => {\n      const {api, organization, projectIds} = this.props;\n\n      return fetchTagValues(\n        api,\n        organization.slug,\n        tag.key,\n        query,\n        projectIds,\n        endpointParams\n      ).then(\n        results =>\n          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),\n        () => {\n          throw new Error('Unable to fetch event field values');\n        }\n      );\n    },\n    ({key}, query) => `${key}-${query}`\n  );\n\n  getAllTags = (orgTags = []) => orgTags.sort().reduce(tagToObjectReducer, {});\n\n  /**\n   * Prepare query string (e.g. strip special characters like negation operator)\n   */\n  prepareQuery = query => {\n    return query.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n  };\n\n  render() {\n    return (\n      <SmartSearchBar\n        {...this.props}\n        hasRecentSearches\n        savedSearchType={SEARCH_TYPES.EVENT}\n        onGetTagValues={this.getEventFieldValues}\n        supportedTags={this.state.tags}\n        prepareQuery={this.prepareQuery}\n        excludeEnvironment\n        dropdownClassName={css`\n          max-height: 300px;\n          overflow-y: auto;\n        `}\n      />\n    );\n  }\n}\n\nexport default withApi(SearchBar);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';\nimport {t} from 'app/locale';\nimport BetaTag from 'app/components/betaTag';\nimport Feature from 'app/components/acl/feature';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport NoProjectMessage from 'app/components/noProjectMessage';\nimport SentryTypes from 'app/sentryTypes';\nimport PageHeading from 'app/components/pageHeading';\nimport withGlobalSelection from 'app/utils/withGlobalSelection';\nimport withOrganization from 'app/utils/withOrganization';\nimport {PageContent, PageHeader} from 'app/styles/organization';\n\nimport SearchBar from './searchBar';\n\nclass EventsContainer extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n    router: PropTypes.object,\n    selection: SentryTypes.GlobalSelection,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  handleSearch = query => {\n    const {router, location} = this.props;\n    router.push({\n      pathname: location.pathname,\n      query: getParams({\n        ...(location.query || {}),\n        query,\n      }),\n    });\n  };\n\n  render() {\n    const {organization, location, children, selection} = this.props;\n\n    return (\n      <Feature\n        features={['events']}\n        hookName=\"feature-disabled:events-page\"\n        renderDisabled\n      >\n        <GlobalSelectionHeader\n          organization={organization}\n          resetParamsOnChange={['cursor']}\n        />\n        <PageContent>\n          <NoProjectMessage organization={organization}>\n            <Body>\n              <PageHeader>\n                <HeaderTitle>\n                  {t('Events')} <BetaTag />\n                </HeaderTitle>\n                <StyledSearchBar\n                  organization={organization}\n                  projectIds={selection.projects}\n                  query={(location.query && location.query.query) || ''}\n                  placeholder={t('Search for events, users, tags, and everything else.')}\n                  onSearch={this.handleSearch}\n                />\n              </PageHeader>\n              {children}\n            </Body>\n          </NoProjectMessage>\n        </PageContent>\n      </Feature>\n    );\n  }\n}\nexport default withOrganization(withGlobalSelection(EventsContainer));\nexport {EventsContainer};\n\nconst Body = styled('div')`\n  background-color: ${p => p.theme.whiteDark};\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst HeaderTitle = styled(PageHeading)`\n  flex: 1;\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  flex: 1;\n`;\n"],"sourceRoot":""}