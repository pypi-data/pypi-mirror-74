{"version":3,"sources":["webpack:///./app/actionCreators/teams.jsx","webpack:///./app/components/well.tsx","webpack:///./app/components/projects/missingProjectMembership.jsx","webpack:///./app/views/projects/projectContext.jsx","webpack:///./app/views/projectInstall/gettingStarted.jsx"],"names":["doCallback","params","name","args","fetchTeamDetails","api","options","TeamActions","fetchDetails","teamId","request","orgId","success","data","fetchDetailsSuccess","error","fetchDetailsError","updateTeamSuccess","updateSuccess","updateTeam","endpoint","update","method","updateError","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","createTeamSuccess","addSuccessMessage","tct","slug","organization","err","createTeamError","addErrorMessage","removeTeam","removeTeamSuccess","removeTeamError","Well","p","theme","hasImage","centered","propTypes","bool","MissingProjectMembership","props","projectId","project","projects","find","state","loading","this","setState","IndicatorStore","add","t","features","className","isPending","has","onClick","bind","teams","length","map","key","renderJoinTeam","Set","StyledWell","StyledHeroIcon","src","renderExplanation","renderJoinTeams","React","Component","styled","space","HeroIcon","withApi","ERROR_TYPES","ProjectContext","createReactClass","displayName","childContextTypes","SentryTypes","Project","mixins","Reflux","connect","MemberListStore","listenTo","ProjectsStore","getInitialState","errorType","memberList","projectNavSection","getChildContext","componentWillMount","fetchData","componentWillReceiveProps","nextProps","skipReload","remountComponent","componentDidUpdate","prevProps","prevState","docTitle","docTitleRef","forceUpdate","getTitle","onProjectChange","projectIds","getById","identifyProject","projectSlug","activeProject","hasAccess","setActiveProject","projectRequest","fetchOrgMembers","isMember","setProjectNavSection","section","renderBody","style","margin","onRetry","children","render","ref","title","withOrganization","withProjects","withRouter","GettingStartedBody","Container","Content","contextTypes","PropTypes","object","GettingStarted"],"mappings":"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","file":"ProjectGettingStarted.js","sourcesContent":["import TeamActions from 'app/actions/teamActions';\nimport {tct} from 'app/locale';\nimport {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';\nimport {uniqueId} from 'app/utils/guid';\n\nconst doCallback = (params = {}, name, ...args) => {\n  if (typeof params[name] === 'function') {\n    params[name](...args);\n  }\n};\n\n// Fetch teams for org\nexport function fetchTeams(api, params, options) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(api, params, options) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId, data) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(api, params, options) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(api, params, options) {\n  const endpoint = `/organizations/${params.orgId}/members/${params.memberId ||\n    'me'}/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    data: params.data,\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(api, params, options) {\n  const endpoint = `/organizations/${params.orgId}/members/${params.memberId ||\n    'me'}/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api, team, params, options) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug || team.name, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug || team.name}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api, params, options) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import React from 'react';\nimport styled from 'react-emotion';\nimport PropTypes from 'prop-types';\n\ntype Props = {\n  hasImage: boolean | undefined;\n  centered: boolean | undefined;\n  children: React.ReactNode;\n  theme?: any;\n};\n\ntype WellProps = Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props;\n\nconst Well = styled('div')<WellProps>`\n  border: 1px solid ${p => p.theme.borderLight};\n  box-shadow: none;\n  background: ${p => p.theme.whiteDark};\n  padding: ${p => (p.hasImage ? '80px 30px' : '15px 20px')};\n  margin-bottom: 20px;\n  border-radius: 3px;\n  ${p => p.centered && 'text-align: center'};\n`;\n\nWell.propTypes = {\n  hasImage: PropTypes.bool,\n  centered: PropTypes.bool,\n};\n\nexport default Well;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport {joinTeam} from 'app/actionCreators/teams';\nimport HeroIcon from 'app/components/heroIcon';\nimport Well from 'app/components/well';\nimport withApi from 'app/utils/withApi';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nclass MissingProjectMembership extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    organization: PropTypes.object.isRequired,\n    projectId: PropTypes.string.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const {organization, projectId} = this.props;\n    const project = organization.projects.find(p => p.slug === projectId);\n\n    this.state = {\n      loading: false,\n      error: false,\n      project,\n    };\n  }\n\n  joinTeam(team) {\n    this.setState({\n      loading: true,\n    });\n\n    joinTeam(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          IndicatorStore.add(\n            t('There was an error while trying to leave the team.'),\n            'error'\n          );\n        },\n      }\n    );\n  }\n\n  renderJoinTeam(team, features) {\n    if (!team) {\n      return null;\n    }\n    if (this.state.loading) {\n      return <a className=\"btn btn-default btn-loading btn-disabled\">...</a>;\n    } else if (team.isPending) {\n      return <a className=\"btn btn-default btn-disabled\">{t('Request Pending')}</a>;\n    } else if (features.has('open-membership')) {\n      return (\n        <a className=\"btn btn-default\" onClick={this.joinTeam.bind(this, team)}>\n          {t('Join Team')}\n        </a>\n      );\n    }\n    return (\n      <a className=\"btn btn-default\" onClick={this.joinTeam.bind(this, team)}>\n        {t('Request Access')}\n      </a>\n    );\n  }\n\n  renderExplanation(features) {\n    if (features.has('open-membership')) {\n      return t('To view this data you must one of the following teams.');\n    } else {\n      return t(\n        'To view this data you must first request access to one of the following teams:'\n      );\n    }\n  }\n\n  renderJoinTeams(features) {\n    const {teams} = this.state.project;\n    if (!teams.length) {\n      return (\n        <EmptyMessage>\n          {t(\n            'No teams have access to this project yet. Ask an admin to add your team to this project.'\n          )}\n        </EmptyMessage>\n      );\n    }\n\n    return teams.map(team => {\n      return (\n        <p key={team.slug}>\n          #{team.slug}: {this.renderJoinTeam(team, features)}\n        </p>\n      );\n    });\n  }\n\n  render() {\n    const {organization} = this.props;\n    const features = new Set(organization.features);\n\n    return (\n      <div className=\"container\">\n        <StyledWell centered>\n          <StyledHeroIcon src=\"icon-circle-exclamation\" />\n          <p>{t(\"You're not a member of this project.\")}</p>\n          <p>{this.renderExplanation(features)}</p>\n          {this.renderJoinTeams(features)}\n        </StyledWell>\n      </div>\n    );\n  }\n}\n\nconst StyledWell = styled(Well)`\n  margin-top: ${space(2)};\n`;\n\nconst StyledHeroIcon = styled(HeroIcon)`\n  margin-bottom: ${space(2)};\n`;\n\nexport {MissingProjectMembership};\n\nexport default withApi(MissingProjectMembership);\n","import {withRouter} from 'react-router';\nimport DocumentTitle from 'react-document-title';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\n\nimport {fetchOrgMembers} from 'app/actionCreators/members';\nimport {setActiveProject} from 'app/actionCreators/projects';\nimport {t} from 'app/locale';\nimport withApi from 'app/utils/withApi';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport MemberListStore from 'app/stores/memberListStore';\nimport MissingProjectMembership from 'app/components/projects/missingProjectMembership';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport SentryTypes from 'app/sentryTypes';\nimport withProjects from 'app/utils/withProjects';\nimport withOrganization from 'app/utils/withOrganization';\n\nconst ERROR_TYPES = {\n  MISSING_MEMBERSHIP: 'MISSING_MEMBERSHIP',\n  PROJECT_NOT_FOUND: 'PROJECT_NOT_FOUND',\n  UNKNOWN: 'UNKNOWN',\n};\n\n/**\n * Higher-order component that sets `project` as a child context\n * value to be accessed by child elements.\n *\n * Additionally delays rendering of children until project XHR has finished\n * and context is populated.\n */\nconst ProjectContext = createReactClass({\n  displayName: 'ProjectContext',\n\n  propTypes: {\n    api: PropTypes.object,\n\n    /**\n     * If true, this will not change `state.loading` during `fetchData` phase\n     */\n    skipReload: PropTypes.bool,\n    organization: SentryTypes.Organization,\n    projects: PropTypes.arrayOf(SentryTypes.Project),\n    projectId: PropTypes.string,\n    orgId: PropTypes.string,\n  },\n\n  childContextTypes: {\n    project: SentryTypes.Project,\n  },\n\n  mixins: [\n    Reflux.connect(MemberListStore, 'memberList'),\n    Reflux.listenTo(ProjectsStore, 'onProjectChange'),\n  ],\n\n  getInitialState() {\n    return {\n      loading: true,\n      error: false,\n      errorType: null,\n      memberList: [],\n      project: null,\n      projectNavSection: null,\n    };\n  },\n\n  getChildContext() {\n    return {\n      project: this.state.project,\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.projectId === this.props.projectId) {\n      return;\n    }\n\n    if (!nextProps.skipReload) {\n      this.remountComponent();\n    }\n  },\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.projectId !== this.props.projectId) {\n      this.fetchData();\n    }\n\n    // Project list has changed. Likely indicating that a new project has been\n    // added. Re-fetch project details in case that the new project is the active\n    // project.\n    //\n    // For now, only compare lengths. It is possible that project slugs within\n    // the list could change, but it doesn't seem to be broken anywhere else at\n    // the moment that would require deeper checks.\n    if (prevProps.projects.length !== this.props.projects.length) {\n      this.fetchData();\n    }\n\n    // Call forceUpdate() on <DocumentTitle/> if either project or organization\n    // state has changed. This is because <DocumentTitle/>'s shouldComponentUpdate()\n    // returns false unless props differ; meaning context changes for project/org\n    // do NOT trigger renders for <DocumentTitle/> OR any subchildren. The end result\n    // being that child elements that listen for context changes on project/org will\n    // NOT update (without this hack).\n    // See: https://github.com/gaearon/react-document-title/issues/35\n\n    // intentionally shallow comparing references\n    if (\n      prevState.project !== this.state.project ||\n      prevState.organization !== this.state.organization\n    ) {\n      if (!this.docTitle) {\n        return;\n      }\n      const docTitle = this.docTitleRef.docTitle;\n      if (docTitle) {\n        docTitle.forceUpdate();\n      }\n    }\n  },\n\n  remountComponent() {\n    this.setState(this.getInitialState());\n  },\n\n  getTitle() {\n    if (this.state.project) {\n      return this.state.project.slug;\n    }\n    return 'Sentry';\n  },\n\n  onProjectChange(projectIds) {\n    if (!this.state.project) {\n      return;\n    }\n    if (!projectIds.has(this.state.project.id)) {\n      return;\n    }\n\n    this.setState({\n      project: {...ProjectsStore.getById(this.state.project.id)},\n    });\n  },\n\n  identifyProject() {\n    const {projects, projectId} = this.props;\n    const projectSlug = projectId;\n    return projects.find(({slug}) => slug === projectSlug) || null;\n  },\n\n  async fetchData() {\n    const {orgId, projectId, skipReload} = this.props;\n    // we fetch core access/information from the global organization data\n    const activeProject = this.identifyProject();\n    const hasAccess = activeProject && activeProject.hasAccess;\n\n    this.setState(state => ({\n      // if `skipReload` is true, then don't change loading state\n      loading: skipReload ? state.loading : true,\n      // we bind project initially, but it'll rebind\n      project: activeProject,\n    }));\n\n    if (activeProject && hasAccess) {\n      setActiveProject(null);\n      const projectRequest = this.props.api.requestPromise(\n        `/projects/${orgId}/${projectId}/`\n      );\n\n      try {\n        const project = await projectRequest;\n        this.setState({\n          loading: false,\n          project,\n          error: false,\n          errorType: null,\n        });\n\n        // assuming here that this means the project is considered the active project\n        setActiveProject(project);\n      } catch (error) {\n        this.setState({\n          loading: false,\n          error: false,\n          errorType: ERROR_TYPES.UNKNOWN,\n        });\n      }\n\n      fetchOrgMembers(this.props.api, orgId, activeProject.id);\n\n      return;\n    }\n\n    // User is not a memberof the active project\n    if (activeProject && !activeProject.isMember) {\n      this.setState({\n        loading: false,\n        error: true,\n        errorType: ERROR_TYPES.MISSING_MEMBERSHIP,\n      });\n\n      return;\n    }\n\n    // There is no active project. This likely indicates either the project\n    // *does not exist* or the project has not yet been added to the store.\n    // Either way, make a request to check for existence of the project.\n    try {\n      await this.props.api.requestPromise(`/projects/${orgId}/${projectId}/`);\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error: true,\n        errorType: ERROR_TYPES.PROJECT_NOT_FOUND,\n      });\n    }\n  },\n\n  setProjectNavSection(section) {\n    this.setState({\n      projectNavSection: section,\n    });\n  },\n\n  renderBody() {\n    if (this.state.loading) {\n      return (\n        <div className=\"loading-full-layout\">\n          <LoadingIndicator />\n        </div>\n      );\n    } else if (this.state.error) {\n      switch (this.state.errorType) {\n        case ERROR_TYPES.PROJECT_NOT_FOUND:\n          // TODO(chrissy): use scale for margin values\n          return (\n            <div className=\"container\">\n              <div className=\"alert alert-block\" style={{margin: '30px 0 10px'}}>\n                {t('The project you were looking for was not found.')}\n              </div>\n            </div>\n          );\n        case ERROR_TYPES.MISSING_MEMBERSHIP:\n          // TODO(dcramer): add various controls to improve this flow and break it\n          // out into a reusable missing access error component\n          return (\n            <MissingProjectMembership\n              organization={this.props.organization}\n              projectId={this.state.project.slug}\n            />\n          );\n        default:\n          return <LoadingError onRetry={this.remountComponent} />;\n      }\n    }\n\n    return this.props.children;\n  },\n\n  render() {\n    return (\n      <DocumentTitle ref={ref => (this.docTitleRef = ref)} title={this.getTitle()}>\n        {this.renderBody()}\n      </DocumentTitle>\n    );\n  },\n});\n\nexport {ProjectContext};\n\nexport default withApi(withOrganization(withProjects(withRouter(ProjectContext))));\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport ProjectContext from 'app/views/projects/projectContext';\nimport space from 'app/styles/space';\n\nclass GettingStartedBody extends React.Component {\n  static contextTypes = {\n    project: PropTypes.object,\n    organization: PropTypes.object,\n  };\n\n  render() {\n    return (\n      <Container>\n        <div className=\"container\">\n          <Content>{this.props.children}</Content>\n        </div>\n      </Container>\n    );\n  }\n}\n\nclass GettingStarted extends React.Component {\n  render() {\n    const {projectId, orgId} = this.props.params;\n    return (\n      <ProjectContext orgId={orgId} projectId={projectId}>\n        <GettingStartedBody>{this.props.children}</GettingStartedBody>\n      </ProjectContext>\n    );\n  }\n}\n\nconst Container = styled('div')`\n  flex: 1;\n  background: #fff;\n  margin-bottom: -${space(3)}; /* cleans up a bg gap at bottom */\n`;\n\nconst Content = styled('div')`\n  margin-top: ${space(3)};\n`;\n\nexport default GettingStarted;\n"],"sourceRoot":""}