{"version":3,"sources":["webpack:///./app/views/settings/incidentRules/create.tsx"],"names":["handleSubmitSuccess","params","routes","router","location","push","stepBack","render","project","onSubmitSuccess","this","rule","projects","slug","props","Component"],"mappings":"4JAuBA,yE,OACE,EAAAA,oBAAsB,WACd,cAACC,EAAA,EAAAA,OAAQC,EAAA,EAAAA,OAAQC,EAAA,EAAAA,OAAQC,EAAA,EAAAA,SAE/BD,EAAOE,KAAK,YAAc,gBAAiB,CAACJ,OAAM,EAAEC,OAAM,EAAEE,SAAQ,EAAEE,UAAW,M,EAcrF,OAlBkC,iBAOhC,YAAAC,OAAA,WACE,IAAM,aAACC,EAAA,EAAAA,QAAS,6BAEhB,OACE,kBAAC,IAAQ,aACPC,gBAAiBC,KAAKV,oBACtBW,KAAI,2BAAM,eAAmB,CAAEC,SAAU,CAACJ,EAAQK,SAC9CC,KAIZ,EAlBA,CAAkC,IAAMC,WAoBzB","file":"IncidentRulesCreate.js","sourcesContent":["import {RouteComponentProps} from 'react-router/lib/Router';\nimport React from 'react';\n\nimport {Organization, Project} from 'app/types';\nimport {createDefaultRule} from 'app/views/settings/incidentRules/constants';\nimport recreateRoute from 'app/utils/recreateRoute';\n\nimport RuleForm from './ruleForm';\n\ntype RouteParams = {\n  orgId: string;\n  projectId: string;\n  incidentRuleId: string; //TODO(ts): make optional\n};\n\ntype Props = {\n  organization: Organization;\n  project: Project;\n} & RouteComponentProps<RouteParams, {}>;\n\n/**\n * Show metric rules form with an empty rule. Redirects to alerts list after creation.\n */\nclass IncidentRulesCreate extends React.Component<Props> {\n  handleSubmitSuccess = () => {\n    const {params, routes, router, location} = this.props;\n\n    router.push(recreateRoute('metric-rules/', {params, routes, location, stepBack: -1}));\n  };\n\n  render() {\n    const {project, ...props} = this.props;\n\n    return (\n      <RuleForm\n        onSubmitSuccess={this.handleSubmitSuccess}\n        rule={{...createDefaultRule(), projects: [project.slug]}}\n        {...props}\n      />\n    );\n  }\n}\n\nexport default IncidentRulesCreate;\n"],"sourceRoot":""}