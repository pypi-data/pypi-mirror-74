{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/actionCreators/teams.jsx","webpack:///./app/views/settings/organizationTeams/allTeamsRow.jsx","webpack:///./app/views/settings/organizationTeams/allTeamsList.jsx","webpack:///./app/views/settings/organizationTeams/organizationTeams.jsx","webpack:///./app/views/settings/organizationTeams/index.jsx"],"names":["render","icon","title","action","tabs","noTitleStyles","props","TitleAndActions","Icon","Title","styled","Action","propTypes","node","isRequired","bool","defaultProps","Component","p","StyledSettingsPageHeading","SettingsPageHeading","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","slice","baseRoute","query","search","fullRoute","join","_title","objSlug","children","doCallback","name","args","fetchTeamDetails","api","TeamActions","fetchDetails","teamId","request","orgId","success","data","fetchDetailsSuccess","error","fetchDetailsError","updateTeamSuccess","updateSuccess","updateTeam","endpoint","update","method","updateError","joinTeam","memberId","id","uniqueId","leaveTeam","createTeam","team","requestPromise","then","createTeamSuccess","addSuccessMessage","tct","slug","organization","err","createTeamError","addErrorMessage","removeTeam","removeTeamSuccess","removeTeamError","AllTeamsRow","state","loading","handleRequestAccess","a","async","successMessage","errorMessage","_err","handleJoinTeam","setState","Promise","resolve","reject","Error","handleLeaveTeam","this","urlPrefix","openMembership","display","avatarSize","description","tn","memberCount","canViewTeam","hasAccess","TeamPanelItem","TeamNameWrapper","TeamLink","Spacer","size","disabled","isMember","onClick","t","isPending","React","Link","space","withApi","PanelItem","AllTeamsList","handleCreateTeam","e","useCreateModal","preventDefault","openCreateTeamModal","onClose","access","teamNodes","teamList","teamIdx","key","length","root","noMargin","teamCreate","has","link","OrganizationTeams","allTeams","activeTeams","features","org","canCreateTeams","priority","undefined","teamRoute","find","activeTeamIds","Set","otherTeams","filter","data-test-id","OrganizationTeamsContainer","createReactClass","displayName","mixins","Reflux","listenTo","TeamStore","ProjectsStore","getInitialState","sortArray","getAll","o","projectList","projectStats","componentDidMount","fetchStats","loadStats","since","Date","getTime","stat","group","onTeamListChange","newTeamList","onProjectListChange","newProjectList","withOrganization"],"mappings":"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","file":"OrganizationTeams.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p => (p.tabs ? `${space(4)} 0 ${space(2)}` : `${space(4)} 0`)};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n  location: Location;\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const query = typeof location !== 'undefined' && location.search ? location.search : '';\n\n  const fullRoute = `${baseRoute.join('')}${typeof to !== 'string' ? '' : to}${query}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import TeamActions from 'app/actions/teamActions';\nimport {tct} from 'app/locale';\nimport {addSuccessMessage, addErrorMessage} from 'app/actionCreators/indicator';\nimport {uniqueId} from 'app/utils/guid';\n\nconst doCallback = (params = {}, name, ...args) => {\n  if (typeof params[name] === 'function') {\n    params[name](...args);\n  }\n};\n\n// Fetch teams for org\nexport function fetchTeams(api, params, options) {\n  TeamActions.fetchAll(params.orgId);\n  return api.request(`/teams/${params.orgId}/`, {\n    success: data => {\n      TeamActions.fetchAllSuccess(params.orgId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchAllError(params.orgId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function fetchTeamDetails(api, params, options) {\n  TeamActions.fetchDetails(params.teamId);\n  return api.request(`/teams/${params.orgId}/${params.teamId}/`, {\n    success: data => {\n      TeamActions.fetchDetailsSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.fetchDetailsError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function updateTeamSuccess(teamId, data) {\n  TeamActions.updateSuccess(teamId, data);\n}\n\nexport function updateTeam(api, params, options) {\n  const endpoint = `/teams/${params.orgId}/${params.teamId}/`;\n  TeamActions.update(params.teamId, params.data);\n\n  return api.request(endpoint, {\n    method: 'PUT',\n    data: params.data,\n    success: data => {\n      updateTeamSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function joinTeam(api, params, options) {\n  const endpoint = `/organizations/${params.orgId}/members/${params.memberId ||\n    'me'}/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'POST',\n    data: params.data,\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function leaveTeam(api, params, options) {\n  const endpoint = `/organizations/${params.orgId}/members/${params.memberId ||\n    'me'}/teams/${params.teamId}/`;\n  const id = uniqueId();\n\n  TeamActions.update(id, params.teamId);\n\n  return api.request(endpoint, {\n    method: 'DELETE',\n    success: data => {\n      TeamActions.updateSuccess(params.teamId, data);\n      doCallback(options, 'success', data);\n    },\n    error: error => {\n      TeamActions.updateError(id, params.teamId, error);\n      doCallback(options, 'error', error);\n    },\n  });\n}\n\nexport function createTeam(api, team, params, options) {\n  TeamActions.createTeam(team);\n\n  return api\n    .requestPromise(`/organizations/${params.orgId}/teams/`, {\n      method: 'POST',\n      data: team,\n    })\n    .then(\n      data => {\n        TeamActions.createTeamSuccess(data);\n        addSuccessMessage(\n          tct('[team] has been added to the [organization] organization', {\n            team: `#${data.slug}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.createTeamError(team.slug || team.name, err);\n        addErrorMessage(\n          tct('Unable to create [team] in the [organization] organization', {\n            team: `#${team.slug || team.name}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n\nexport function removeTeam(api, params, options) {\n  TeamActions.removeTeam(params.teamId);\n\n  return api\n    .requestPromise(`/teams/${params.orgId}/${params.teamId}/`, {\n      method: 'DELETE',\n    })\n    .then(\n      data => {\n        TeamActions.removeTeamSuccess(params.teamId, data);\n        addSuccessMessage(\n          tct('[team] has been removed from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        return data;\n      },\n      err => {\n        TeamActions.removeTeamError(params.teamId, err);\n        addErrorMessage(\n          tct('Unable to remove [team] from the [organization] organization', {\n            team: `#${params.teamId}`,\n            organization: params.orgId,\n          })\n        );\n        throw err;\n      }\n    );\n}\n","import {Link} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {PanelItem} from 'app/components/panels';\nimport {addErrorMessage, addSuccessMessage} from 'app/actionCreators/indicator';\nimport {joinTeam, leaveTeam} from 'app/actionCreators/teams';\nimport {t, tct, tn} from 'app/locale';\nimport Button from 'app/components/button';\nimport IdBadge from 'app/components/idBadge';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\n\nclass AllTeamsRow extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    urlPrefix: PropTypes.string.isRequired,\n    organization: PropTypes.object.isRequired,\n    team: PropTypes.object.isRequired,\n    openMembership: PropTypes.bool.isRequired,\n  };\n\n  state = {\n    loading: false,\n    error: false,\n  };\n\n  handleRequestAccess = async () => {\n    const {team} = this.props;\n\n    try {\n      this.joinTeam({\n        successMessage: tct('You have requested access to [team]', {\n          team: `#${team.slug}`,\n        }),\n\n        errorMessage: tct('Unable to request access to [team]', {\n          team: `#${team.slug}`,\n        }),\n      });\n\n      // TODO: Ideally we would update team so that `isPending` is true\n    } catch (_err) {\n      // No need to do anything\n    }\n  };\n\n  handleJoinTeam = () => {\n    const {team} = this.props;\n\n    this.joinTeam({\n      successMessage: tct('You have joined [team]', {\n        team: `#${team.slug}`,\n      }),\n      errorMessage: tct('Unable to join [team]', {\n        team: `#${team.slug}`,\n      }),\n    });\n  };\n\n  joinTeam = ({successMessage, errorMessage}) => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    return new Promise((resolve, reject) =>\n      joinTeam(\n        api,\n        {\n          orgId: organization.slug,\n          teamId: team.slug,\n        },\n        {\n          success: () => {\n            this.setState({\n              loading: false,\n              error: false,\n            });\n            addSuccessMessage(successMessage);\n            resolve();\n          },\n          error: () => {\n            this.setState({\n              loading: false,\n              error: true,\n            });\n            addErrorMessage(errorMessage);\n            reject(new Error('Unable to join team'));\n          },\n        }\n      )\n    );\n  };\n\n  handleLeaveTeam = () => {\n    const {api, organization, team} = this.props;\n\n    this.setState({\n      loading: true,\n    });\n\n    leaveTeam(\n      api,\n      {\n        orgId: organization.slug,\n        teamId: team.slug,\n      },\n      {\n        success: () => {\n          this.setState({\n            loading: false,\n            error: false,\n          });\n          addSuccessMessage(\n            tct('You have left [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n        error: () => {\n          this.setState({\n            loading: false,\n            error: true,\n          });\n          addErrorMessage(\n            tct('Unable to leave [team]', {\n              team: `#${team.slug}`,\n            })\n          );\n        },\n      }\n    );\n  };\n\n  render() {\n    const {team, urlPrefix, openMembership} = this.props;\n    const display = (\n      <IdBadge\n        team={team}\n        avatarSize={36}\n        description={tn('%s Member', '%s Members', team.memberCount)}\n      />\n    );\n\n    // You can only view team details if you have access to team -- this should account\n    // for your role + org open memberhsip\n    const canViewTeam = team.hasAccess;\n\n    return (\n      <TeamPanelItem>\n        <TeamNameWrapper>\n          {canViewTeam ? (\n            <TeamLink to={`${urlPrefix}teams/${team.slug}/`}>{display}</TeamLink>\n          ) : (\n            display\n          )}\n        </TeamNameWrapper>\n        <Spacer>\n          {this.state.loading ? (\n            <Button size=\"small\" disabled>\n              ...\n            </Button>\n          ) : team.isMember ? (\n            <Button size=\"small\" onClick={this.handleLeaveTeam}>\n              {t('Leave Team')}\n            </Button>\n          ) : team.isPending ? (\n            <Button size=\"small\" disabled>\n              {t('Request Pending')}\n            </Button>\n          ) : openMembership ? (\n            <Button size=\"small\" onClick={this.handleJoinTeam}>\n              {t('Join Team')}\n            </Button>\n          ) : (\n            <Button size=\"small\" onClick={this.handleRequestAccess}>\n              {t('Request Access')}\n            </Button>\n          )}\n        </Spacer>\n      </TeamPanelItem>\n    );\n  }\n}\n\nconst TeamLink = styled(Link)`\n  display: inline-block;\n\n  &.focus-visible {\n    margin: -${space(1)};\n    padding: ${space(1)};\n    background: #f2eff5;\n    border-radius: 3px;\n    outline: none;\n  }\n`;\n\nexport {AllTeamsRow};\nexport default withApi(AllTeamsRow);\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: 0;\n  align-items: center;\n`;\n\nconst Spacer = styled('div')`\n  padding: ${space(2)};\n`;\n\nconst TeamNameWrapper = styled(Spacer)`\n  flex: 1;\n`;\n","import {Link} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport {tct} from 'app/locale';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport SentryTypes from 'app/sentryTypes';\nimport TextBlock from 'app/views/settings/components/text/textBlock';\n\nimport AllTeamsRow from './allTeamsRow';\n\nclass AllTeamsList extends React.Component {\n  static propTypes = {\n    urlPrefix: PropTypes.string,\n    access: PropTypes.object,\n    organization: SentryTypes.Organization,\n    teamList: PropTypes.arrayOf(SentryTypes.Team),\n    openMembership: PropTypes.bool,\n    useCreateModal: PropTypes.bool,\n  };\n\n  handleCreateTeam = e => {\n    const {useCreateModal, organization} = this.props;\n\n    if (!useCreateModal) {\n      return;\n    }\n\n    e.preventDefault();\n\n    openCreateTeamModal({\n      organization,\n      onClose: () => {},\n    });\n  };\n\n  render() {\n    const {access, organization, urlPrefix, openMembership, useCreateModal} = this.props;\n    const teamNodes = this.props.teamList.map((team, teamIdx) => {\n      return (\n        <AllTeamsRow\n          urlPrefix={urlPrefix}\n          access={access}\n          team={team}\n          organization={organization}\n          openMembership={openMembership}\n          key={team.slug}\n        />\n      );\n    });\n\n    if (teamNodes.length !== 0) {\n      return teamNodes;\n    }\n\n    const to = useCreateModal ? '#' : `/organizations/${organization.slug}/teams/new/`;\n    return (\n      <EmptyMessage>\n        {tct('No teams here. [teamCreate]', {\n          root: <TextBlock noMargin />,\n          teamCreate: access.has('project:admin')\n            ? tct('You can always [link:create one].', {\n                link: <Link to={to} onClick={this.handleCreateTeam} />,\n              })\n            : null,\n        })}\n      </EmptyMessage>\n    );\n  }\n}\n\nexport default AllTeamsList;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport recreateRoute from 'app/utils/recreateRoute';\n\nimport AllTeamsList from './allTeamsList';\n\nclass OrganizationTeams extends React.Component {\n  static propTypes = {\n    allTeams: PropTypes.arrayOf(SentryTypes.Team),\n    activeTeams: PropTypes.arrayOf(SentryTypes.Team),\n    organization: SentryTypes.Organization,\n    access: PropTypes.object,\n    features: PropTypes.object,\n    routes: PropTypes.array,\n    params: PropTypes.object,\n  };\n\n  render() {\n    const {\n      allTeams,\n      activeTeams,\n      organization,\n      access,\n      features,\n      routes,\n      params,\n    } = this.props;\n    const org = organization;\n\n    if (!organization) {\n      return null;\n    }\n\n    const canCreateTeams = access.has('project:admin');\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"small\"\n        disabled={!canCreateTeams}\n        title={\n          !canCreateTeams ? t('You do not have permission to create teams') : undefined\n        }\n        onClick={() =>\n          openCreateTeamModal({\n            organization,\n          })\n        }\n        icon=\"icon-circle-add\"\n      >\n        {t('Create Team')}\n      </Button>\n    );\n\n    const teamRoute = routes.find(({path}) => path === 'teams/');\n    const urlPrefix = recreateRoute(teamRoute, {routes, params, stepBack: -2});\n\n    const activeTeamIds = new Set(activeTeams.map(team => team.id));\n    const otherTeams = allTeams.filter(team => !activeTeamIds.has(team.id));\n    const title = t('Teams');\n\n    return (\n      <div data-test-id=\"team-list\">\n        <SentryDocumentTitle title={title} objSlug={organization.slug} />\n        <SettingsPageHeader title={title} action={action} />\n        <Panel>\n          <PanelHeader>{t('Your Teams')}</PanelHeader>\n          <PanelBody>\n            <AllTeamsList\n              useCreateModal\n              urlPrefix={urlPrefix}\n              organization={org}\n              teamList={activeTeams}\n              access={access}\n              openMembership={false}\n            />\n          </PanelBody>\n        </Panel>\n        <Panel>\n          <PanelHeader>{t('Other Teams')}</PanelHeader>\n          <PanelBody>\n            <AllTeamsList\n              useCreateModal\n              urlPrefix={urlPrefix}\n              organization={org}\n              teamList={otherTeams}\n              access={access}\n              openMembership={\n                !!(features.has('open-membership') || access.has('org:write'))\n              }\n            />\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default OrganizationTeams;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\n\nimport {loadStats} from 'app/actionCreators/projects';\nimport {sortArray} from 'app/utils';\nimport ProjectsStore from 'app/stores/projectsStore';\nimport SentryTypes from 'app/sentryTypes';\nimport TeamStore from 'app/stores/teamStore';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport OrganizationTeams from './organizationTeams';\n\nconst OrganizationTeamsContainer = createReactClass({\n  displayName: 'OrganizationTeamsContainer',\n\n  propTypes: {\n    api: PropTypes.object,\n    organization: SentryTypes.Organization,\n    routes: PropTypes.arrayOf(PropTypes.object),\n  },\n\n  mixins: [\n    Reflux.listenTo(TeamStore, 'onTeamListChange'),\n    Reflux.listenTo(ProjectsStore, 'onProjectListChange'),\n  ],\n\n  getInitialState() {\n    return {\n      teamList: sortArray(TeamStore.getAll(), function(o) {\n        return o && o.name;\n      }),\n      projectList: sortArray(ProjectsStore.getAll(), function(o) {\n        return o && o.name;\n      }),\n      projectStats: {},\n    };\n  },\n\n  componentDidMount() {\n    this.fetchStats();\n  },\n\n  fetchStats() {\n    loadStats(this.props.api, {\n      orgId: this.props.params.orgId,\n      query: {\n        since: new Date().getTime() / 1000 - 3600 * 24,\n        stat: 'generated',\n        group: 'project',\n      },\n    });\n  },\n\n  onTeamListChange() {\n    const newTeamList = TeamStore.getAll();\n\n    this.setState({\n      teamList: sortArray(newTeamList, function(o) {\n        return o.name;\n      }),\n    });\n  },\n\n  onProjectListChange() {\n    const newProjectList = ProjectsStore.getAll();\n\n    this.setState({\n      projectList: sortArray(newProjectList, function(o) {\n        return o.name;\n      }),\n    });\n  },\n\n  render() {\n    const {organization} = this.props;\n\n    if (!organization) {\n      return null;\n    }\n\n    const allTeams = this.state.teamList;\n    const activeTeams = this.state.teamList.filter(team => team.isMember);\n\n    return (\n      <OrganizationTeams\n        {...this.props}\n        access={new Set(organization.access)}\n        features={new Set(organization.features)}\n        organization={organization}\n        projectList={this.state.projectList}\n        allTeams={allTeams}\n        activeTeams={activeTeams}\n      />\n    );\n  },\n});\n\nexport {OrganizationTeamsContainer};\n\nexport default withApi(withOrganization(OrganizationTeamsContainer));\n"],"sourceRoot":""}