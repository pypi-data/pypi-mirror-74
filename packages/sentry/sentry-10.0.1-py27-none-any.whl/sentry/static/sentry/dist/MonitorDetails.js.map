{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/utils/logging.tsx","webpack:///./app/views/monitors/monitorIcon.jsx","webpack:///./app/components/issueList.jsx","webpack:///./app/views/monitors/checkInIcon.jsx","webpack:///./app/views/monitors/monitorCheckIns.tsx","webpack:///./app/views/monitors/monitorHeaderActions.jsx","webpack:///./app/views/monitors/monitorHeader.jsx","webpack:///./app/views/monitors/monitorIssues.jsx","webpack:///./app/views/monitors/monitorStats.jsx","webpack:///./app/views/monitors/details.jsx"],"names":["getTitle","render","title","this","renderComponent","logException","ex","context","scope","setExtra","window","console","error","getBackgroundColor","p","color","status","theme","success","disabled","getSize","size","styled","IssueList","createReactClass","displayName","getDefaultProps","pagination","query","noBorder","noMargin","getInitialState","issueIds","loading","pageLinks","componentWillMount","fetchData","componentWillReceiveProps","nextProps","location","props","nextLocation","pathname","search","remountComponent","setState","api","clear","request","endpoint","method","cursor","data","_","jqXHR","map","item","id","getResponseHeader","renderResults","body","state","renderLoading","renderError","length","panelStyle","border","borderRadius","marginBottom","style","className","issue","key","statsPeriod","showActions","renderEmpty","margin","space","onRetry","emptyText","icon","t","Fragment","withApi","getEndpoints","monitor","per_page","ErrorWrapper","renderBody","checkInList","checkIn","CheckInIconWrapper","TimeSinceWrapper","date","dateCreated","duration","seconds","propTypes","object","isRequired","DivMargin","MonitorHeaderActions","handleDelete","orgId","redirectPath","addLoadingMessage","requestPromise","then","browserHistory","push","addErrorMessage","updateMonitor","resp","clearIndicators","onUpdate","err","toggleStatus","to","marginLeft","onClick","onConfirm","message","React","Component","MonitorHeader","name","lastCheckIn","nextCheckIn","MonitorIssues","getIssuesPath","limit","params","MonitorStats","until","Math","floor","Date","getTime","since","resolution","point","_pointIdx","chart","timeLabel","getTimeLabel","y","ok","width","toLocaleString","emptyStats","stats","x","ts","description","points","height","label","barClasses","tooltip","renderTooltip","AsyncComponent","MonitorDetails","monitorId","paddingBottom","AsyncView"],"mappings":"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","file":"MonitorDetails.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import * as Sentry from '@sentry/browser';\n\nexport function logException(ex: Error, context: any): void {\n  Sentry.withScope(scope => {\n    if (context) {\n      scope.setExtra('context', context);\n    }\n\n    Sentry.captureException(ex);\n  });\n  /*eslint no-console:0*/\n  window.console && console.error && console.error(ex);\n}\n","import styled from 'react-emotion';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${\n    p.status === 'error'\n      ? p.theme.error\n      : p.status === 'ok'\n      ? p.theme.success\n      : p.theme.disabled\n  };`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nexport default styled('div')`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport createReactClass from 'create-react-class';\n\nimport {Panel, PanelBody} from 'app/components/panels';\nimport withApi from 'app/utils/withApi';\nimport CompactIssue from 'app/components/issues/compactIssue';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport Pagination from 'app/components/pagination';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nconst IssueList = createReactClass({\n  displayName: 'IssueList',\n\n  propTypes: {\n    api: PropTypes.object,\n    endpoint: PropTypes.string.isRequired,\n    emptyText: PropTypes.string,\n    query: PropTypes.object,\n    pagination: PropTypes.bool,\n    renderEmpty: PropTypes.func,\n    statsPeriod: PropTypes.string,\n    showActions: PropTypes.bool,\n    noBorder: PropTypes.bool,\n    noMargin: PropTypes.bool,\n  },\n\n  getDefaultProps() {\n    return {\n      pagination: true,\n      query: {},\n      noBorder: false,\n      noMargin: false,\n    };\n  },\n\n  getInitialState() {\n    return {\n      issueIds: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps) {\n    const location = this.props.location;\n    const nextLocation = nextProps.location;\n    if (!location) {\n      return;\n    }\n\n    if (\n      location.pathname !== nextLocation.pathname ||\n      location.search !== nextLocation.search\n    ) {\n      this.remountComponent();\n    }\n  },\n\n  remountComponent() {\n    this.setState(this.getInitialState(), this.fetchData);\n  },\n\n  fetchData() {\n    const location = this.props.location;\n    this.props.api.clear();\n    this.props.api.request(this.props.endpoint, {\n      method: 'GET',\n      query: {\n        cursor: (location && location.query && location.query.cursor) || '',\n        ...this.props.query,\n      },\n      success: (data, _, jqXHR) => {\n        this.setState({\n          data,\n          loading: false,\n          error: false,\n          issueIds: data.map(item => item.id),\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  },\n\n  renderResults() {\n    let body;\n    const {noBorder, noMargin} = this.props;\n\n    if (this.state.loading) {\n      body = this.renderLoading();\n    } else if (this.state.error) {\n      body = this.renderError();\n    } else if (this.state.issueIds.length > 0) {\n      const panelStyle = noBorder ? {border: 0, borderRadius: 0} : {};\n      if (noMargin) {\n        panelStyle.marginBottom = 0;\n      }\n\n      body = (\n        <Panel style={panelStyle}>\n          <PanelBody className=\"issue-list\">\n            {this.state.data.map(issue => {\n              return (\n                <CompactIssue\n                  key={issue.id}\n                  id={issue.id}\n                  data={issue}\n                  statsPeriod={this.props.statsPeriod}\n                  showActions={this.props.showActions}\n                />\n              );\n            })}\n          </PanelBody>\n        </Panel>\n      );\n    } else {\n      body = (this.props.renderEmpty || this.renderEmpty)();\n    }\n\n    return body;\n  },\n\n  renderError() {\n    return (\n      <div style={{margin: `${space(2)} ${space(2)} 0`}}>\n        <LoadingError onRetry={this.fetchData} />\n      </div>\n    );\n  },\n\n  renderLoading() {\n    return (\n      <div style={{margin: '18px 18px 0'}}>\n        <LoadingIndicator />\n      </div>\n    );\n  },\n\n  renderEmpty() {\n    const {emptyText} = this.props;\n    const {noBorder, noMargin} = this.props;\n    const panelStyle = noBorder ? {border: 0, borderRadius: 0} : {};\n    if (noMargin) {\n      panelStyle.marginBottom = 0;\n    }\n\n    return (\n      <Panel style={panelStyle}>\n        <EmptyMessage icon=\"icon-circle-exclamation\">\n          {emptyText ? emptyText : t('Nothing to show here, move along.')}\n        </EmptyMessage>\n      </Panel>\n    );\n  },\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.renderResults()}\n        {this.props.pagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  },\n});\n\nexport {IssueList};\n\nexport default withApi(IssueList);\n","import styled from 'react-emotion';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${\n    p.status === 'error'\n      ? p.theme.error\n      : p.status === 'ok'\n      ? p.theme.success\n      : p.theme.disabled\n  };`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nexport default styled('div')`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {Monitor} from 'app/views/monitors/types';\nimport {PanelBody, PanelItem} from 'app/components/panels';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport Duration from 'app/components/duration';\nimport TimeSince from 'app/components/timeSince';\nimport space from 'app/styles/space';\n\nimport CheckInIcon from './checkInIcon';\n\ntype CheckIn = {\n  dateCreated: string;\n  duration: number;\n  id: string;\n  status: 'ok' | 'error';\n};\n\ntype Props = {\n  monitor: Monitor;\n} & AsyncComponent['props'];\n\ntype State = {\n  checkInList: CheckIn[];\n} & AsyncComponent['state'];\n\nexport default class MonitorCheckIns extends AsyncComponent<Props, State> {\n  static propTypes = {\n    monitor: PropTypes.object.isRequired,\n  };\n\n  getEndpoints(): [string, string, {query: {per_page: number}}][] {\n    const {monitor} = this.props;\n    return [\n      ['checkInList', `/monitors/${monitor.id}/checkins/`, {query: {per_page: 10}}],\n    ];\n  }\n\n  renderError() {\n    return <ErrorWrapper>{super.renderError()}</ErrorWrapper>;\n  }\n\n  renderBody() {\n    return (\n      <PanelBody>\n        {this.state.checkInList.map(checkIn => {\n          return (\n            <PanelItem key={checkIn.id}>\n              <CheckInIconWrapper>\n                <CheckInIcon status={checkIn.status} size={16} />\n              </CheckInIconWrapper>\n              <TimeSinceWrapper>\n                <TimeSince date={checkIn.dateCreated} />\n              </TimeSinceWrapper>\n              <div>\n                {checkIn.duration && <Duration seconds={checkIn.duration / 100} />}\n              </div>\n            </PanelItem>\n          );\n        })}\n      </PanelBody>\n    );\n  }\n}\n\nconst DivMargin = styled('div')`\n  margin-right: ${space(2)};\n`;\n\nconst CheckInIconWrapper = styled(DivMargin)`\n  display: flex;\n  align-items: center;\n`;\n\nconst TimeSinceWrapper = styled(DivMargin)``;\n\nconst ErrorWrapper = styled('div')`\n  margin: ${space(3)} ${space(3)} 0;\n`;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'app/actionCreators/indicator';\nimport {logException} from 'app/utils/logging';\nimport {t} from 'app/locale';\nimport Button from 'app/components/button';\nimport Confirm from 'app/components/confirm';\nimport SentryTypes from 'app/sentryTypes';\nimport withApi from 'app/utils/withApi';\n\nclass MonitorHeaderActions extends React.Component {\n  static propTypes = {\n    api: PropTypes.object.isRequired,\n    monitor: SentryTypes.Monitor.isRequired,\n    orgId: PropTypes.string.isRequired,\n    onUpdate: PropTypes.func,\n  };\n\n  handleDelete = () => {\n    const {api, orgId, monitor} = this.props;\n    const redirectPath = `/organizations/${orgId}/monitors/`;\n    addLoadingMessage(t('Deleting Monitor...'));\n\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'DELETE',\n      })\n      .then(() => {\n        browserHistory.push(redirectPath);\n      })\n      .catch(() => {\n        addErrorMessage(t('Unable to remove monitor.'));\n      });\n  };\n\n  updateMonitor = data => {\n    const {api, monitor} = this.props;\n    addLoadingMessage();\n    api\n      .requestPromise(`/monitors/${monitor.id}/`, {\n        method: 'PUT',\n        data,\n      })\n      .then(resp => {\n        clearIndicators();\n        this.props.onUpdate && this.props.onUpdate(resp);\n      })\n      .catch(err => {\n        logException(err);\n        addErrorMessage(t('Unable to update monitor.'));\n      });\n  };\n\n  toggleStatus = () => {\n    const {monitor} = this.props;\n    this.updateMonitor({\n      status: monitor.status === 'disabled' ? 'active' : 'disabled',\n    });\n  };\n\n  render() {\n    const {monitor, orgId} = this.props;\n    return (\n      <div className=\"m-b-1\">\n        <div className=\"btn-group\">\n          <Button\n            size=\"small\"\n            icon=\"icon-edit\"\n            to={`/organizations/${orgId}/monitors/${monitor.id}/edit/`}\n          >\n            {t('Edit')}\n          </Button>\n        </div>\n        <div className=\"btn-group\" style={{marginLeft: 10}}>\n          <Button size=\"small\" icon=\"icon-edit\" onClick={this.toggleStatus}>\n            {monitor.status !== 'disabled' ? t('Pause') : t('Enable')}\n          </Button>\n        </div>\n        <div className=\"btn-group\" style={{marginLeft: 10}}>\n          <Confirm\n            onConfirm={this.handleDelete}\n            message={t(\n              'Deleting this monitor is permanent. Are you sure you wish to continue?'\n            )}\n          >\n            <Button size=\"small\" icon=\"icon-trash\">\n              {t('Delete')}\n            </Button>\n          </Confirm>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withApi(MonitorHeaderActions);\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport TimeSince from 'app/components/timeSince';\nimport {t} from 'app/locale';\nimport SentryTypes from 'app/sentryTypes';\n\nimport MonitorHeaderActions from './monitorHeaderActions';\nimport MonitorIcon from './monitorIcon';\n\nexport default class MonitorHeader extends React.Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    monitor: SentryTypes.Monitor.isRequired,\n    onUpdate: PropTypes.func,\n  };\n\n  render() {\n    const {monitor} = this.props;\n\n    return (\n      <div className=\"release-details\">\n        <div className=\"row\">\n          <div className=\"col-sm-6 col-xs-10\">\n            <h3>{t('Monitor Details')}</h3>\n            <div className=\"release-meta\">{monitor.name}</div>\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <h6 className=\"nav-header\">{t('Last Check-in')}</h6>\n            {monitor.lastCheckIn && <TimeSince date={monitor.lastCheckIn} />}\n          </div>\n          <div className=\"col-sm-2 hidden-xs\">\n            <h6 className=\"nav-header\">{t('Next Check-in')}</h6>\n            {monitor.nextCheckIn && <TimeSince date={monitor.nextCheckIn} />}\n          </div>\n          <div className=\"col-sm-2\">\n            <h6 className=\"nav-header\">{t('Status')}</h6>\n            <MonitorIcon status={monitor.status} size={16} />\n          </div>\n        </div>\n        <MonitorHeaderActions\n          orgId={this.props.orgId}\n          monitor={monitor}\n          onUpdate={this.props.onUpdate}\n        />\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport IssueList from 'app/components/issueList';\nimport {t} from 'app/locale';\n\nexport default class MonitorIssues extends Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    monitor: PropTypes.object.isRequired,\n  };\n\n  getIssuesPath() {\n    const {orgId} = this.props;\n    return `/organizations/${orgId}/issues/`;\n  }\n\n  render() {\n    const {monitor, orgId} = this.props;\n\n    return (\n      <IssueList\n        endpoint={this.getIssuesPath()}\n        query={{\n          query: 'monitor.id:\"' + monitor.id + '\"',\n          limit: 5,\n        }}\n        statsPeriod=\"0\"\n        pagination={false}\n        emptyText={t('No issues found')}\n        showActions={false}\n        noBorder\n        noMargin\n        params={{orgId}}\n      />\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\nimport {Panel, PanelBody} from 'app/components/panels';\nimport {t} from 'app/locale';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport StackedBarChart from 'app/components/stackedBarChart';\n\nexport default class MonitorStats extends AsyncComponent {\n  static propTypes = {\n    monitor: PropTypes.object.isRequired,\n    ...AsyncComponent.PropTypes,\n  };\n\n  getDefaultState() {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n\n    return {\n      since,\n      until,\n    };\n  }\n\n  getEndpoints() {\n    const {monitor} = this.props;\n    return [\n      [\n        'stats',\n        `/monitors/${monitor.id}/stats/`,\n        {\n          query: {\n            since: this.state.since,\n            until: this.state.until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderTooltip(point, _pointIdx, chart) {\n    const timeLabel = chart.getTimeLabel(point);\n    const [error, ok] = point.y;\n\n    return (\n      <div style={{width: '150px'}}>\n        <div className=\"time-label\">{timeLabel}</div>\n        <div className=\"value-label\">\n          {t('%s successful', ok.toLocaleString())}\n          <br />\n          {t('%s failed', error.toLocaleString())}\n        </div>\n      </div>\n    );\n  }\n\n  renderBody() {\n    let emptyStats = true;\n    const stats = this.state.stats.map(p => {\n      if (p.ok || p.error) {\n        emptyStats = false;\n      }\n      return {\n        x: p.ts,\n        y: [p.error, p.ok],\n      };\n    });\n\n    return (\n      <Panel>\n        <PanelBody>\n          {!emptyStats ? (\n            <StackedBarChart\n              points={stats}\n              height={150}\n              label=\"events\"\n              barClasses={['error', 'success']}\n              className=\"standard-barchart\"\n              style={{border: 'none'}}\n              tooltip={this.renderTooltip}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('All check-ins for this monitor.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n","import React from 'react';\n\nimport AsyncView from 'app/views/asyncView';\nimport {Panel, PanelHeader} from 'app/components/panels';\nimport {t} from 'app/locale';\n\nimport MonitorCheckIns from './monitorCheckIns';\nimport MonitorHeader from './monitorHeader';\nimport MonitorIssues from './monitorIssues';\nimport MonitorStats from './monitorStats';\n\nclass MonitorDetails extends AsyncView {\n  getEndpoints() {\n    const {params, location} = this.props;\n    return [\n      [\n        'monitor',\n        `/monitors/${params.monitorId}/`,\n        {\n          query: location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    if (this.state.monitor) {\n      return `${this.state.monitor.name} - Monitors - ${this.props.params.orgId}`;\n    }\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  onUpdate = data => {\n    this.setState({\n      monitor: {\n        ...this.state.monitor,\n        ...data,\n      },\n    });\n  };\n\n  renderBody() {\n    const {monitor} = this.state;\n    return (\n      <React.Fragment>\n        <MonitorHeader\n          monitor={monitor}\n          orgId={this.props.params.orgId}\n          onUpdate={this.onUpdate}\n        />\n\n        <MonitorStats monitor={monitor} />\n\n        <Panel style={{paddingBottom: 0}}>\n          <PanelHeader>{t('Related Issues')}</PanelHeader>\n\n          <MonitorIssues monitor={monitor} orgId={this.props.params.orgId} />\n        </Panel>\n\n        <Panel>\n          <PanelHeader>{t('Recent Check-ins')}</PanelHeader>\n\n          <MonitorCheckIns monitor={monitor} />\n        </Panel>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default MonitorDetails;\n"],"sourceRoot":""}