{"version":3,"sources":["webpack:///./app/components/resultGrid.jsx","webpack:///./app/views/admin/adminProjects.jsx"],"names":["Filter","getCurrentLabel","selected","props","options","filter","item","value","name","getDefaultItem","query","$","extend","location","cursor","queryKey","key","isActive","to","path","getSelector","title","map","filterQuery","className","this","length","React","Component","SortBy","getCurrentSortLabel","getSortBySelector","sortBy","ResultGrid","createReactClass","displayName","getDefaultProps","endpoint","method","columns","sortOptions","filters","defaultSort","keyForRow","row","id","columnsForRow","defaultParams","per_page","hasPagination","hasSearch","getInitialState","queryParams","rows","loading","error","pageLinks","Object","assign","componentWillMount","fetchData","componentWillReceiveProps","nextProps","setState","remountComponent","refresh","state","api","request","data","success","_","jqXHR","getResponseHeader","onSearch","e","targetQueryParams","jQuery","preventDefault","browserHistory","push","pathname","onQueryChange","evt","target","renderLoading","colSpan","renderError","renderNoResults","renderResults","render","onSubmit","type","placeholder","style","width","autoComplete","onChange","keys","filterKey","withApi","prettyDate","x","moment","format","AdminProjects","getRow","href","organization","slug","textAlign","status","dateCreated","t"],"mappings":"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","file":"AdminProjects.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport $ from 'jquery';\nimport {browserHistory} from 'react-router';\n\nimport withApi from 'app/utils/withApi';\nimport DropdownLink from 'app/components/dropdownLink';\nimport MenuItem from 'app/components/menuItem';\nimport Pagination from 'app/components/pagination';\n\nclass Filter extends React.Component {\n  static propTypes = {\n    name: PropTypes.string.isRequired,\n    queryKey: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n    path: PropTypes.string.isRequired,\n    value: PropTypes.any,\n  };\n\n  getCurrentLabel = () => {\n    const selected = this.props.options.filter(item => {\n      return item[0] === (this.props.value || '');\n    })[0];\n    if (selected) {\n      return this.props.name + ': ' + selected[1];\n    }\n    return this.props.name + ': ' + 'Any';\n  };\n\n  getDefaultItem = () => {\n    const query = $.extend({}, this.props.location.query, {\n      cursor: '',\n    });\n    delete query[this.props.queryKey];\n\n    return (\n      <MenuItem\n        key=\"\"\n        isActive={this.props.value === '' || !this.props.value}\n        to={this.props.path}\n        query={query}\n      >\n        Any\n      </MenuItem>\n    );\n  };\n\n  getSelector = () => {\n    return (\n      <DropdownLink title={this.getCurrentLabel()}>\n        {this.getDefaultItem()}\n        {this.props.options.map(item => {\n          const filterQuery = {};\n          filterQuery[this.props.queryKey] = item[0];\n          filterQuery.cursor = '';\n          const query = $.extend({}, this.props.location.query, filterQuery);\n          return (\n            <MenuItem\n              key={item[0]}\n              isActive={this.props.value === item[0]}\n              to={this.props.path}\n              query={query}\n            >\n              {item[1]}\n            </MenuItem>\n          );\n        })}\n      </DropdownLink>\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"filter-options\">\n        {this.props.options.length === 1 ? (\n          <strong>{this.getCurrentLabel()}</strong>\n        ) : (\n          this.getSelector()\n        )}\n      </div>\n    );\n  }\n}\n\nclass SortBy extends React.Component {\n  static propTypes = {\n    options: PropTypes.array.isRequired,\n    path: PropTypes.string.isRequired,\n    location: PropTypes.object,\n    value: PropTypes.any,\n  };\n\n  getCurrentSortLabel = () => {\n    return this.props.options.filter(item => {\n      return item[0] === this.props.value;\n    })[0][1];\n  };\n\n  getSortBySelector = () => {\n    return (\n      <DropdownLink title={this.getCurrentSortLabel()} className=\"sorted-by\">\n        {this.props.options.map(item => {\n          const query = $.extend({}, this.props.location.query, {\n            sortBy: item[0],\n            cursor: '',\n          });\n          return (\n            <MenuItem\n              isActive={this.props.value === item[0]}\n              key={item[0]}\n              to={this.props.path}\n              query={query}\n            >\n              {item[1]}\n            </MenuItem>\n          );\n        })}\n      </DropdownLink>\n    );\n  };\n\n  render() {\n    if (this.props.options.length === 0) {\n      return null;\n    }\n\n    return (\n      <div className=\"sort-options\">\n        Showing results sorted by\n        {this.props.options.length === 1 ? (\n          <strong className=\"sorted-by\">{this.getCurrentSortLabel()}</strong>\n        ) : (\n          this.getSortBySelector()\n        )}\n      </div>\n    );\n  }\n}\n\nconst ResultGrid = createReactClass({\n  displayName: 'ResultGrid',\n\n  propTypes: {\n    api: PropTypes.object,\n    columns: PropTypes.array,\n    columnsForRow: PropTypes.func,\n    defaultSort: PropTypes.string,\n    defaultParams: PropTypes.object,\n    endpoint: PropTypes.string,\n    filters: PropTypes.object,\n    hasPagination: PropTypes.bool,\n    hasSearch: PropTypes.bool,\n    keyForRow: PropTypes.func,\n    location: PropTypes.object,\n    method: PropTypes.string,\n    options: PropTypes.array,\n    path: PropTypes.string,\n    sortOptions: PropTypes.array,\n  },\n\n  getDefaultProps() {\n    return {\n      path: '',\n      endpoint: '',\n      method: 'GET',\n      columns: [],\n      sortOptions: [],\n      filters: {},\n      defaultSort: '',\n      keyForRow: function(row) {\n        return row.id;\n      },\n      columnsForRow: function(row) {\n        return [];\n      },\n      defaultParams: {\n        per_page: 50,\n      },\n      hasPagination: true,\n      hasSearch: false,\n    };\n  },\n\n  getInitialState() {\n    const queryParams = (this.props.location || {}).query || {};\n\n    return {\n      rows: [],\n      loading: true,\n      error: false,\n      pageLinks: null,\n      query: queryParams.query || '',\n      sortBy: queryParams.sortBy || this.props.defaultSort,\n      filters: Object.assign({}, queryParams),\n    };\n  },\n\n  componentWillMount() {\n    this.fetchData();\n  },\n\n  componentWillReceiveProps(nextProps) {\n    const queryParams = (nextProps.location || {}).query || {};\n    this.setState(\n      {\n        query: queryParams.query || '',\n        sortBy: queryParams.sortBy || this.props.defaultSort,\n        filters: Object.assign({}, queryParams),\n        pageLinks: null,\n        loading: true,\n        error: false,\n      },\n      this.fetchData\n    );\n  },\n\n  remountComponent() {\n    this.setState(this.getInitialState(), this.fetchData);\n  },\n\n  refresh() {\n    this.setState(\n      {\n        loading: true,\n      },\n      this.fetchData()\n    );\n  },\n\n  fetchData() {\n    // TODO(dcramer): this should whitelist filters/sortBy/cursor/perPage\n    const queryParams = $.extend(\n      {},\n      this.props.defaultParams,\n      {sortBy: this.state.sortBy},\n      (this.props.location || {}).query || {}\n    );\n\n    this.props.api.request(this.props.endpoint, {\n      method: this.props.method,\n      data: queryParams,\n      success: (data, _, jqXHR) => {\n        this.setState({\n          loading: false,\n          error: false,\n          rows: data,\n          pageLinks: jqXHR.getResponseHeader('Link'),\n        });\n      },\n      error: () => {\n        this.setState({\n          loading: false,\n          error: true,\n        });\n      },\n    });\n  },\n\n  onSearch(e) {\n    const location = this.props.location || {};\n    const {query} = this.state;\n    const targetQueryParams = jQuery.extend({}, location.query || {}, {\n      query,\n      cursor: '',\n    });\n\n    e.preventDefault();\n\n    browserHistory.push({\n      pathname: this.props.path,\n      query: targetQueryParams,\n    });\n  },\n\n  onQueryChange(evt) {\n    this.setState({query: evt.target.value});\n  },\n\n  renderLoading() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns.length}>\n          <div className=\"loading\">\n            <div className=\"loading-indicator\" />\n            <div className=\"loading-message\">Hold on to your butts!</div>\n          </div>\n        </td>\n      </tr>\n    );\n  },\n\n  renderError() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns.length}>\n          <div className=\"alert-block alert-error\">Something bad happened :(</div>\n        </td>\n      </tr>\n    );\n  },\n\n  renderNoResults() {\n    return (\n      <tr>\n        <td colSpan={this.props.columns.length}>No results found.</td>\n      </tr>\n    );\n  },\n\n  renderResults() {\n    return this.state.rows.map(row => {\n      return <tr key={this.props.keyForRow(row)}>{this.props.columnsForRow(row)}</tr>;\n    });\n  },\n\n  render() {\n    const {filters} = this.props;\n    return (\n      <div className=\"result-grid\">\n        <div className=\"table-options\">\n          {this.props.hasSearch && (\n            <div className=\"result-grid-search\">\n              <form onSubmit={this.onSearch}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control input-search\"\n                    placeholder=\"search\"\n                    style={{width: 300}}\n                    name=\"query\"\n                    autoComplete=\"off\"\n                    value={this.state.query}\n                    onChange={this.onQueryChange}\n                  />\n                  <button type=\"submit\" className=\"btn btn-sm btn-primary\">\n                    <span className=\"icon-search\" />\n                  </button>\n                </div>\n              </form>\n            </div>\n          )}\n          <SortBy\n            options={this.props.sortOptions}\n            value={this.state.sortBy}\n            path={this.props.path}\n            location={this.props.location}\n          />\n          {Object.keys(filters).map(filterKey => {\n            return (\n              <Filter\n                key={filterKey}\n                queryKey={filterKey}\n                value={this.state.filters[filterKey]}\n                path={this.props.path}\n                location={this.props.location}\n                {...filters[filterKey]}\n              />\n            );\n          })}\n        </div>\n\n        <table className=\"table table-grid\">\n          <thead>\n            <tr>{this.props.columns}</tr>\n          </thead>\n          <tbody>\n            {this.state.loading\n              ? this.renderLoading()\n              : this.state.error\n              ? this.renderError()\n              : this.state.rows.length === 0\n              ? this.renderNoResults()\n              : this.renderResults()}\n          </tbody>\n        </table>\n        {this.props.hasPagination && this.state.pageLinks && (\n          <Pagination pageLinks={this.state.pageLinks} />\n        )}\n      </div>\n    );\n  },\n});\n\nexport {ResultGrid};\n\nexport default withApi(ResultGrid);\n","/* eslint-disable react/jsx-key */\nimport React from 'react';\nimport moment from 'moment';\n\nimport ResultGrid from 'app/components/resultGrid';\nimport {t} from 'app/locale';\n\nexport const prettyDate = function(x) {\n  return moment(x).format('ll');\n};\n\nclass AdminProjects extends React.Component {\n  getRow = row => {\n    return [\n      <td>\n        <strong>\n          <a href={`/${row.organization.slug}/${row.slug}/`}>{row.name}</a>\n        </strong>\n        <br />\n        <small>{row.organization.name}</small>\n      </td>,\n      <td style={{textAlign: 'center'}}>{row.status}</td>,\n      <td style={{textAlign: 'right'}}>{prettyDate(row.dateCreated)}</td>,\n    ];\n  };\n\n  render() {\n    const columns = [\n      <th>Project</th>,\n      <th style={{width: 150, textAlign: 'center'}}>Status</th>,\n      <th style={{width: 200, textAlign: 'right'}}>Created</th>,\n    ];\n\n    return (\n      <div>\n        <h3>{t('Projects')}</h3>\n        <ResultGrid\n          path=\"/manage/projects/\"\n          endpoint=\"/projects/?show=all\"\n          method=\"GET\"\n          columns={columns}\n          columnsForRow={this.getRow}\n          hasSearch\n          filters={{\n            status: {\n              name: 'Status',\n              options: [['active', 'Active'], ['deleted', 'Deleted']],\n            },\n          }}\n          sortOptions={[['date', 'Date Created']]}\n          defaultSort=\"date\"\n          {...this.props}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AdminProjects;\n"],"sourceRoot":""}