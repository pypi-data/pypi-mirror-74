{"version":3,"sources":["webpack:///./app/components/asyncComponentSearchInput.tsx","webpack:///./app/views/permissionDenied.jsx","webpack:///./app/components/asyncComponent.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/tag.jsx","webpack:///./app/components/betaTag.jsx","webpack:///./app/components/searchBar.jsx","webpack:///./app/views/monitors/monitorIcon.jsx","webpack:///./app/views/monitors/monitors.jsx"],"names":["state","query","busy","immediateQuery","searchQuery","this","props","location","api","setState","requestPromise","url","includeAllArgs","method","data","jqXHR","onSuccess","onError","debounceWait","handleChange","handleInputChange","evt","target","value","handleSearch","updateRoute","onSearchSubmit","preventDefault","router","push","pathname","render","placeholder","children","className","defaultSearchBar","Form","onSubmit","onChange","StyledLoadingIndicator","size","hideMessage","mini","undefined","defaultProps","Component","PermissionDenied","routes","context","organization","project","route","getRouteStringFromRoutes","Sentry","scope","setFingerprint","setExtra","features","access","Error","title","t","message","tct","link","href","React","contextTypes","PropTypes","object","withRouter","wrapErrorHandling","component","fn","args","error","console","setTimeout","reloadOnVisible","shouldReloadOnVisible","shouldReload","shouldRenderBadRequests","markShouldMeasure","remainingRequests","_measurement","hasMeasured","finished","remountComponent","reloadData","getDefaultState","fetchData","visibilityReloader","loading","document","hidden","extraState","endpoints","getEndpoints","length","clear","forEach","stateKey","endpoint","params","options","locationQuery","paginate","cursor","request","success","_","handleRequestSuccess","allowError","handleError","bind","mark","componentWillMount","addEventListener","componentWillReceiveProps","_newProps","_newContext","componentDidUpdate","prevProps","prevContext","isRouterInContext","isLocationInProps","currentLocation","prevLocation","routeString","measure","name","start","finishProfile","search","componentWillUnmount","removeEventListener","reloading","errors","onRequestSuccess","_resp","onRequestError","_args","initialRequest","prevState","getResponseHeader","responseText","category","level","getEndpointParams","warn","getEndpoint","renderSearchInput","firstEndpoint","stateKeyOrDefault","urlOrDefault","renderError","renderLoading","disableLog","disableReport","unauthorizedErrors","Object","values","find","resp","status","permissionErrors","shouldLogSentry","badRequests","filter","responseJSON","detail","map","join","disableLogSentry","onRetry","renderComponent","renderBody","propTypes","getTitle","Tag","styled","icon","priority","border","StyledInlineSvg","src","p","gray5","theme","alert","background","offWhite2","gray1","getBorder","inline","getMarginLeft","string","bool","InlineSvg","BetaTag","position","StyledTag","fontSizeSmall","space","SearchBar","blur","searchInputRef","current","onSearch","clearSearch","defaultQuery","onQueryFocus","dropdownVisible","onQueryBlur","onQueryChange","createRef","nextProps","classNames","type","ref","autoComplete","onBlur","onClick","PureComponent","getBackgroundColor","color","disabled","getSize","Monitors","getParams","orgId","monitorListPageLinks","Fragment","HeaderTitle","NewMonitorButton","to","slug","StyledSearchBar","monitorList","monitor","PanelItemCentered","key","id","StyledLink","nextCheckIn","date","lastCheckIn","pageLinks","AsyncView","isRequired","PageHeading","Button","PanelItem","Link","withOrganization"],"mappings":"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","file":"Monitors.js","sourcesContent":["import * as ReactRouter from 'react-router';\nimport debounce from 'lodash/debounce';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport Input from 'app/views/settings/components/forms/controls/input';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport {Client} from 'app/api';\n\ntype RenderProps = {\n  defaultSearchBar: React.ReactNode;\n  busy: boolean;\n  handleChange: (value: string) => void;\n  value: string;\n};\n\ntype Props = ReactRouter.WithRouterProps & {\n  api: Client;\n  className?: string;\n  /**\n   * URL to make the search request to\n   */\n  url: string;\n  /**\n   * Placeholder text in the search input\n   */\n  placeholder?: string;\n  /**\n   * Time in milliseconds to wait before firing off the request\n   */\n  debounceWait?: number;\n  /**\n   * Updates URL with search query in the URL param: `query`\n   */\n  updateRoute?: boolean;\n\n  onSearchSubmit?: (query: string, event: React.FormEvent) => void;\n  onSuccess: (data: object, jqXHR: JQueryXHR | undefined) => void;\n  onError: () => void;\n\n  /**\n   * A render-prop child may be passed to handle custom rendering of the input.\n   */\n  children?: (otps: RenderProps) => React.ReactNode;\n};\n\ntype State = {\n  query: string;\n  busy: boolean;\n};\n\n/**\n * This is a search input that can be easily used in AsyncComponent/Views.\n *\n * It probably doesn't make too much sense outside of an AsyncComponent atm.\n */\nclass AsyncComponentSearchInput extends React.Component<Props, State> {\n  static defaultProps = {\n    placeholder: 'Search...',\n    debounceWait: 200,\n  };\n\n  state: State = {\n    query: '',\n    busy: false,\n  };\n\n  immediateQuery = async (searchQuery: string) => {\n    const {location, api} = this.props;\n    this.setState({busy: true});\n\n    try {\n      const [data, , jqXHR] = await api.requestPromise(`${this.props.url}`, {\n        includeAllArgs: true,\n        method: 'GET',\n        query: {...location.query, query: searchQuery},\n      });\n      // only update data if the request's query matches the current query\n      if (this.state.query === searchQuery) {\n        this.props.onSuccess(data, jqXHR);\n      }\n    } catch {\n      this.props.onError();\n    }\n\n    this.setState({busy: false});\n  };\n\n  query = debounce(this.immediateQuery, this.props.debounceWait);\n\n  handleChange = (query: string) => {\n    this.query(query);\n    this.setState({query});\n  };\n\n  handleInputChange = (evt: React.ChangeEvent<HTMLInputElement>) =>\n    this.handleChange(evt.target.value);\n\n  /**\n   * This is called when \"Enter\" (more specifically a form \"submit\" event) is pressed.\n   */\n  handleSearch = (evt: React.FormEvent<HTMLFormElement>) => {\n    const {updateRoute, onSearchSubmit} = this.props;\n    evt.preventDefault();\n\n    // Update the URL to reflect search term.\n    if (updateRoute) {\n      const {router, location} = this.props;\n      router.push({\n        pathname: location.pathname,\n        query: {\n          query: this.state.query,\n        },\n      });\n    }\n\n    if (typeof onSearchSubmit !== 'function') {\n      return;\n    }\n    onSearchSubmit(this.state.query, evt);\n  };\n\n  render() {\n    const {placeholder, children, className} = this.props;\n    const {busy, query} = this.state;\n\n    const defaultSearchBar = (\n      <Form onSubmit={this.handleSearch}>\n        <Input\n          value={query}\n          onChange={this.handleInputChange}\n          className={className}\n          placeholder={placeholder}\n        />\n        {busy && <StyledLoadingIndicator size={18} hideMessage mini />}\n      </Form>\n    );\n\n    return children === undefined\n      ? defaultSearchBar\n      : children({defaultSearchBar, busy, value: query, handleChange: this.handleChange});\n  }\n}\n\nconst StyledLoadingIndicator = styled(LoadingIndicator)`\n  position: absolute;\n  right: 25px;\n  top: 50%;\n  transform: translateY(-13px);\n`;\n\nconst Form = styled('form')`\n  position: relative;\n`;\n\n// XXX(epurkhiser): The withRouter HoC has incorrect typings. It does not\n// correctly remove the WithRouterProps from the return type of the HoC, thus\n// we manually have to do this.\ntype PropsWithoutRouter = Omit<Props, keyof ReactRouter.WithRouterProps>;\n\nexport default ReactRouter.withRouter(AsyncComponentSearchInput) as React.ComponentClass<\n  PropsWithoutRouter\n>;\n","import {withRouter} from 'react-router';\nimport DocumentTitle from 'react-document-title';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport * as Sentry from '@sentry/browser';\n\nimport {t, tct} from 'app/locale';\nimport ExternalLink from 'app/components/links/externalLink';\nimport LoadingError from 'app/components/loadingError';\nimport getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';\n\nconst ERROR_NAME = 'Permission Denied';\n\nclass PermissionDenied extends React.Component {\n  static propTypes = {\n    routes: PropTypes.array,\n  };\n\n  static contextTypes = {\n    organization: PropTypes.object,\n    project: PropTypes.object,\n  };\n\n  componentDidMount() {\n    const {routes} = this.props;\n    const {organization, project} = this.context;\n\n    const route = getRouteStringFromRoutes(routes);\n    Sentry.withScope(scope => {\n      scope.setFingerprint([ERROR_NAME, route]);\n      scope.setExtra('route', route);\n      scope.setExtra('orgFeatures', (organization && organization.features) || []);\n      scope.setExtra('orgAccess', (organization && organization.access) || []);\n      scope.setExtra('projectFeatures', (project && project.features) || []);\n      Sentry.captureException(new Error(`${ERROR_NAME}${route ? ` : ${route}` : ''}`));\n    });\n  }\n\n  render() {\n    return (\n      <DocumentTitle title={t('Permission Denied')}>\n        <LoadingError\n          message={tct(\n            'Your role does not have the necessary permissions to access this resource, please read more about [link:organizational roles]',\n            {\n              link: <ExternalLink href=\"https://docs.sentry.io/learn/membership/\" />,\n            }\n          )}\n        />\n      </DocumentTitle>\n    );\n  }\n}\n\nexport default withRouter(PermissionDenied);\n","import isEqual from 'lodash/isEqual';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport * as Sentry from '@sentry/browser';\nimport {RouteComponentProps} from 'react-router/lib/Router';\n\nimport {Client} from 'app/api';\nimport {metric} from 'app/utils/analytics';\nimport {t} from 'app/locale';\nimport AsyncComponentSearchInput from 'app/components/asyncComponentSearchInput';\nimport LoadingError from 'app/components/loadingError';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport PermissionDenied from 'app/views/permissionDenied';\nimport RouteError from 'app/views/routeError';\nimport getRouteStringFromRoutes from 'app/utils/getRouteStringFromRoutes';\n\ntype AsyncComponentProps = {\n  // optional sentry APM profiling\n  // Note we don't decorate `AsyncComponent` but rather the subclass\n  // so we can get its component name\n  finishProfile?: () => void;\n} & Partial<RouteComponentProps<{}, {}>>;\n\ntype AsyncComponentState = {\n  loading: boolean;\n  reloading: boolean;\n  error: boolean;\n  errors: object;\n  remainingRequests?: number;\n  [key: string]: any;\n};\n\ntype SearchInputProps = React.ComponentProps<typeof AsyncComponentSearchInput>;\n\ntype RenderSearchInputArgs = Omit<\n  SearchInputProps,\n  'api' | 'onSuccess' | 'onError' | 'url'\n> & {\n  stateKey?: string;\n  url?: SearchInputProps['url'];\n};\n\n/**\n * Wraps methods on the AsyncComponent to catch errors and set the `error`\n * state on error.\n */\nfunction wrapErrorHandling<T extends any[], U>(\n  component: AsyncComponent,\n  fn: (...args: T) => U\n) {\n  return (...args: T): U | null => {\n    try {\n      return fn(...args);\n    } catch (error) {\n      // eslint-disable-next-line no-console\n      console.error(error);\n      setTimeout(() => {\n        throw error;\n      });\n      component.setState({error});\n      return null;\n    }\n  };\n}\n\nexport default class AsyncComponent<\n  P extends AsyncComponentProps = AsyncComponentProps,\n  S extends AsyncComponentState = AsyncComponentState\n> extends React.Component<P, S> {\n  static propTypes: any = {\n    location: PropTypes.object,\n    router: PropTypes.object,\n  };\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  // Override this flag to have the component reload it's state when the window\n  // becomes visible again. This will set the loading and reloading state, but\n  // will not render a loading state during reloading.\n  //\n  // eslint-disable-next-line react/sort-comp\n  reloadOnVisible = false;\n\n  // When enabling reloadOnVisible, this flag may be used to turn on and off\n  // the reloading. This is useful if your component only needs to reload when\n  // becoming visible during certain states.\n  //\n  // eslint-disable-next-line react/sort-comp\n  shouldReloadOnVisible = false;\n\n  // This affects how the component behaves when `remountComponent` is called\n  // By default, the component gets put back into a \"loading\" state when re-fetching data.\n  // If this is true, then when we fetch data, the original ready component remains mounted\n  // and it will need to handle any additional \"reloading\" states\n  shouldReload = false;\n\n  // should `renderError` render the `detail` attribute of a 400 error\n  shouldRenderBadRequests = false;\n\n  constructor(props: P, context: any) {\n    super(props, context);\n\n    this.fetchData = wrapErrorHandling(this, this.fetchData.bind(this));\n    this.render = wrapErrorHandling(this, this.render.bind(this));\n\n    this.state = this.getDefaultState() as Readonly<S>;\n\n    this._measurement = {\n      hasMeasured: false,\n    };\n    if (props.routes && props.routes) {\n      metric.mark(`async-component-${getRouteStringFromRoutes(props.routes)}`);\n    }\n  }\n\n  componentWillMount() {\n    this.api = new Client();\n    this.fetchData();\n\n    if (this.reloadOnVisible) {\n      document.addEventListener('visibilitychange', this.visibilityReloader);\n    }\n  }\n\n  // Compatiblity shim for child classes that call super on this hook.\n  componentWillReceiveProps(_newProps: P, _newContext: any) {}\n\n  componentDidUpdate(prevProps: P, prevContext: any) {\n    const isRouterInContext = !!prevContext.router;\n    const isLocationInProps = prevProps.location !== undefined;\n\n    const currentLocation = isLocationInProps\n      ? this.props.location\n      : isRouterInContext\n      ? this.context.router.location\n      : null;\n    const prevLocation = isLocationInProps\n      ? prevProps.location\n      : isRouterInContext\n      ? prevContext.router.location\n      : null;\n\n    if (!(currentLocation && prevLocation)) {\n      return;\n    }\n\n    // Take a measurement from when this component is initially created until it finishes it's first\n    // set of API requests\n    if (\n      !this._measurement.hasMeasured &&\n      this._measurement.finished &&\n      this.props.routes\n    ) {\n      const routeString = getRouteStringFromRoutes(this.props.routes);\n      metric.measure({\n        name: 'app.component.async-component',\n        start: `async-component-${routeString}`,\n        data: {\n          route: routeString,\n          error: this._measurement.error,\n        },\n      });\n      this._measurement.hasMeasured = true;\n\n      // sentry apm profiling\n      if (typeof this.props.finishProfile === 'function') {\n        this.props.finishProfile();\n      }\n    }\n\n    // Re-fetch data when router params change.\n    if (\n      !isEqual(this.props.params, prevProps.params) ||\n      currentLocation.search !== prevLocation.search ||\n      currentLocation.state !== prevLocation.state\n    ) {\n      this.remountComponent();\n    }\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n    document.removeEventListener('visibilitychange', this.visibilityReloader);\n  }\n\n  api: Client = new Client();\n  private _measurement: any;\n\n  // XXX: cant call this getInitialState as React whines\n  getDefaultState(): AsyncComponentState {\n    const endpoints = this.getEndpoints();\n    const state = {\n      // has all data finished requesting?\n      loading: true,\n      // is the component reload\n      reloading: false,\n      // is there an error loading ANY data?\n      error: false,\n      errors: {},\n    };\n    endpoints.forEach(([stateKey, _endpoint]) => {\n      state[stateKey] = null;\n    });\n    return state;\n  }\n\n  // Check if we should measure render time for this component\n  markShouldMeasure = ({\n    remainingRequests,\n    error,\n  }: {remainingRequests?: number; error?: any} = {}) => {\n    if (!this._measurement.hasMeasured) {\n      this._measurement.finished = remainingRequests === 0;\n      this._measurement.error = error || this._measurement.error;\n    }\n  };\n\n  remountComponent = () => {\n    if (this.shouldReload) {\n      this.reloadData();\n    } else {\n      this.setState(this.getDefaultState(), this.fetchData);\n    }\n  };\n\n  visibilityReloader = () =>\n    this.shouldReloadOnVisible &&\n    !this.state.loading &&\n    !document.hidden &&\n    this.reloadData();\n\n  reloadData() {\n    this.fetchData({reloading: true});\n  }\n\n  fetchData = (extraState?: object) => {\n    const endpoints = this.getEndpoints();\n\n    if (!endpoints.length) {\n      this.setState({loading: false, error: false});\n      return;\n    }\n\n    // Cancel any in flight requests\n    this.api.clear();\n\n    this.setState({\n      loading: true,\n      error: false,\n      remainingRequests: endpoints.length,\n      ...extraState,\n    });\n\n    endpoints.forEach(([stateKey, endpoint, params, options]) => {\n      options = options || {};\n      // If you're using nested async components/views make sure to pass the\n      // props through so that the child component has access to props.location\n      const locationQuery = (this.props.location && this.props.location.query) || {};\n      let query = (params && params.query) || {};\n      // If paginate option then pass entire `query` object to API call\n      // It should only be expecting `query.cursor` for pagination\n      if (options.paginate || locationQuery.cursor) {\n        query = {...locationQuery, ...query};\n      }\n\n      this.api.request(endpoint, {\n        method: 'GET',\n        ...params,\n        query,\n        success: (data, _, jqXHR) => {\n          this.handleRequestSuccess({stateKey, data, jqXHR}, true);\n        },\n        error: error => {\n          // Allow endpoints to fail\n          // allowError can have side effects to handle the error\n          if (options.allowError && options.allowError(error)) {\n            error = null;\n          }\n          this.handleError(error, [stateKey, endpoint, params, options]);\n        },\n      });\n    });\n  };\n\n  onRequestSuccess(_resp /*{stateKey, data, jqXHR}*/) {\n    // Allow children to implement this\n  }\n\n  onRequestError(_resp, _args) {\n    // Allow children to implement this\n  }\n\n  handleRequestSuccess({stateKey, data, jqXHR}, initialRequest?: boolean) {\n    this.setState(prevState => {\n      const state = {\n        [stateKey]: data,\n        // TODO(billy): This currently fails if this request is retried by SudoModal\n        [`${stateKey}PageLinks`]: jqXHR && jqXHR.getResponseHeader('Link'),\n      };\n\n      if (initialRequest) {\n        state.remainingRequests = prevState.remainingRequests! - 1;\n        state.loading = prevState.remainingRequests! > 1;\n        state.reloading = prevState.reloading && state.loading;\n        this.markShouldMeasure({remainingRequests: state.remainingRequests});\n      }\n\n      return state;\n    });\n    this.onRequestSuccess({stateKey, data, jqXHR});\n  }\n\n  handleError(error, args) {\n    const [stateKey] = args;\n    if (error && error.responseText) {\n      Sentry.addBreadcrumb({\n        message: error.responseText,\n        category: 'xhr',\n        level: Sentry.Severity.Error,\n      });\n    }\n    this.setState(prevState => {\n      const loading = prevState.remainingRequests! > 1;\n      const state: AsyncComponentState = {\n        [stateKey]: null,\n        errors: {\n          ...prevState.errors,\n          [stateKey]: error,\n        },\n        error: prevState.error || !!error,\n        remainingRequests: prevState.remainingRequests! - 1,\n        loading,\n        reloading: prevState.reloading && loading,\n      };\n      this.markShouldMeasure({remainingRequests: state.remainingRequests, error: true});\n\n      return state;\n    });\n    this.onRequestError(error, args);\n  }\n\n  /**\n   * @deprecated use getEndpoints\n   */\n  getEndpointParams() {\n    // eslint-disable-next-line no-console\n    console.warn('getEndpointParams is deprecated');\n    return {};\n  }\n\n  /**\n   * @deprecated use getEndpoints\n   */\n  getEndpoint() {\n    // eslint-disable-next-line no-console\n    console.warn('getEndpoint is deprecated');\n    return null;\n  }\n\n  /**\n   * Return a list of endpoint queries to make.\n   *\n   * return [\n   *   ['stateKeyName', '/endpoint/', {optional: 'query params'}, {options}]\n   * ]\n   */\n  getEndpoints(): [string, string, any?, any?][] {\n    const endpoint = this.getEndpoint();\n    if (!endpoint) {\n      return [];\n    }\n    return [['data', endpoint, this.getEndpointParams()]];\n  }\n\n  renderSearchInput({stateKey, url, ...props}: RenderSearchInputArgs) {\n    const [firstEndpoint] = this.getEndpoints() || [null];\n    const stateKeyOrDefault = stateKey || (firstEndpoint && firstEndpoint[0]);\n    const urlOrDefault = url || (firstEndpoint && firstEndpoint[1]);\n    return (\n      <AsyncComponentSearchInput\n        url={urlOrDefault}\n        {...props}\n        api={this.api}\n        onSuccess={(data, jqXHR) => {\n          this.handleRequestSuccess({stateKey: stateKeyOrDefault, data, jqXHR});\n        }}\n        onError={() => {\n          this.renderError(new Error('Error with AsyncComponentSearchInput'));\n        }}\n      />\n    );\n  }\n\n  renderLoading() {\n    return <LoadingIndicator />;\n  }\n\n  renderError(error?: Error, disableLog = false, disableReport = false): React.ReactNode {\n    const {errors} = this.state;\n\n    // 401s are captured by SudoModal, but may be passed back to AsyncComponent if they close the modal without identifying\n    const unauthorizedErrors = Object.values(errors).find(\n      resp => resp && resp.status === 401\n    );\n\n    // Look through endpoint results to see if we had any 403s, means their role can not access resource\n    const permissionErrors = Object.values(errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    // If all error responses have status code === 0, then show error message but don't\n    // log it to sentry\n    const shouldLogSentry =\n      !!Object.values(errors).find(resp => resp && resp.status !== 0) || disableLog;\n\n    if (unauthorizedErrors) {\n      return (\n        <LoadingError message={t('You are not authorized to access this resource.')} />\n      );\n    }\n\n    if (permissionErrors) {\n      return <PermissionDenied />;\n    }\n\n    if (this.shouldRenderBadRequests) {\n      const badRequests = Object.values(errors)\n        .filter(\n          resp =>\n            resp && resp.status === 400 && resp.responseJSON && resp.responseJSON.detail\n        )\n        .map(resp => resp.responseJSON.detail);\n\n      if (badRequests.length) {\n        return <LoadingError message={badRequests.join('\\n')} />;\n      }\n    }\n\n    return (\n      <RouteError\n        error={error}\n        component={this}\n        disableLogSentry={!shouldLogSentry}\n        disableReport={disableReport}\n        onRetry={this.remountComponent}\n      />\n    );\n  }\n\n  renderComponent() {\n    return this.state.loading && (!this.shouldReload || !this.state.reloading)\n      ? this.renderLoading()\n      : this.state.error\n      ? this.renderError(new Error('Unable to load all required endpoints'))\n      : this.renderBody();\n  }\n\n  /**\n   * Renders once all endpoints have been loaded\n   */\n  renderBody(): React.ReactNode {\n    // Allow children to implement this\n    throw new Error('Not implemented');\n  }\n\n  render() {\n    return this.renderComponent();\n  }\n}\n","import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport InlineSvg from 'app/components/inlineSvg';\n\nconst getMarginLeft = p => {\n  if (!p.inline) {\n    return '';\n  }\n  return `margin-left: ${p.size === 'small' ? '0.25em' : '0.5em'};`;\n};\n\nconst getBorder = p =>\n  p.border\n    ? `border: 1px solid ${\n        p.priority ? p.theme.alert[p.priority].border : p.theme.gray1\n      };`\n    : '';\n\nconst Tag = styled(\n  ({children, icon, priority: _priority, size: _size, border: _border, ...props}) => (\n    <div {...props}>\n      {icon && <StyledInlineSvg src={icon} size=\"12px\" />}\n      {children}\n    </div>\n  )\n)`\n  display: inline-flex;\n  box-sizing: border-box;\n  padding: ${p => (p.size === 'small' ? '0.1em 0.4em 0.2em' : '0.35em 0.8em 0.4em')};\n  font-size: 75%;\n  line-height: 1;\n  color: ${p => (p.priority ? '#fff' : p.gray5)};\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  border-radius: ${p => (p.size === 'small' ? '0.25em' : '2em')};\n  text-transform: lowercase;\n  font-weight: ${p => (p.size === 'small' ? 'bold' : 'normal')};\n  background: ${p =>\n    p.priority ? p.theme.alert[p.priority].background : p.theme.offWhite2};\n  ${p => getBorder(p)};\n  ${p => getMarginLeft(p)};\n`;\n\nTag.propTypes = {\n  priority: PropTypes.string,\n  size: PropTypes.string,\n  border: PropTypes.bool,\n  icon: PropTypes.string,\n  inline: PropTypes.bool,\n};\n\nconst StyledInlineSvg = styled(InlineSvg)`\n  margin-right: 4px;\n`;\n\nexport default Tag;\n","import React from 'react';\nimport styled from 'react-emotion';\nimport Tag from 'app/views/settings/components/tag';\nimport Tooltip from 'app/components/tooltip';\nimport space from 'app/styles/space';\nimport {t} from 'app/locale';\n\nconst BetaTag = () => (\n  <Tooltip\n    title={t('This feature is in beta and may change in the future.')}\n    position=\"right\"\n  >\n    <StyledTag priority=\"beta\" size=\"small\">\n      {t('beta')}\n    </StyledTag>\n  </Tooltip>\n);\n\nconst StyledTag = styled(Tag)`\n  position: relative;\n  top: -1px;\n  font-size: ${p => p.theme.fontSizeSmall};\n  font-weight: normal;\n  padding: 3px 6px;\n  margin-left: ${space(0.5)};\n  border-radius: 20px;\n`;\n\nexport default BetaTag;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\n\nclass SearchBar extends React.PureComponent {\n  static propTypes = {\n    query: PropTypes.string,\n    defaultQuery: PropTypes.string,\n    onSearch: PropTypes.func,\n    placeholder: PropTypes.string,\n  };\n\n  static defaultProps = {\n    defaultQuery: '',\n    query: '',\n    onSearch: function() {},\n  };\n\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      query: this.props.query || this.props.defaultQuery,\n    };\n    this.searchInputRef = React.createRef();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.query !== this.props.query) {\n      this.setState({\n        query: nextProps.query,\n      });\n    }\n  }\n\n  blur = () => {\n    this.searchInputRef.current.blur();\n  };\n\n  onSubmit = evt => {\n    evt.preventDefault();\n    this.blur();\n    this.props.onSearch(this.state.query);\n  };\n\n  clearSearch = () => {\n    this.setState({query: this.props.defaultQuery}, () =>\n      this.props.onSearch(this.state.query)\n    );\n  };\n\n  onQueryFocus = () => {\n    this.setState({\n      dropdownVisible: true,\n    });\n  };\n\n  onQueryBlur = () => {\n    this.setState({dropdownVisible: false});\n  };\n\n  onQueryChange = evt => {\n    this.setState({query: evt.target.value});\n  };\n\n  render() {\n    const {className} = this.props;\n    return (\n      <div className={classNames('search', className)}>\n        <form className=\"form-horizontal\" onSubmit={this.onSubmit}>\n          <div>\n            <input\n              type=\"text\"\n              className=\"search-input form-control\"\n              placeholder={this.props.placeholder}\n              name=\"query\"\n              ref={this.searchInputRef}\n              autoComplete=\"off\"\n              value={this.state.query}\n              onBlur={this.onQueryBlur}\n              onChange={this.onQueryChange}\n            />\n            <span className=\"icon-search\" />\n            {this.state.query !== this.props.defaultQuery && (\n              <div>\n                <a className=\"search-clear-form\" onClick={this.clearSearch}>\n                  <span className=\"icon-circle-cross\" />\n                </a>\n              </div>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import styled from 'react-emotion';\n\nconst getBackgroundColor = p => {\n  if (p.color) {\n    return `background: ${p.color};`;\n  }\n\n  return `background: ${\n    p.status === 'error'\n      ? p.theme.error\n      : p.status === 'ok'\n      ? p.theme.success\n      : p.theme.disabled\n  };`;\n};\n\nconst getSize = p => `\n  height: ${p.size}px;\n  width: ${p.size}px;\n`;\n\nexport default styled('div')`\n  display: inline-block;\n  position: relative;\n  border-radius: 50%;\n  ${getSize};\n  ${getBackgroundColor};\n`;\n","import {Link, withRouter} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {PageHeader} from 'app/styles/organization';\nimport {Panel, PanelBody, PanelItem} from 'app/components/panels';\nimport {getParams} from 'app/components/organizations/globalSelectionHeader/getParams';\nimport {t} from 'app/locale';\nimport AsyncView from 'app/views/asyncView';\nimport BetaTag from 'app/components/betaTag';\nimport Button from 'app/components/button';\nimport PageHeading from 'app/components/pageHeading';\nimport Pagination from 'app/components/pagination';\nimport SearchBar from 'app/components/searchBar';\nimport SentryTypes from 'app/sentryTypes';\nimport TimeSince from 'app/components/timeSince';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport MonitorIcon from './monitorIcon';\n\nclass Monitors extends AsyncView {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n    location: PropTypes.object.isRequired,\n  };\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  getEndpoints() {\n    const {params, location} = this.props;\n    return [\n      [\n        'monitorList',\n        `/organizations/${params.orgId}/monitors/`,\n        {\n          query: location.query,\n        },\n      ],\n    ];\n  }\n\n  getTitle() {\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  handleSearch = query => {\n    const {location} = this.props;\n    const {router} = this.context;\n    router.push({\n      pathname: location.pathname,\n      query: getParams({\n        ...(location.query || {}),\n        query,\n      }),\n    });\n  };\n\n  renderBody() {\n    const {monitorListPageLinks} = this.state;\n    const {organization} = this.props;\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <HeaderTitle>\n            <div>\n              {t('Monitors')} <BetaTag />\n            </div>\n            <NewMonitorButton\n              to={`/organizations/${organization.slug}/monitors/create/`}\n              priority=\"primary\"\n              size=\"xsmall\"\n            >\n              {t('New Monitor')}\n            </NewMonitorButton>\n          </HeaderTitle>\n          <StyledSearchBar\n            organization={organization}\n            query={(location.query && location.query.query) || ''}\n            placeholder={t('Search for monitors.')}\n            onSearch={this.handleSearch}\n          />\n        </PageHeader>\n        <Panel>\n          <PanelBody>\n            {this.state.monitorList.map(monitor => {\n              return (\n                <PanelItemCentered key={monitor.id}>\n                  <MonitorIcon status={monitor.status} size={16} />\n                  <StyledLink\n                    to={`/organizations/${organization.slug}/monitors/${monitor.id}/`}\n                  >\n                    {monitor.name}\n                  </StyledLink>\n                  {monitor.nextCheckIn ? (\n                    <TimeSince date={monitor.lastCheckIn} />\n                  ) : (\n                    t('n/a')\n                  )}\n                </PanelItemCentered>\n              );\n            })}\n          </PanelBody>\n        </Panel>\n        {monitorListPageLinks && (\n          <Pagination pageLinks={monitorListPageLinks} {...this.props} />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst HeaderTitle = styled(PageHeading)`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1;\n`;\n\nconst StyledSearchBar = styled(SearchBar)`\n  flex: 1;\n`;\n\nconst NewMonitorButton = styled(Button)`\n  margin-right: ${space(2)};\n`;\n\nconst PanelItemCentered = styled(PanelItem)`\n  align-items: center;\n  padding: 0;\n  padding-left: ${space(2)};\n  padding-right: ${space(2)};\n`;\n\nconst StyledLink = styled(Link)`\n  flex: 1;\n  padding: ${space(2)};\n`;\n\nexport default withRouter(withOrganization(Monitors));\n"],"sourceRoot":""}