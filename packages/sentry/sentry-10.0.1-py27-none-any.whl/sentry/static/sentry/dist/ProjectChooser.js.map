{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/components/projectLabel.tsx","webpack:///./app/views/projectChooser.tsx"],"names":["render","icon","title","action","tabs","noTitleStyles","props","TitleAndActions","Icon","Title","styled","Action","propTypes","node","isRequired","bool","defaultProps","Component","p","StyledSettingsPageHeading","SettingsPageHeading","project","className","slug","PureComponent","componentWillMount","this","redirectNoMultipleProjects","componentWillUnmount","document","body","removeClass","organization","location","find","task","query","parseInt","projects","onboardingTask","length","push","featureLocation","Error","ProjectChooserWrapper","map","PanelItemSmall","key","StyledLink","to","StyledProjectLabel","Organization","theme","ProjectChooser"],"mappings":"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","file":"ProjectChooser.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p => (p.tabs ? `${space(4)} 0 ${space(2)}` : `${space(4)} 0`)};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import React from 'react';\n\nimport {Project} from 'app/types';\nimport {Project as ProjectPropType} from 'app/sentryTypes';\n\ntype Props = React.HTMLProps<HTMLSpanElement> & {\n  project: Project;\n};\n\nexport default class ProjectLabel extends React.PureComponent<Props> {\n  static propTypes = {\n    project: ProjectPropType.isRequired,\n  };\n\n  render() {\n    const {project, ...props} = this.props;\n\n    return (\n      <span className=\"project-label\" {...props}>\n        <span className=\"project-name\">{project.slug}</span>\n      </span>\n    );\n  }\n}\n","import $ from 'jquery';\nimport {browserHistory} from 'react-router';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {Location} from 'history';\nimport {Organization, Project} from 'app/types';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'app/components/panels';\nimport {sortProjects} from 'app/utils';\nimport {t} from 'app/locale';\nimport Link from 'app/components/links/link';\nimport ProjectLabel from 'app/components/projectLabel';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport getOnboardingTasks from 'app/components/onboardingWizard/getOnboardingTasks';\nimport space from 'app/styles/space';\nimport withOrganization from 'app/utils/withOrganization';\n\ntype Props = {\n  organization: Organization;\n  location: Location;\n};\n\nclass ProjectChooser extends React.Component<Props> {\n  static propTypes = {\n    organization: SentryTypes.Organization.isRequired,\n  };\n\n  componentWillMount() {\n    this.redirectNoMultipleProjects();\n  }\n\n  componentWillUnmount() {\n    $(document.body).removeClass('narrow');\n  }\n\n  get onboardingTask() {\n    const {organization, location} = this.props;\n    const tasks = getOnboardingTasks(organization);\n    return tasks.find(\n      task =>\n        typeof location.query.task === 'string' &&\n        task.task === parseInt(location.query.task, 10)\n    );\n  }\n\n  redirectNoMultipleProjects() {\n    const {organization} = this.props;\n    const projects = organization.projects;\n    const task = this.onboardingTask;\n\n    if (projects.length === 0) {\n      browserHistory.push(`/organizations/${organization.slug}/projects/new/`);\n    } else if (projects.length === 1 && task) {\n      const project = projects[0];\n      browserHistory.push(`/${organization.slug}/${project.slug}/${task.location}`);\n    }\n  }\n\n  render() {\n    const {organization} = this.props;\n    const task = this.onboardingTask;\n\n    // Expect onboarding=1 and task=<task id> parameters and task.featureLocation === 'project'\n    // TODO throw up report dialog if not true\n    if (!task || task.featureLocation !== 'project') {\n      throw new Error('User arrived on project chooser without a valid task id.');\n    }\n    return (\n      <ProjectChooserWrapper className=\"container\">\n        <SettingsPageHeader title=\"Projects\" />\n        <Panel>\n          <PanelHeader>{t('Projects')}</PanelHeader>\n          <PanelBody>\n            {sortProjects(organization.projects).map((project: Project) => (\n              <PanelItemSmall key={project.slug}>\n                <StyledLink to={`/${organization.slug}/${project.slug}/${task.location}`}>\n                  <StyledProjectLabel project={project} />\n                </StyledLink>\n              </PanelItemSmall>\n            ))}\n          </PanelBody>\n        </Panel>\n      </ProjectChooserWrapper>\n    );\n  }\n}\n\nconst StyledProjectLabel = styled(ProjectLabel)`\n  color: ${p => p.theme.blue};\n`;\n\nconst ProjectChooserWrapper = styled('div')`\n  padding-top: ${space(4)};\n`;\n\nconst PanelItemSmall = styled(PanelItem)`\n  padding: 0;\n`;\n\nconst StyledLink = styled(Link)`\n  padding: ${space(2)};\n  flex: 1;\n`;\n\nexport default withOrganization(ProjectChooser);\n"],"sourceRoot":""}