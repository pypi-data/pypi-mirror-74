{"version":3,"sources":["webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/utils/recreateRoute.tsx","webpack:///./app/components/sentryDocumentTitle.tsx","webpack:///./app/plugins/components/pluginIcon.tsx","webpack:///./app/views/settings/project/permissionAlert.tsx","webpack:///./images/logos/logo-default.svg","webpack:///./images/logos/logo-sentry.svg","webpack:///./images/logos/logo-amixr.svg","webpack:///./images/logos/logo-asana.svg","webpack:///./images/logos/logo-bitbucket.svg","webpack:///./images/logos/logo-campfire.svg","webpack:///./images/logos/logo-clickup.svg","webpack:///./images/logos/logo-clubhouse.svg","webpack:///./images/logos/logo-flowdock.svg","webpack:///./images/logos/logo-github.svg","webpack:///./images/logos/logo-github-enterprise.svg","webpack:///./images/logos/logo-gitlab.svg","webpack:///./images/logos/logo-heroku.svg","webpack:///./images/logos/logo-jira.svg","webpack:///./images/logos/logo-jira-server.svg","webpack:///./images/logos/logo-lighthouse.svg","webpack:///./images/logos/logo-opsgenie.svg","webpack:///./images/logos/logo-pagerduty.svg","webpack:///./images/logos/logo-phabricator.svg","webpack:///./images/logos/logo-pivotaltracker.svg","webpack:///./images/logos/logo-pushover.svg","webpack:///./images/logos/logo-redmine.svg","webpack:///./images/logos/logo-rookout.svg","webpack:///./images/logos/logo-slack.svg","webpack:///./images/logos/logo-split.svg","webpack:///./images/logos/logo-taiga.svg","webpack:///./images/logos/logo-teamwork.svg","webpack:///./images/logos/logo-trello.svg","webpack:///./images/logos/logo-twilio.svg","webpack:///./images/logos/logo-azure.svg","webpack:///./images/logos/logo-youtrack.svg","webpack:///./app/components/switch.tsx","webpack:///./app/actionCreators/plugins.jsx","webpack:///./app/actions/pluginActions.jsx","webpack:///./app/stores/pluginsStore.jsx","webpack:///./app/utils/withPlugins.tsx","webpack:///./app/views/settings/projectPlugins/constants.tsx","webpack:///./app/views/settings/projectPlugins/projectPluginRow.jsx","webpack:///./app/views/settings/projectPlugins/projectPlugins.jsx","webpack:///./app/views/settings/projectPlugins/index.jsx"],"names":["render","icon","title","action","tabs","noTitleStyles","props","TitleAndActions","Icon","Title","styled","Action","propTypes","node","isRequired","bool","defaultProps","Component","p","StyledSettingsPageHeading","SettingsPageHeading","recreateRoute","to","options","lastRootIndex","routeIndex","routes","params","location","stepBack","paths","map","path","indexOf","slice","baseRoute","query","search","fullRoute","join","_title","objSlug","children","DEFAULT_ICON","ICON_PATHS","_default","sentry","browsers","device","interface_types","os","urls","webhooks","amixr","asana","bitbucket","campfire","clickup","clubhouse","flowdock","github","github_enterprise","gitlab","heroku","jira","jira_server","lighthouse","opsgenie","pagerduty","phabricator","pivotal","pushover","redmine","rookout","slack","split","taiga","teamwork","trello","twilio","vsts","youtrack","PluginIcon","pluginId","undefined","size","string","number","PermissionAlert","access","hasAccess","type","module","exports","Switch","isActive","isLoading","isDisabled","toggle","id","className","SwitchButton","onClick","role","Toggle","getSize","getToggleSize","getToggleTop","getTranslateX","theme","borderDark","green","activeFetch","api","Client","doUpdate","orgId","projectId","update","PluginActions","request","requestPromise","then","updateSuccess","resp","err","responseJSON","detail","Error","updateError","fetchPlugins","fetchAll","method","data","_","jqXHR","fetchAllSuccess","pageLinks","getResponseHeader","fetchAllError","enablePlugin","IndicatorStore","add","t","enabled","addSuccess","addError","disablePlugin","Reflux","createActions","PluginsStore","createStore","getInitialState","this","getState","state","plugins","Array","from","values","init","reset","listenTo","onFetchAll","onFetchAllSuccess","onFetchAllError","onUpdate","onUpdateSuccess","onUpdateError","loading","error","updating","Map","triggerState","trigger","resetLoading","plugin","updateObj","get","newPlugin","set","origPlugin","WrappedComponent","withOrganization","withProject","displayName","getDisplayName","mixins","connect","componentDidMount","componentDidUpdate","prevProps","_prevState","prevContext","organization","project","prevOrg","prevProject","isOrgSame","slug","isProjectSame","store","DEPRECATED_PLUGINS","grayText","css","ProjectPluginRow","handleChange","onChange","name","version","author","hasConfiguration","canDisable","configureUrl","LinkOrSpan","Link","key","flex","align","PluginInfo","StyledPluginIcon","justify","direction","PluginName","getDynamicText","value","Version","fixed","href","url","React","PureComponent","ProjectPlugins","onError","component","onRetry","tct","link","filter","includes","isHidden","ProjectPluginsContainer","fetchData","shouldEnable","Fragment","withPlugins"],"mappings":"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","file":"ProjectPlugins.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p => (p.tabs ? `${space(4)} 0 ${space(2)}` : `${space(4)} 0`)};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import {Location} from 'history';\nimport {PlainRoute} from 'react-router/lib/Route';\nimport findLastIndex from 'lodash/findLastIndex';\n\nimport replaceRouterParams from 'app/utils/replaceRouterParams';\n\ntype Options = {\n  routes: PlainRoute[];\n  location: Location;\n\n  // parameters to replace any route string parameters (e.g. if route is `:orgId`,\n  // params should have `{orgId: slug}`\n  params: {[key: string]: string};\n\n  /**\n   * The number of routes to to pop off of `routes\n   * Must be < 0\n   *\n   * There's no ts type for negative numbers so we are arbitrarily specifying -1-9\n   */\n  stepBack?: -1 | -2 | -3 | -4 | -5 | -6 | -7 | -8 | -9;\n};\n\n/**\n * Given a route object or a string and a list of routes + params from router, this will attempt to recreate a location string while replacing url params.\n * Can additionally specify the number of routes to move back\n *\n * See tests for examples\n */\nexport default function recreateRoute(to: string | PlainRoute, options: Options): string {\n  const {routes, params, location, stepBack} = options;\n  const paths = routes.map(({path}) => path || '');\n  let lastRootIndex: number;\n  let routeIndex: number | undefined;\n\n  // TODO(ts): typescript things\n  if (typeof to !== 'string') {\n    routeIndex = routes.indexOf(to) + 1;\n    lastRootIndex = findLastIndex(paths.slice(0, routeIndex), path => path[0] === '/');\n  } else {\n    lastRootIndex = findLastIndex(paths, path => path[0] === '/');\n  }\n\n  let baseRoute = paths.slice(lastRootIndex, routeIndex);\n\n  if (typeof stepBack !== 'undefined') {\n    baseRoute = baseRoute.slice(0, stepBack);\n  }\n\n  const query = typeof location !== 'undefined' && location.search ? location.search : '';\n\n  const fullRoute = `${baseRoute.join('')}${typeof to !== 'string' ? '' : to}${query}`;\n\n  return replaceRouterParams(fullRoute, params);\n}\n","import React, {FunctionComponent} from 'react';\nimport DocumentTitle from 'react-document-title';\n\ntype DocumentTitleProps = {\n  // Main page title\n  title: string;\n  // Organization or project slug to give title some context\n  objSlug: string;\n  children?: React.ReactNode;\n};\n\nconst SentryDocumentTitle: FunctionComponent<DocumentTitleProps> = (\n  props: DocumentTitleProps\n) => {\n  const _title = `${props.title} - ${props.objSlug} - Sentry`;\n  return <DocumentTitle title={_title}>{props.children}</DocumentTitle>;\n};\n\nexport default SentryDocumentTitle;\n","import PropTypes from 'prop-types';\nimport styled from 'react-emotion';\n\nimport placeholder from 'app/../images/logos/logo-default.svg';\nimport sentry from 'app/../images/logos/logo-sentry.svg';\nimport amixr from 'app/../images/logos/logo-amixr.svg';\nimport asana from 'app/../images/logos/logo-asana.svg';\nimport bitbucket from 'app/../images/logos/logo-bitbucket.svg';\nimport campfire from 'app/../images/logos/logo-campfire.svg';\nimport clickup from 'app/../images/logos/logo-clickup.svg';\nimport clubhouse from 'app/../images/logos/logo-clubhouse.svg';\nimport flowdock from 'app/../images/logos/logo-flowdock.svg';\nimport github from 'app/../images/logos/logo-github.svg';\nimport githubEnterprise from 'app/../images/logos/logo-github-enterprise.svg';\nimport gitlab from 'app/../images/logos/logo-gitlab.svg';\nimport heroku from 'app/../images/logos/logo-heroku.svg';\nimport jira from 'app/../images/logos/logo-jira.svg';\nimport jiraserver from 'app/../images/logos/logo-jira-server.svg';\nimport lighthouse from 'app/../images/logos/logo-lighthouse.svg';\nimport opsgenie from 'app/../images/logos/logo-opsgenie.svg';\nimport pagerduty from 'app/../images/logos/logo-pagerduty.svg';\nimport phabricator from 'app/../images/logos/logo-phabricator.svg';\nimport pivotal from 'app/../images/logos/logo-pivotaltracker.svg';\nimport pushover from 'app/../images/logos/logo-pushover.svg';\nimport redmine from 'app/../images/logos/logo-redmine.svg';\nimport rookout from 'app/../images/logos/logo-rookout.svg';\nimport slack from 'app/../images/logos/logo-slack.svg';\nimport split from 'app/../images/logos/logo-split.svg';\nimport taiga from 'app/../images/logos/logo-taiga.svg';\nimport teamwork from 'app/../images/logos/logo-teamwork.svg';\nimport trello from 'app/../images/logos/logo-trello.svg';\nimport twilio from 'app/../images/logos/logo-twilio.svg';\nimport vsts from 'app/../images/logos/logo-azure.svg';\nimport youtrack from 'app/../images/logos/logo-youtrack.svg';\n\n// Map of plugin id -> logo filename\nconst DEFAULT_ICON = placeholder;\nexport const ICON_PATHS = {\n  _default: DEFAULT_ICON,\n  sentry,\n  browsers: sentry,\n  device: sentry,\n  interface_types: sentry,\n  os: sentry,\n  urls: sentry,\n  webhooks: sentry,\n\n  amixr,\n  asana,\n  bitbucket,\n  campfire,\n  clickup,\n  clubhouse,\n  flowdock,\n  github,\n  github_enterprise: githubEnterprise,\n  gitlab,\n  heroku,\n  jira,\n  'jira-atlassian-connect': jira,\n  'jira-ac': jira,\n  jira_server: jiraserver,\n  lighthouse,\n  opsgenie,\n  pagerduty,\n  phabricator,\n  pivotal,\n  pushover,\n  redmine,\n  rookout,\n  slack,\n  split,\n  taiga,\n  teamwork,\n  trello,\n  twilio,\n  vsts,\n  youtrack,\n};\n\ntype Props = {\n  pluginId?: string;\n  size: number;\n};\n\nconst PluginIcon = styled('div')<Props>`\n  position: relative;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n  border-radius: 2px;\n  border: 0;\n  /* this is so that there aren't gray boxes before load */\n  background-color: #fff;\n  display: inline-block;\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-image: url(${({pluginId}) =>\n    (pluginId !== undefined && ICON_PATHS[pluginId]) || DEFAULT_ICON});\n`;\n\nPluginIcon.defaultProps = {\n  pluginId: '_default',\n  size: 20,\n};\n\nPluginIcon.propTypes = {\n  pluginId: PropTypes.string,\n  size: PropTypes.number.isRequired,\n};\n\nexport default PluginIcon;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport Access from 'app/components/acl/access';\nimport Alert from 'app/components/alert';\n\ntype Props = React.ComponentPropsWithoutRef<typeof Alert> &\n  Pick<React.ComponentProps<typeof Access>, 'access'>;\n\nconst PermissionAlert = ({access, ...props}: Props) => (\n  <Access access={access}>\n    {({hasAccess}) =>\n      !hasAccess && (\n        <Alert type=\"warning\" icon=\"icon-warning-sm\" {...props}>\n          {t(\n            'These settings can only be edited by users with the organization owner, manager, or admin role.'\n          )}\n        </Alert>\n      )\n    }\n  </Access>\n);\n\nPermissionAlert.propTypes = {\n  access: PropTypes.arrayOf(PropTypes.string),\n};\n\nPermissionAlert.defaultProps = {\n  access: ['project:write'],\n};\n\nexport default PermissionAlert;\n","module.exports = __webpack_public_path__ + \"logo-default.svg\";","module.exports = __webpack_public_path__ + \"logo-sentry.svg\";","module.exports = __webpack_public_path__ + \"logo-amixr.svg\";","module.exports = __webpack_public_path__ + \"logo-asana.svg\";","module.exports = __webpack_public_path__ + \"logo-bitbucket.svg\";","module.exports = __webpack_public_path__ + \"logo-campfire.svg\";","module.exports = __webpack_public_path__ + \"logo-clickup.svg\";","module.exports = __webpack_public_path__ + \"logo-clubhouse.svg\";","module.exports = __webpack_public_path__ + \"logo-flowdock.svg\";","module.exports = __webpack_public_path__ + \"logo-github.svg\";","module.exports = __webpack_public_path__ + \"logo-github-enterprise.svg\";","module.exports = __webpack_public_path__ + \"logo-gitlab.svg\";","module.exports = __webpack_public_path__ + \"logo-heroku.svg\";","module.exports = __webpack_public_path__ + \"logo-jira.svg\";","module.exports = __webpack_public_path__ + \"logo-jira-server.svg\";","module.exports = __webpack_public_path__ + \"logo-lighthouse.svg\";","module.exports = __webpack_public_path__ + \"logo-opsgenie.svg\";","module.exports = __webpack_public_path__ + \"logo-pagerduty.svg\";","module.exports = __webpack_public_path__ + \"logo-phabricator.svg\";","module.exports = __webpack_public_path__ + \"logo-pivotaltracker.svg\";","module.exports = __webpack_public_path__ + \"logo-pushover.svg\";","module.exports = __webpack_public_path__ + \"logo-redmine.svg\";","module.exports = __webpack_public_path__ + \"logo-rookout.svg\";","module.exports = __webpack_public_path__ + \"logo-slack.svg\";","module.exports = __webpack_public_path__ + \"logo-split.svg\";","module.exports = __webpack_public_path__ + \"logo-taiga.svg\";","module.exports = __webpack_public_path__ + \"logo-teamwork.svg\";","module.exports = __webpack_public_path__ + \"logo-trello.svg\";","module.exports = __webpack_public_path__ + \"logo-twilio.svg\";","module.exports = __webpack_public_path__ + \"logo-azure.svg\";","module.exports = __webpack_public_path__ + \"logo-youtrack.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\ntype Props = {\n  className?: string;\n  id?: string;\n  size?: 'sm' | 'lg';\n  isActive?: boolean;\n  isLoading?: boolean;\n  isDisabled?: boolean;\n  toggle: React.HTMLProps<HTMLButtonElement>['onClick'];\n};\n\nconst Switch: React.FC<Props> = ({\n  size,\n  isActive,\n  isLoading,\n  isDisabled,\n  toggle,\n  id,\n  className,\n}) => (\n  <SwitchButton\n    id={id}\n    type=\"button\"\n    className={className}\n    onClick={isDisabled ? undefined : toggle}\n    role=\"checkbox\"\n    aria-checked={isActive}\n    isLoading={isLoading}\n    isDisabled={isDisabled}\n    isActive={isActive}\n    size={size}\n    data-test-id=\"switch\"\n  >\n    <Toggle isDisabled={isDisabled} isActive={isActive} size={size} />\n  </SwitchButton>\n);\n\nSwitch.propTypes = {\n  id: PropTypes.string,\n  size: PropTypes.oneOf(['sm', 'lg']),\n  isActive: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  toggle: PropTypes.func.isRequired,\n};\n\nSwitch.defaultProps = {\n  size: 'sm',\n};\n\ntype StyleProps = Partial<Props>;\n\nconst getSize = (p: StyleProps) => (p.size === 'sm' ? 16 : 24);\nconst getToggleSize = (p: StyleProps) => getSize(p) - (p.size === 'sm' ? 6 : 10);\nconst getToggleTop = (p: StyleProps) => (p.size === 'sm' ? 2 : 4);\nconst getTranslateX = (p: StyleProps) =>\n  p.isActive ? getToggleTop(p) + getSize(p) : getToggleTop(p);\n\nconst SwitchButton = styled('button')<StyleProps>`\n  display: inline-block;\n  background: none;\n  padding: 0;\n  border: 1px solid ${p => (p.isActive ? p.theme.borderDark : p.theme.borderLight)};\n  position: relative;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.04);\n  transition: 0.15s border ease;\n  cursor: ${p => (p.isLoading || p.isDisabled ? 'not-allowed' : 'pointer')};\n  pointer-events: ${p => (p.isLoading || p.isDisabled ? 'none' : null)};\n  height: ${getSize}px;\n  width: ${p => getSize(p) * 2}px;\n  border-radius: ${getSize}px;\n\n  &:hover,\n  &:focus {\n    outline: none;\n    border-color: ${p => p.theme.borderDark};\n  }\n\n  &:focus,\n  &.focus-visible {\n    outline: none;\n    box-shadow: rgba(209, 202, 216, 0.5) 0 0 0 3px;\n  }\n`;\n\nconst Toggle = styled('span')<StyleProps>`\n  display: block;\n  position: absolute;\n  border-radius: 50%;\n  transition: 0.25s all ease;\n  top: ${getToggleTop}px;\n  transform: translateX(${getTranslateX}px);\n  width: ${getToggleSize}px;\n  height: ${getToggleSize}px;\n  background: ${p => (p.isActive ? p.theme.green : p.theme.gray6)};\n  opacity: ${p => (p.isDisabled ? 0.4 : null)};\n`;\nexport default Switch;\n","import {t} from 'app/locale';\nimport PluginActions from 'app/actions/pluginActions';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport {Client} from 'app/api';\n\nconst activeFetch = {};\n// PluginsStore always exists, so api client should be independent of component lifecycle\nconst api = new Client();\n\nfunction doUpdate({orgId, projectId, pluginId, update, ...params}) {\n  PluginActions.update(pluginId, update);\n  const request = api.requestPromise(\n    `/projects/${orgId}/${projectId}/plugins/${pluginId}/`,\n    {\n      ...params,\n    }\n  );\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then(() => {\n      PluginActions.updateSuccess(pluginId, update);\n    })\n    .catch(resp => {\n      const err =\n        resp && resp.responseJSON && typeof resp.responseJSON.detail === 'string'\n          ? new Error(resp.responseJSON.detail)\n          : new Error('Unable to update plugin');\n      PluginActions.updateError(pluginId, update, err);\n    });\n\n  return request;\n}\n\n/**\n * Fetches list of available plugins for a project\n *\n * @param {object} params\n * @param {string} params.orgId Organization ID\n * @param {string} params.projectId Project ID\n * @param {object} options\n * @param {boolean} options.resetLoading Reset will set loading state = true\n * @return Promise\n */\nexport function fetchPlugins({orgId, projectId}, options) {\n  const path = `/projects/${orgId}/${projectId}/plugins/`;\n\n  // Make sure we throttle fetches\n  if (activeFetch[path]) {\n    return activeFetch[path];\n  }\n\n  PluginActions.fetchAll(options);\n  const request = api.requestPromise(path, {\n    method: 'GET',\n  });\n\n  activeFetch[path] = request;\n\n  // This is intentionally not chained because we want the unhandled promise to be returned\n  request\n    .then((data, _, jqXHR) => {\n      PluginActions.fetchAllSuccess(data, {\n        pageLinks: jqXHR && jqXHR.getResponseHeader('Link'),\n      });\n\n      return data;\n    })\n    .catch(err => {\n      PluginActions.fetchAllError(err);\n      throw new Error('Unable to fetch plugins');\n    })\n    .then(() => (activeFetch[path] = null));\n\n  return request;\n}\n\n/**\n * Enables a plugin\n *\n * @param {object} params\n * @param {string} params.orgId Organization ID\n * @param {string} params.projectId Project ID\n * @param {string} params.pluginId Plugin ID\n * @return Promise\n */\nexport function enablePlugin(params) {\n  IndicatorStore.add(t('Enabling...'));\n  return doUpdate({...params, update: {enabled: true}, method: 'POST'})\n    .then(() => IndicatorStore.addSuccess(t('Plugin was enabled')))\n    .catch(() => IndicatorStore.addError(t('Unable to enable plugin')));\n}\n\n/**\n * Disables a plugin\n *\n * @param {object} params\n * @param {string} params.orgId Organization ID\n * @param {string} params.projectId Project ID\n * @param {string} params.pluginId Plugin ID\n */\nexport function disablePlugin(params) {\n  IndicatorStore.add(t('Disabling...'));\n  return doUpdate({...params, update: {enabled: false}, method: 'DELETE'})\n    .then(() => IndicatorStore.addSuccess(t('Plugin was disabled')))\n    .catch(() => IndicatorStore.addError(t('Unable to disable plugin')));\n}\n","import Reflux from 'reflux';\n\nconst PluginActions = Reflux.createActions([\n  'update',\n  'updateError',\n  'updateSuccess',\n  'fetchAll',\n  'fetchAllSuccess',\n  'fetchAllError',\n]);\n\nexport default PluginActions;\n","import Reflux from 'reflux';\n\nimport PluginActions from 'app/actions/pluginActions';\n\nconst PluginsStore = Reflux.createStore({\n  getInitialState() {\n    return this.getState();\n  },\n\n  getState() {\n    const {\n      //eslint-disable-next-line no-unused-vars\n      plugins,\n      ...state\n    } = this.state;\n\n    return {\n      ...state,\n      plugins: this.plugins ? Array.from(this.plugins.values()) : [],\n    };\n  },\n\n  init() {\n    this.reset();\n    this.listenTo(PluginActions.fetchAll, this.onFetchAll);\n    this.listenTo(PluginActions.fetchAllSuccess, this.onFetchAllSuccess);\n    this.listenTo(PluginActions.fetchAllError, this.onFetchAllError);\n    this.listenTo(PluginActions.update, this.onUpdate);\n    this.listenTo(PluginActions.updateSuccess, this.onUpdateSuccess);\n    this.listenTo(PluginActions.updateError, this.onUpdateError);\n  },\n\n  reset() {\n    this.plugins = null;\n    this.state = {\n      loading: true,\n      plugins: [],\n      error: null,\n      pageLinks: null,\n    };\n    this.updating = new Map();\n    return this.state;\n  },\n\n  triggerState() {\n    this.trigger(this.getState());\n  },\n\n  onFetchAll({resetLoading} = {}) {\n    if (resetLoading) {\n      this.state.loading = true;\n      this.state.error = null;\n      this.plugins = null;\n    }\n\n    this.triggerState();\n  },\n\n  onFetchAllSuccess(data, {pageLinks}) {\n    this.plugins = new Map(data.map(plugin => [plugin.id, plugin]));\n    this.state.pageLinks = pageLinks;\n    this.state.loading = false;\n    this.triggerState();\n  },\n\n  onFetchAllError(err) {\n    this.plugins = null;\n    this.state.loading = false;\n    this.state.error = err;\n    this.triggerState();\n  },\n\n  onUpdate(id, updateObj) {\n    if (!this.plugins) {\n      return;\n    }\n\n    const plugin = this.plugins.get(id);\n    const newPlugin = {\n      ...plugin,\n      ...updateObj,\n    };\n\n    this.plugins.set(id, newPlugin);\n    this.updating.set(id, plugin);\n    this.triggerState();\n  },\n\n  onUpdateSuccess(id, updateObj) {\n    this.updating.delete(id);\n  },\n\n  onUpdateError(id, updateObj, err) {\n    const origPlugin = this.updating.get(id);\n    if (!origPlugin) {\n      return;\n    }\n\n    this.plugins.set(id, origPlugin);\n    this.updating.delete(id);\n    this.state.error = err;\n    this.triggerState();\n  },\n});\n\nexport default PluginsStore;\n","import React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\n\nimport {defined} from 'app/utils';\nimport {Organization, Project, Plugin} from 'app/types';\nimport {fetchPlugins} from 'app/actionCreators/plugins';\nimport getDisplayName from 'app/utils/getDisplayName';\nimport PluginsStore from 'app/stores/pluginsStore';\nimport SentryTypes from 'app/sentryTypes';\nimport withOrganization from 'app/utils/withOrganization';\nimport withProject from 'app/utils/withProject';\n\ntype WithPluginProps = {\n  organization: Organization;\n  project: Project;\n};\n\ntype InjectedPluginProps = {\n  plugins: Plugin[];\n};\n\n/**\n * Higher order component that fetches list of plugins and\n * passes PluginsStore to component as `plugins`\n */\nconst withPlugins = <P extends InjectedPluginProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  withOrganization(\n    withProject(\n      createReactClass<Omit<P, keyof InjectedPluginProps> & WithPluginProps, {}>({\n        displayName: `withPlugins(${getDisplayName(WrappedComponent)})`,\n        propTypes: {\n          organization: SentryTypes.Organization.isRequired,\n          project: SentryTypes.Project.isRequired,\n        },\n        mixins: [Reflux.connect(PluginsStore, 'store') as any],\n\n        componentDidMount() {\n          this.fetchPlugins();\n        },\n\n        componentDidUpdate(prevProps, _prevState, prevContext) {\n          const {organization, project} = this.props;\n\n          // Only fetch plugins when a org slug or project slug has changed\n          const prevOrg =\n            prevProps.organization || (prevContext && prevContext.organization);\n          const prevProject = prevProps.project || (prevContext && prevContext.project);\n\n          // If previous org/project is undefined then it means:\n          // the HoC has mounted, `fetchPlugins` has been called (via cDM), and\n          // store was updated. We don't need to fetchPlugins again (or it will cause an infinite loop)\n          //\n          // This is for the unusual case where component is mounted and receives a new org/project prop\n          // e.g. when switching projects via breadcrumbs in settings.\n          if (!defined(prevProject) || !defined(prevOrg)) {\n            return;\n          }\n\n          const isOrgSame = prevOrg.slug === organization.slug;\n          const isProjectSame = prevProject.slug === project.slug;\n\n          // Don't do anything if org and project are the same\n          if (isOrgSame && isProjectSame) {\n            return;\n          }\n\n          this.fetchPlugins();\n        },\n\n        fetchPlugins() {\n          const {organization, project} = this.props;\n\n          if (!project || !organization) {\n            return;\n          }\n\n          fetchPlugins({projectId: project.slug, orgId: organization.slug});\n        },\n\n        render() {\n          return (\n            <WrappedComponent\n              {...this.props as P}\n              plugins={this.state.store as Plugin[]}\n            />\n          );\n        },\n      })\n    )\n  );\n\nexport default withPlugins;\n","export const DEPRECATED_PLUGINS = ['taiga', 'lighthouse', 'grove-io'] as const;\n","import {Flex} from 'grid-emotion';\nimport {Link} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled, {css} from 'react-emotion';\n\nimport {t} from 'app/locale';\nimport ExternalLink from 'app/components/links/externalLink';\nimport Access from 'app/components/acl/access';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport SentryTypes from 'app/sentryTypes';\nimport Switch from 'app/components/switch';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport recreateRoute from 'app/utils/recreateRoute';\n\nconst grayText = css`\n  color: #979ba0;\n`;\n\nclass ProjectPluginRow extends React.PureComponent {\n  static propTypes = {\n    ...SentryTypes.Plugin,\n    onChange: PropTypes.func,\n  };\n\n  handleChange = () => {\n    const {onChange, id, enabled} = this.props;\n    onChange(id, !enabled);\n  };\n\n  render() {\n    const {\n      id,\n      name,\n      slug,\n      version,\n      author,\n      hasConfiguration,\n      enabled,\n      canDisable,\n    } = this.props;\n\n    const configureUrl = recreateRoute(id, this.props);\n    return (\n      <Access access={['project:write']}>\n        {({hasAccess}) => {\n          const LinkOrSpan = hasAccess ? Link : 'span';\n\n          return (\n            <Flex key={id} className={slug} flex=\"1\" align=\"center\">\n              <PluginInfo>\n                <StyledPluginIcon size={48} pluginId={id} />\n                <Flex justify=\"center\" direction=\"column\">\n                  <PluginName>\n                    {`${name} `}\n                    {getDynamicText({\n                      value: (\n                        <Version>{version ? `v${version}` : <em>{t('n/a')}</em>}</Version>\n                      ),\n                      fixed: <Version>v10</Version>,\n                    })}\n                  </PluginName>\n                  <div>\n                    {author && (\n                      <ExternalLink css={grayText} href={author.url}>\n                        {author.name}\n                      </ExternalLink>\n                    )}\n                    {hasConfiguration && (\n                      <span>\n                        {' '}\n                        &middot;{' '}\n                        <LinkOrSpan css={grayText} to={configureUrl}>\n                          {t('Configure plugin')}\n                        </LinkOrSpan>\n                      </span>\n                    )}\n                  </div>\n                </Flex>\n              </PluginInfo>\n              <Switch\n                size=\"lg\"\n                isDisabled={!hasAccess || !canDisable}\n                isActive={enabled}\n                toggle={this.handleChange}\n              />\n            </Flex>\n          );\n        }}\n      </Access>\n    );\n  }\n}\n\nexport default ProjectPluginRow;\n\n// Includes icon, name, version, configure link\nconst PluginInfo = styled('div')`\n  display: flex;\n  flex: 1;\n  line-height: 24px;\n`;\n\nconst PluginName = styled('div')`\n  font-size: 16px;\n`;\n\nconst StyledPluginIcon = styled(PluginIcon)`\n  margin-right: 16px;\n`;\n\n// Keeping these colors the same from old integrations page\nconst Version = styled('span')`\n  color: #babec2;\n`;\n","import PropTypes from 'prop-types';\nimport React, {Component} from 'react';\n\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'app/components/panels';\nimport {t, tct} from 'app/locale';\nimport Access from 'app/components/acl/access';\nimport Link from 'app/components/links/link';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport RouteError from 'app/views/routeError';\nimport SentryTypes from 'app/sentryTypes';\n\nimport {DEPRECATED_PLUGINS} from './constants';\nimport ProjectPluginRow from './projectPluginRow';\n\nclass ProjectPlugins extends Component {\n  static propTypes = {\n    plugins: PropTypes.arrayOf(SentryTypes.PluginShape),\n    loading: PropTypes.bool,\n    error: PropTypes.any,\n    onChange: PropTypes.func,\n    onError: PropTypes.func,\n    routes: PropTypes.array,\n  };\n\n  render() {\n    const {plugins, loading, error, onError, onChange, routes, params} = this.props;\n    const {orgId} = this.props.params;\n    const hasError = error;\n    const isLoading = !hasError && loading;\n\n    if (hasError) {\n      return <RouteError error={error} component={this} onRetry={onError} />;\n    }\n\n    if (isLoading) {\n      return <LoadingIndicator />;\n    }\n\n    return (\n      <Panel>\n        <PanelHeader>\n          <div>{t('Legacy Integration')}</div>\n          <div>{t('Enabled')}</div>\n        </PanelHeader>\n        <PanelBody>\n          <PanelAlert type=\"warning\">\n            <Access access={['org:integrations']}>\n              {({hasAccess}) => {\n                return hasAccess\n                  ? tct(\n                      \"Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available. Visit the [link:organization integrations] settings to manage them.\",\n                      {\n                        link: <Link to={`/settings/${orgId}/integrations`} />,\n                      }\n                    )\n                  : t(\n                      \"Legacy Integrations must be configured per-project. It's recommended to prefer organization integrations over the legacy project integrations when available.\"\n                    );\n              }}\n            </Access>\n          </PanelAlert>\n\n          {plugins\n            .filter(p => {\n              if (DEPRECATED_PLUGINS.includes(p.id) && !p.enabled) {\n                return false;\n              }\n              return !p.isHidden;\n            })\n            .map(plugin => (\n              <PanelItem key={plugin.id}>\n                <ProjectPluginRow\n                  params={params}\n                  routes={routes}\n                  {...plugin}\n                  onChange={onChange}\n                />\n              </PanelItem>\n            ))}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default ProjectPlugins;\n","import React from 'react';\n\nimport {fetchPlugins, enablePlugin, disablePlugin} from 'app/actionCreators/plugins';\nimport {t} from 'app/locale';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport PermissionAlert from 'app/views/settings/project/permissionAlert';\nimport SentryTypes from 'app/sentryTypes';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport withPlugins from 'app/utils/withPlugins';\n\nimport ProjectPlugins from './projectPlugins';\n\nclass ProjectPluginsContainer extends React.Component {\n  static propTypes = {\n    plugins: SentryTypes.PluginsStore,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData = () => {\n    fetchPlugins(this.props.params);\n  };\n\n  handleChange = (pluginId, shouldEnable) => {\n    const {projectId, orgId} = this.props.params;\n    const actionCreator = shouldEnable ? enablePlugin : disablePlugin;\n    actionCreator({projectId, orgId, pluginId});\n  };\n\n  render() {\n    const {loading, error, plugins} = this.props.plugins || {};\n    const {orgId} = this.props.params;\n\n    const title = t('Legacy Integrations');\n\n    return (\n      <React.Fragment>\n        <SentryDocumentTitle title={title} objSlug={orgId} />\n        <SettingsPageHeader title={title} />\n        <PermissionAlert />\n\n        <ProjectPlugins\n          {...this.props}\n          onError={this.fetchData}\n          onChange={this.handleChange}\n          loading={loading}\n          error={error}\n          plugins={plugins}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withPlugins(ProjectPluginsContainer);\n"],"sourceRoot":""}