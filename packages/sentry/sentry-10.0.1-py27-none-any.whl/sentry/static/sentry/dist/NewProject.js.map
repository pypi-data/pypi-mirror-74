{"version":3,"sources":["webpack:///./app/components/navTabs.tsx","webpack:///./app/components/links/listLink.tsx","webpack:///./app/utils/withTeams.tsx","webpack:///./app/components/platformIconTile.jsx","webpack:///./app/components/platformPicker.jsx","webpack:///./app/components/createProject.jsx","webpack:///./app/views/projectInstall/newProject.jsx"],"names":["props","underlined","className","mergedClassName","tabProps","isActive","to","query","index","context","router","pathname","getClassName","_classNames","activeClassName","render","children","carriedProps","this","onlyActiveOnIndex","displayName","contextTypes","object","isRequired","defaultProps","Component","WrappedComponent","mixins","listenTo","getInitialState","teams","getAll","onTeamUpdate","setState","state","PLATFORM_ICONS","angular","angularjs","apple","bottle","csharp","django","dotnet","elixir","ember","flask","generic","go","ios","java","javascript","js","laravel","node","objc","perl","php","python","rails","react","ruby","swift","PLATFORM_COLORS","selectPlatfrom","platform","split","getColorStyles","monoTone","bg","fg","css","PlatformIconTile","styled","p","propTypes","PropTypes","string","bool","PLATFORM_CATEGORIES","categoryList","concat","id","name","t","PlatformPicker","keydown","category","filter","noAutoFilter","logSearch","debounce","analytics","toLowerCase","num_results","platformList","length","searchInput","React","createRef","e","target","current","focus","preventDefault","setPlatform","listProps","Fragment","NavContainer","CategoryNav","map","key","onClick","SearchBar","src","type","ref","value","label","placeholder","onChange","PlatformList","PlatformCard","data-test-id","selected","onClear","stopPropagation","icon","title","tct","search","href","currentCategory","find","filtered","platforms","includes","showOther","theme","borderLight","space","inputStyles","gray3","NavTabs","StyledPlatformIconTile","ClearButton","size","borderless","gray4","CreateProject","args","createProject","organization","api","projectName","team","slug","inFlight","Sentry","scope","setExtra","request","method","data","success","ProjectActions","createSuccess","platformKey","nextUrl","browserHistory","push","error","err","responseJSON","detail","status","platformId","getPlatformName","location","accessTeams","hasAccess","filterTeam","withMargins","HelpText","CreateProjectForm","onSubmit","FormLabel","ProjectNameInput","ProjectPlatformIcon","autoComplete","TeamSelectInput","clearable","choice","options","openCreateTeamModal","onClose","priority","disabled","withApi","withTeams","withOrganization","fontSizeExtraLarge","NewProject","Container","Content"],"mappings":"wIAuBe,IAZf,SAAiBA,GACR,IAAAC,EAAA,EAAAA,WAAYC,EAAA,EAAAA,UAAW,4CACxBC,EAAkB,IAAW,eAAgBD,EAAW,CAC5D,gBAAiBD,IAEnB,OAAO,oCAAIC,UAAWC,GAAqBC,M,uHCI7C,yE,OAYE,EAAAC,SAAW,WACH,cAACA,EAAA,EAAAA,SAAUC,EAAA,EAAAA,GAAIC,EAAA,EAAAA,MAAOC,EAAA,EAAAA,MAE5B,OAAQH,GAAY,EAAKI,QAAQC,OAAOL,UAAU,CAACM,SAAUL,EAAIC,MAAK,GAAGC,IAG3E,EAAAI,aAAe,WACb,IAAMC,EAAc,GACd,UAACX,EAAA,EAAAA,UAAWY,EAAA,EAAAA,gBAUlB,OARIZ,IACFW,EAAYX,IAAa,GAGvB,EAAKG,aACPQ,EAAYC,IAAmB,GAG1B,IAAWD,I,EAetB,OA7CuB,iBAiCrB,YAAAE,OAAA,WACQ,iBAACP,EAAA,EAAAA,MAAOQ,EAAA,EAAAA,SACRC,EAAe,IAAKC,KAAKlB,MAAO,kBAAmB,WAAY,SAErE,OACE,wBAAIE,UAAWgB,KAAKN,gBAClB,kBAAC,OAAI,eAAKK,EAAY,CAAEE,kBAAmBX,IACxCQ,KAvCF,EAAAI,YAAc,WAEd,EAAAC,aAAe,CACpBX,OAAQ,IAAUY,OAAOC,YAGpB,EAAAC,aAA+B,CACpCV,gBAAiB,SACjBN,OAAO,GAoCX,EA7CA,CAAuB,IAAMiB,WA+Cd,O,gHC1BA,IAtBG,SAChBC,GAEA,WAA2D,CACzDN,YAAa,aAAa,YAAeM,GAAiB,IAC1DC,OAAQ,CAAC,IAAOC,SAAS,IAAW,iBAEpCC,gBAAe,WACb,MAAO,CACLC,MAAO,IAAUC,WAIrBC,aAAY,WACVd,KAAKe,SAAS,CACZH,MAAO,IAAUC,YAGrBhB,OAAA,WACE,OAAO,kBAACW,EAAgB,eAAKR,KAAKlB,MAAU,CAAE8B,MAAOZ,KAAKgB,MAAMJ,c,8ECnChEK,EAAiB,CACrB,aAAc,SACd,UAAW,SACX,iBAAkB,SAClB,qBAAsB,SACtB,uBAAwB,SACxB,mBAAoB,SACpB,mBAAoB,SACpB,cAAe,SACf,cAAe,SACf,gBAAiB,SACjB,gBAAiB,SACjB,eAAgB,SAChB,aAAc,SACdC,QAAS,SACTC,UAAW,SACXC,MAAO,SACPC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,QAAS,SACTC,GAAI,SACJC,IAAK,SACLC,KAAM,SACNC,WAAY,SACZC,GAAI,SACJC,QAAS,SACTC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,KAAM,SACNC,MAAO,UAIHC,EAAkB,CACtBL,OAAQ,CAAC,WACTP,WAAY,CAAC,UAAW,QACxBU,KAAM,CAAC,UAAW,QAClBF,MAAO,CAAC,UAAW,QACnBT,KAAM,CAAC,WACPO,IAAK,CAAC,WACNH,KAAM,CAAC,WACPb,OAAQ,CAAC,WACTO,GAAI,CAAC,OAAQ,WACbJ,OAAQ,CAAC,WACT,aAAc,CAAC,WACf,gBAAiB,CAAC,WAClB,mBAAoB,CAAC,UAAW,WAChC,mBAAoB,CAAC,UAAW,QAChC,qBAAsB,CAAC,UAAW,SAG9BoB,EAAiB,SAACzC,EAAQ0C,GAAT,OACrB1C,EAAO0C,IAAa1C,EAAO0C,EAASC,MAAM,KAAK,KAE3CC,EAAiB,SAAC,GAAyB,IAAxBC,EAAwB,EAAxBA,SAAUH,EAAc,EAAdA,SAAc,EAC9BD,EAAeD,EAAiBE,IAAa,GADf,WACxCI,EADwC,KACpCC,EADoC,KAG/C,OACGF,GACDG,YADA,oBAEsBF,GAAM,UAF5B,UAGWC,GAAM,OAHjB,MAQEE,EAAmBC,YAAO,MAAV,qBAAGA,CAAH,kIAOlBN,EAPkB,uBAUN,SAAAO,GAAC,OAAIV,EAAe5B,EAAgBsC,EAAET,WAAa,WAV7C,OActBO,EAAiBG,UAAY,CAC3BV,SAAUW,IAAUC,OACpB1E,UAAWyE,IAAUC,OACrBT,SAAUQ,IAAUE,MAGPN,O,uVC/ETO,EAAsBC,IAAaC,OAAO,CAACC,GAAI,MAAOC,KAAMC,YAAE,SAE9DC,G,EAwCHC,YAAQ,K,uLA3BTnD,MAAQ,CACNoD,SAAUR,EAAoB,GAAGG,GACjCM,OAAQ,EAAKvF,MAAMwF,aAAe,IAAM,EAAKxF,MAAMgE,UAAY,IAAIC,MAAM,KAAK,I,EAgBhFwB,UAAYC,KAAS,WACf,EAAKxD,MAAMqD,QACbI,YAAU,wBAAyB,CACjCpF,MAAO,EAAK2B,MAAMqD,OAAOK,cACzBC,YAAa,EAAKC,aAAaC,WAGlC,K,EAUHC,YAAcC,IAAMC,Y,2DAPRC,GACNA,EAAEC,SAAWlF,KAAK8E,YAAYK,UAChCnF,KAAK8E,YAAYK,QAAQC,QACzBH,EAAEI,oB,+BAMG,WACDT,EAAe5E,KAAK4E,aADnB,EAE0B5E,KAAKlB,MAA/BwG,EAFA,EAEAA,YAAaC,EAFb,EAEaA,UAFb,EAGoBvF,KAAKgB,MAAzBqD,EAHA,EAGAA,OAAQD,EAHR,EAGQA,SAEf,OACE,kBAAC,IAAMoB,SAAP,KACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACG9B,EAAoB+B,KAAI,gBAAE5B,EAAF,EAAEA,GAAIC,EAAN,EAAMA,KAAN,OACvB,kBAAC,IAAD,CACE4B,IAAK7B,EACL8B,QAAS,SAAAZ,GACPR,YAAU,4BAA6B,CAACL,SAAUL,IAClD,EAAKhD,SAAS,CAACqD,SAAUL,EAAIM,OAAQ,KACrCY,EAAEI,kBAEJjG,GAAG,GACHD,SAAU,kBAAM4E,KAAQM,EAAS,MAAQD,KAExCJ,OAIP,kBAAC8B,EAAD,KACE,kBAAC,IAAD,CAAWC,IAAI,gBACf,2BACEC,KAAK,OACLC,IAAKjG,KAAK8E,YACVoB,MAAO7B,EACP8B,MAAOlC,YAAE,oBACTmC,YAAanC,YAAE,oBACfoC,SAAU,SAAApB,GAAC,OAAI,EAAKlE,SAAS,CAACsD,OAAQY,EAAEC,OAAOgB,OAAQ,EAAK3B,gBAIlE,kBAAC+B,EAAiBf,EACfX,EAAae,KAAI,SAAA7C,GAAQ,OACxB,kBAACyD,EAAD,CACEC,eAAA,mBAA0B1D,EAASiB,IACnC6B,IAAK9C,EAASiB,GACdjB,SAAUA,EACV2D,SAAU,EAAK3H,MAAMgE,WAAaA,EAASiB,GAC3C2C,QAAS,SAAAzB,GACPK,EAAY,IACZL,EAAE0B,mBAEJd,QAAS,SAAAZ,GACPR,YAAU,iCAAkC,CAAC3B,SAAUA,EAASiB,KAChEuB,EAAYxC,EAASiB,WAKJ,IAAxBa,EAAaC,QACZ,kBAAC,IAAD,CACE+B,KAAK,eACLC,MAAO5C,YAAE,uCAER6C,YAAI,kXAMH,CACEC,OACE,kBAAC,IAAD,CAAcC,KAAK,wF,mCAnGhB,WACV5C,EAAYpE,KAAKgB,MAAjBoD,SACD6C,EAAkBpD,IAAaqD,MAAK,qBAAEnD,KAAeK,KAMrD+C,EAAWC,IAAU/C,OAAOrE,KAAKgB,MAAMqD,OAJzB,SAAC,GAAD,SAAEN,GAAWsD,SAAS,EAAKrG,MAAMqD,OAAOK,gBACtC,SAAA5B,GAAQ,MACf,QAAbsB,GAAsB6C,EAAgBG,UAAUC,SAASvE,EAASiB,MAIpE,OAAO/D,KAAKlB,MAAMwI,UAAYH,EAAWA,EAAS9C,QAAO,kBAAiB,UAAjB,EAAEN,U,GA5BlCgB,IAAMxE,W,EAS1BD,aAAe,CACpBgH,WAAW,G,iHAsHT7B,EAAenC,YAAO,MAAV,oBAAGA,CAAH,4BACW,SAAAC,GAAC,OAAIA,EAAEgE,MAAMC,cADxB,kBAECC,YAAM,GAFP,oEAQZ3B,EAAYxC,YAAO,MAAV,oBAAGA,CACdoE,IADW,yBAGJ,SAAAnE,GAAC,OAAIA,EAAEgE,MAAMI,QAHT,yJAsBTjC,EAAcpC,YAAOsE,IAAV,oBAAGtE,CAAH,4BAKXgD,EAAehD,YAAO,MAAV,oBAAGA,CAAH,yBAEJmE,YAAM,GAFF,gEAICA,YAAM,GAJP,KAOZI,EAAyBvE,YAAOD,IAAV,oBAAGC,CAAH,mFAMhBmE,YAAM,GANU,uBAUtBK,EAAcxE,aAAO,SAAAC,GAAC,OAC1B,kBAAC,IAAD,OAAYA,EAAZ,CAAeqD,KAAK,oBAAoBmB,KAAK,SAASC,YAAU,OADjD,oBAAG1E,CAAH,yGAUN,SAAAC,GAAC,OAAIA,EAAEgE,MAAMU,QAVP,KAaX1B,EAAejD,aAAO,gBAAER,EAAF,EAAEA,SAAU2D,EAAZ,EAAYA,SAAUC,EAAtB,EAAsBA,QAAY5H,EAAlC,gDAC1B,wBAASA,EACP,kBAAC+I,EAAD,CAAwB/E,SAAUA,EAASiB,KAC3C,4BAAKjB,EAASkB,MACbyC,GAAY,kBAACqB,EAAD,CAAajC,QAASa,OAJrB,oBAAGpD,CAAH,yIAcF,SAAAC,GAAC,OAAIA,EAAEkD,UAAY,YAdjB,kLAiCHvC,O,+UChOTgE,E,YAWJ,WAAYpJ,GAAgB,+CAANqJ,EAAM,iCAANA,EAAM,mBAC1B,yCAAMrJ,GAAN,OAAgBqJ,MAkBlBC,cAAgB,SAAAnD,GACdA,EAAEI,iBADiB,MAES,EAAKvG,MAA1BuJ,EAFY,EAEZA,aAAcC,EAFF,EAEEA,IAFF,EAGmB,EAAKtH,MAApCuH,EAHY,EAGZA,YAAazF,EAHD,EAGCA,SAAU0F,EAHX,EAGWA,KACvBC,EAAQJ,EAARI,KAEP,EAAK1H,SAAS,CAAC2H,UAAU,IAEpBH,GACHI,KAAiB,SAAAC,GACfA,EAAMC,SAAS,QAAS,EAAK/J,OAC7B8J,EAAMC,SAAS,QAAS,EAAK7H,OAC7B2H,IAAsB,sBAI1BL,EAAIQ,QAAJ,iBAAsBL,EAAtB,YAA8BD,EAA9B,cAAgD,CAC9CO,OAAQ,OACRC,KAAM,CACJhF,KAAMuE,EACNzF,YAEFmG,QAAS,SAAAD,GACPE,IAAeC,cAAcH,GAE7B,IAAMI,EAActG,GAAY,QAC1BuG,EAAU,IAAH,OAAOhB,EAAaI,KAApB,YACXO,EAAKP,KADM,4BAEOW,EAFP,KAIbE,iBAAeC,KAAKF,IAEtBG,MAAO,SAAAC,GACL,EAAK1I,SAAS,CACZ2H,UAAU,EACVc,MAAOC,EAAIC,aAAaC,SAMP,MAAfF,EAAIG,QAAiC,MAAfH,EAAIG,QAC5BjB,KAAiB,SAAAC,GACfA,EAAMC,SAAS,MAAOY,GACtBb,EAAMC,SAAS,QAAS,EAAK/J,OAC7B8J,EAAMC,SAAS,QAAS,EAAK7H,OAC7B2H,IAAsB,kCAjEJ,EAwE5BrD,YAAc,SAAAuE,GAAU,OACtB,EAAK9I,UAAS,gBAAEwH,EAAF,EAAEA,YAAazF,EAAf,EAAeA,SAAf,MAA8B,CAC1CA,SAAU+G,EACVtB,aACGA,GAAgBzF,GAAYgH,YAAgBhH,KAAcyF,EACvDuB,YAAgBD,GAChBtB,OA9EkB,IAGnBlJ,EAAS,EAAKE,QAAQwK,SAAtB1K,MAED2K,EADU,EAAKlL,MAAMuJ,aAApBzH,MACmByD,QAAO,SAAAmE,GAAI,OAAIA,EAAKyB,aAExCzB,EAAOnJ,EAAMmJ,MAASwB,EAAYnF,QAAUmF,EAAY,GAAGvB,KAC3D3F,EAAWgH,YAAgBzK,EAAMyD,UAAYzD,EAAMyD,SAAW,GAR1C,OAU1B,EAAK9B,MAAQ,CACXwI,OAAO,EACPjB,YAAauB,YAAgBhH,IAAa,GAC1C0F,OACA1F,WACA4F,UAAU,GAfc,E,sDAiFnB,WACAL,EAAgBrI,KAAKlB,MAArBuJ,aADA,EAEgDrI,KAAKgB,MAArDuH,EAFA,EAEAA,YAAaC,EAFb,EAEaA,KAAM1F,EAFnB,EAEmBA,SAAU0G,EAF7B,EAE6BA,MAAOd,EAFpC,EAEoCA,SACrC9H,EAAQZ,KAAKlB,MAAM8B,MAAMyD,QAAO,SAAA6F,GAAU,OAAIA,EAAWD,aAE/D,OACE,kBAAC,IAAMzE,SAAP,KACGgE,GAAS,kBAAC,IAAD,CAAOxD,KAAK,SAASwD,GAE/B,yBAAKhD,eAAa,mBAChB,kBAAC,IAAD,CAAa2D,aAAW,GAAElG,YAAE,yBAC5B,kBAACmG,EAAD,KACGnG,YAAE,8MAOL,kBAAC,IAAD,CAAgBnB,SAAUA,EAAUwC,YAAatF,KAAKsF,YAAagC,WAAS,IAC5E,kBAAC+C,EAAD,CAAmBC,SAAUtK,KAAKoI,eAChC,6BACE,kBAACmC,EAAD,KAAYtG,YAAE,6BACd,kBAACuG,EAAD,KACE,kBAACC,EAAD,CAAqBxH,UAAQ,EAACH,SAAUA,IACxC,2BACEkD,KAAK,OACLhC,KAAK,OACLmC,MAAOlC,YAAE,gBACTmC,YAAanC,YAAE,gBACfyG,aAAa,MACbxE,MAAOqC,EACPlC,SAAU,SAAApB,GAAC,OAAI,EAAKlE,SAAS,CAACwH,YAAatD,EAAEC,OAAOgB,aAI1D,6BACE,kBAACqE,EAAD,KAAYtG,YAAE,kBACd,kBAAC0G,EAAD,KACE,kBAAC,IAAD,CACE3G,KAAK,cACL4G,WAAW,EACX1E,MAAOsC,EACPpC,YAAanC,YAAE,iBACfoC,SAAU,SAAAwE,GAAM,OAAI,EAAK9J,SAAS,CAACyH,KAAMqC,EAAO3E,SAChD4E,QAASlK,EAAM+E,KAAI,gBAAE8C,EAAF,EAAEA,KAAF,MAAa,CAC9BtC,MAAO,IAAF,OAAMsC,GACXvC,MAAOuC,QAGX,kBAAC,IAAD,CAAS5B,MAAO5C,YAAE,kBAChB,kBAAC,IAAD,CACE+D,YAAU,EACVxB,eAAa,cACbR,KAAK,SACLY,KAAK,kBACLf,QAAS,kBACPkF,YAAoB,CAClB1C,eACA2C,QAAS,gBAAEvC,EAAF,EAAEA,KAAF,OAAY,EAAK1H,SAAS,CAACyH,KAAMC,aAOtD,6BACE,kBAAC,IAAD,CACEjC,eAAa,iBACbyE,SAAS,UACTC,SAAUxC,IAAaF,GAAwB,KAAhBD,GAE9BtE,YAAE,2B,GApKSc,IAAMxE,WAA5B2H,E,4BAAAA,EAOG/H,aAAe,CACpB4J,SAAUtG,IAAUrD,QAsKT+K,kBAAQC,YAAUC,YAAiBnD,KAG5CmC,EAAoB/G,YAAO,OAAV,oBAAGA,CAAH,uEAGTmE,YAAM,GAHG,4BAKVA,YAAM,GALI,oFAYjB8C,EAAYjH,YAAO,MAAV,oBAAGA,CAAH,cACA,SAAAC,GAAC,OAAIA,EAAEgE,MAAM+D,qBADb,kBAEI7D,YAAM,GAFV,KAKTgD,EAAsBnH,YAAOD,IAAV,oBAAGC,CAAH,mBAInBkH,EAAmBlH,YAAO,MAAV,oBAAGA,CACrBoE,IADkB,gEAIRD,YAAM,GAJE,mEAchBkD,EAAkBrH,YAAO,MAAV,oBAAGA,CAAH,0EAMf8G,EAAW9G,YAAO,IAAV,oBAAGA,CAAH,UACH,SAAAC,GAAC,OAAIA,EAAEgE,MAAMI,QADV,qBC3OR4D,EAAa,kBACjB,kBAACC,EAAD,KACE,yBAAKxM,UAAU,aACb,kBAACyM,EAAD,KACE,kBAAC,IAAD,CAAe5E,MAAM,WACrB,kBAAC,EAAD,UALF0E,E,yBAWN,IAAMC,EAAYlI,YAAO,MAAV,oBAAGA,CAAH,yCAGKmE,YAAM,GAHX,KAMTgE,EAAUnI,YAAO,MAAV,oBAAGA,CAAH,cACGmE,YAAM,GADT,KAIE8D","file":"NewProject.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\ntype Props = {\n  underlined?: boolean;\n  className?: string;\n};\n\ntype NavProps = Omit<React.HTMLProps<HTMLUListElement>, keyof Props> & Props;\n\nfunction NavTabs(props: NavProps) {\n  const {underlined, className, ...tabProps} = props;\n  const mergedClassName = classnames('nav nav-tabs', className, {\n    'border-bottom': underlined,\n  });\n  return <ul className={mergedClassName} {...tabProps} />;\n}\n\nNavTabs.propTypes = {\n  underlined: PropTypes.bool,\n};\n\nexport default NavTabs;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport omit from 'lodash/omit';\nimport {Link} from 'react-router';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\n\ntype Props = {\n  to: LocationDescriptor;\n  index: boolean;\n  activeClassName: string;\n  className?: string;\n  query?: string;\n  onClick?: () => void;\n  // If supplied by parent component, decides whether link element\n  // is \"active\" or not ... overriding default behavior of strict\n  // route matching\n  isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n};\n\nclass ListLink extends React.Component<Props> {\n  static displayName = 'ListLink';\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  static defaultProps: Partial<Props> = {\n    activeClassName: 'active',\n    index: false,\n  };\n\n  isActive = () => {\n    const {isActive, to, query, index} = this.props;\n\n    return (isActive || this.context.router.isActive)({pathname: to, query}, index);\n  };\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive()) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children} = this.props;\n    const carriedProps = omit(this.props, 'activeClassName', 'isActive', 'index');\n\n    return (\n      <li className={this.getClassName()}>\n        <Link {...carriedProps} onlyActiveOnIndex={index}>\n          {children}\n        </Link>\n      </li>\n    );\n  }\n}\n\nexport default ListLink;\n","import React from 'react';\nimport Reflux from 'reflux';\nimport createReactClass from 'create-react-class';\n\nimport {Team} from 'app/types';\nimport getDisplayName from 'app/utils/getDisplayName';\nimport TeamStore from 'app/stores/teamStore';\n\ntype InjectedTeamsProps = {\n  teams: Team[];\n};\n\ntype State = {\n  teams: Team[];\n};\n\n/**\n * Higher order component that uses TeamStore and provides a list of teams\n */\nconst withTeams = <P extends InjectedTeamsProps>(\n  WrappedComponent: React.ComponentType<P>\n) =>\n  createReactClass<Omit<P, keyof InjectedTeamsProps>, State>({\n    displayName: `withTeams(${getDisplayName(WrappedComponent)})`,\n    mixins: [Reflux.listenTo(TeamStore, 'onTeamUpdate') as any],\n\n    getInitialState() {\n      return {\n        teams: TeamStore.getAll(),\n      };\n    },\n\n    onTeamUpdate() {\n      this.setState({\n        teams: TeamStore.getAll(),\n      });\n    },\n    render() {\n      return <WrappedComponent {...this.props as P} teams={this.state.teams as Team[]} />;\n    },\n  });\nexport default withTeams;\n","import PropTypes from 'prop-types';\nimport styled, {css} from 'react-emotion';\n\nconst PLATFORM_ICONS = {\n  'app-engine': '\\\\e60b',\n  'c-sharp': '\\\\e60f',\n  'java-appengine': '\\\\e60b',\n  'javascript-angular': '\\\\e900',\n  'javascript-angularjs': '\\\\e900',\n  'javascript-ember': '\\\\e800',\n  'javascript-react': '\\\\e801',\n  'objective-c': '\\\\e60e',\n  'php-laravel': '\\\\e60d',\n  'python-bottle': '\\\\e60c',\n  'python-django': '\\\\e605',\n  'python-flask': '\\\\e610',\n  'ruby-rails': '\\\\e603',\n  angular: '\\\\e900',\n  angularjs: '\\\\e900',\n  apple: '\\\\e60e',\n  bottle: '\\\\e60c',\n  csharp: '\\\\e60f',\n  django: '\\\\e605',\n  dotnet: '\\\\e902',\n  elixir: '\\\\e903',\n  ember: '\\\\e800',\n  flask: '\\\\e610',\n  generic: '\\\\e60a',\n  go: '\\\\e606',\n  ios: '\\\\e607',\n  java: '\\\\e608',\n  javascript: '\\\\e600',\n  js: '\\\\e600',\n  laravel: '\\\\e60d',\n  node: '\\\\e609',\n  objc: '\\\\e60e',\n  perl: '\\\\e901',\n  php: '\\\\e601',\n  python: '\\\\e602',\n  rails: '\\\\e603',\n  react: '\\\\e801',\n  ruby: '\\\\e604',\n  swift: '\\\\e60e',\n};\n\n// platformName: [background, forground]\nconst PLATFORM_COLORS = {\n  python: ['#3060b8'],\n  javascript: ['#ecd744', '#111'],\n  ruby: ['#e03e2f', '#fff'],\n  rails: ['#e03e2f', '#fff'],\n  java: ['#ec5e44'],\n  php: ['#6c5fc7'],\n  node: ['#90c541'],\n  csharp: ['#638cd7'],\n  go: ['#fff', '#493e54'],\n  elixir: ['#4e3fb4'],\n  'app-engine': ['#ec5e44'],\n  'python-django': ['#57be8c'],\n  'javascript-react': ['#2d2d2d', '#00d8ff'],\n  'javascript-ember': ['#ed573e', '#fff'],\n  'javascript-angular': ['#e03e2f', '#fff'],\n};\n\nconst selectPlatfrom = (object, platform) =>\n  object[platform] || object[platform.split('-')[0]];\n\nconst getColorStyles = ({monoTone, platform}) => {\n  const [bg, fg] = selectPlatfrom(PLATFORM_COLORS, platform) || [];\n\n  return (\n    !monoTone &&\n    css`\n      background-color: ${bg || '#625471'};\n      color: ${fg || '#fff'};\n    `\n  );\n};\n\nconst PlatformIconTile = styled('div')`\n  /* stylelint-disable-next-line font-family-no-missing-generic-family-keyword */\n  font-family: 'platformicons';\n  font-weight: normal;\n  speak: none;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  ${getColorStyles};\n\n  &:before {\n    content: '${p => selectPlatfrom(PLATFORM_ICONS, p.platform) || '\\\\e60a'}';\n  }\n`;\n\nPlatformIconTile.propTypes = {\n  platform: PropTypes.string,\n  className: PropTypes.string,\n  monoTone: PropTypes.bool,\n};\n\nexport default PlatformIconTile;\n","import debounce from 'lodash/debounce';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport keydown from 'react-keydown';\nimport styled from 'react-emotion';\n\nimport {analytics} from 'app/utils/analytics';\nimport {inputStyles} from 'app/styles/input';\nimport {t, tct} from 'app/locale';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ExternalLink from 'app/components/links/externalLink';\nimport InlineSvg from 'app/components/inlineSvg';\nimport ListLink from 'app/components/links/listLink';\nimport NavTabs from 'app/components/navTabs';\nimport PlatformIconTile from 'app/components/platformIconTile';\nimport categoryList from 'app/data/platformCategories';\nimport platforms from 'app/data/platforms';\nimport space from 'app/styles/space';\n\nconst PLATFORM_CATEGORIES = categoryList.concat({id: 'all', name: t('All')});\n\nclass PlatformPicker extends React.Component {\n  static propTypes = {\n    setPlatform: PropTypes.func.isRequired,\n    platform: PropTypes.string,\n    showOther: PropTypes.bool,\n    listProps: PropTypes.object,\n    noAutoFilter: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    showOther: true,\n  };\n\n  state = {\n    category: PLATFORM_CATEGORIES[0].id,\n    filter: this.props.noAutoFilter ? '' : (this.props.platform || '').split('-')[0],\n  };\n\n  get platformList() {\n    const {category} = this.state;\n    const currentCategory = categoryList.find(({id}) => id === category);\n\n    const subsetMatch = ({id}) => id.includes(this.state.filter.toLowerCase());\n    const categoryMatch = platform =>\n      category === 'all' || currentCategory.platforms.includes(platform.id);\n\n    const filtered = platforms.filter(this.state.filter ? subsetMatch : categoryMatch);\n\n    return this.props.showOther ? filtered : filtered.filter(({id}) => id !== 'other');\n  }\n\n  logSearch = debounce(() => {\n    if (this.state.filter) {\n      analytics('platformpicker.search', {\n        query: this.state.filter.toLowerCase(),\n        num_results: this.platformList.length,\n      });\n    }\n  }, 300);\n\n  @keydown('/')\n  focusSearch(e) {\n    if (e.target !== this.searchInput.current) {\n      this.searchInput.current.focus();\n      e.preventDefault();\n    }\n  }\n\n  searchInput = React.createRef();\n\n  render() {\n    const platformList = this.platformList;\n    const {setPlatform, listProps} = this.props;\n    const {filter, category} = this.state;\n\n    return (\n      <React.Fragment>\n        <NavContainer>\n          <CategoryNav>\n            {PLATFORM_CATEGORIES.map(({id, name}) => (\n              <ListLink\n                key={id}\n                onClick={e => {\n                  analytics('platformpicker.select_tab', {category: id});\n                  this.setState({category: id, filter: ''});\n                  e.preventDefault();\n                }}\n                to=\"\"\n                isActive={() => id === (filter ? 'all' : category)}\n              >\n                {name}\n              </ListLink>\n            ))}\n          </CategoryNav>\n          <SearchBar>\n            <InlineSvg src=\"icon-search\" />\n            <input\n              type=\"text\"\n              ref={this.searchInput}\n              value={filter}\n              label={t('Filter Platforms')}\n              placeholder={t('Filter Platforms')}\n              onChange={e => this.setState({filter: e.target.value}, this.logSearch)}\n            />\n          </SearchBar>\n        </NavContainer>\n        <PlatformList {...listProps}>\n          {platformList.map(platform => (\n            <PlatformCard\n              data-test-id={`platform-${platform.id}`}\n              key={platform.id}\n              platform={platform}\n              selected={this.props.platform === platform.id}\n              onClear={e => {\n                setPlatform('');\n                e.stopPropagation();\n              }}\n              onClick={e => {\n                analytics('platformpicker.select_platform', {platform: platform.id});\n                setPlatform(platform.id);\n              }}\n            />\n          ))}\n        </PlatformList>\n        {platformList.length === 0 && (\n          <EmptyMessage\n            icon=\"icon-project\"\n            title={t(\"We don't have an SDK for that yet!\")}\n          >\n            {tct(\n              `Not finding your platform? You can still create your project,\n              but looks like we don't have an official SDK for your platform\n              yet. However, there's a rich ecosystem of community supported\n              SDKs (including Perl, CFML, Clojure, and ActionScript). Try\n              [search:searching for Sentry clients] or contacting support.`,\n              {\n                search: (\n                  <ExternalLink href=\"https://github.com/search?q=-org%3Agetsentry+topic%3Asentry&type=Repositories\" />\n                ),\n              }\n            )}\n          </EmptyMessage>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst NavContainer = styled('div')`\n  border-bottom: 1px solid ${p => p.theme.borderLight};\n  margin-bottom: ${space(2)};\n  display: grid;\n  grid-template-columns: 1fr 300px;\n  align-items: start;\n`;\n\nconst SearchBar = styled('div')`\n  ${inputStyles};\n  padding: 0 8px;\n  color: ${p => p.theme.gray3};\n  display: flex;\n  align-items: center;\n  font-size: 15px;\n\n  input {\n    border: none;\n    background: none;\n    padding: 2px 4px;\n    width: 100%;\n    /* Ensure a consistent line height to keep the input the desired height */\n    line-height: 24px;\n\n    &:focus {\n      outline: none;\n    }\n  }\n`;\n\nconst CategoryNav = styled(NavTabs)`\n  margin: 0;\n  margin-top: 4px;\n`;\n\nconst PlatformList = styled('div')`\n  display: grid;\n  grid-gap: ${space(1)};\n  grid-template-columns: repeat(auto-fill, 112px);\n  margin-bottom: ${space(2)};\n`;\n\nconst StyledPlatformIconTile = styled(PlatformIconTile)`\n  width: 56px;\n  height: 56px;\n  font-size: 42px;\n  line-height: 58px;\n  text-align: center;\n  margin: ${space(2)};\n  border-radius: 5px;\n`;\n\nconst ClearButton = styled(p => (\n  <Button {...p} icon=\"icon-circle-close\" size=\"xsmall\" borderless />\n))`\n  position: absolute;\n  top: -6px;\n  right: -6px;\n  height: 22px;\n  width: 22px;\n  border-radius: 50%;\n  background: #fff;\n  color: ${p => p.theme.gray4};\n`;\n\nconst PlatformCard = styled(({platform, selected, onClear, ...props}) => (\n  <div {...props}>\n    <StyledPlatformIconTile platform={platform.id} />\n    <h3>{platform.name}</h3>\n    {selected && <ClearButton onClick={onClear} />}\n  </div>\n))`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0 0 14px;\n  border-radius: 4px;\n  cursor: pointer;\n  background: ${p => p.selected && '#ecf5fd'};\n\n  &:hover {\n    background: #ebebef;\n  }\n\n  h3 {\n    display: block;\n    width: 100%;\n    text-align: center;\n    font-size: 15px;\n    margin: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    line-height: 1.2;\n  }\n`;\n\nexport default PlatformPicker;\n","import {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport * as Sentry from '@sentry/browser';\nimport styled from 'react-emotion';\n\nimport {inputStyles} from 'app/styles/input';\nimport {openCreateTeamModal} from 'app/actionCreators/modal';\nimport {t} from 'app/locale';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport PageHeading from 'app/components/pageHeading';\nimport PlatformIconTile from 'app/components/platformIconTile';\nimport PlatformPicker from 'app/components/platformPicker';\nimport ProjectActions from 'app/actions/projectActions';\nimport SelectControl from 'app/components/forms/selectControl';\nimport SentryTypes from 'app/sentryTypes';\nimport Tooltip from 'app/components/tooltip';\nimport getPlatformName from 'app/utils/getPlatformName';\nimport space from 'app/styles/space';\nimport withApi from 'app/utils/withApi';\nimport withOrganization from 'app/utils/withOrganization';\nimport withTeams from 'app/utils/withTeams';\n\nclass CreateProject extends React.Component {\n  static propTypes = {\n    api: PropTypes.object,\n    teams: PropTypes.arrayOf(SentryTypes.Team),\n    organization: SentryTypes.Organization,\n  };\n\n  static contextTypes = {\n    location: PropTypes.object,\n  };\n\n  constructor(props, ...args) {\n    super(props, ...args);\n\n    const {query} = this.context.location;\n    const {teams} = this.props.organization;\n    const accessTeams = teams.filter(team => team.hasAccess);\n\n    const team = query.team || (accessTeams.length && accessTeams[0].slug);\n    const platform = getPlatformName(query.platform) ? query.platform : '';\n\n    this.state = {\n      error: false,\n      projectName: getPlatformName(platform) || '',\n      team,\n      platform,\n      inFlight: false,\n    };\n  }\n\n  createProject = e => {\n    e.preventDefault();\n    const {organization, api} = this.props;\n    const {projectName, platform, team} = this.state;\n    const {slug} = organization;\n\n    this.setState({inFlight: true});\n\n    if (!projectName) {\n      Sentry.withScope(scope => {\n        scope.setExtra('props', this.props);\n        scope.setExtra('state', this.state);\n        Sentry.captureMessage('No project name');\n      });\n    }\n\n    api.request(`/teams/${slug}/${team}/projects/`, {\n      method: 'POST',\n      data: {\n        name: projectName,\n        platform,\n      },\n      success: data => {\n        ProjectActions.createSuccess(data);\n\n        const platformKey = platform || 'other';\n        const nextUrl = `/${organization.slug}/${\n          data.slug\n        }/getting-started/${platformKey}/`;\n\n        browserHistory.push(nextUrl);\n      },\n      error: err => {\n        this.setState({\n          inFlight: false,\n          error: err.responseJSON.detail,\n        });\n\n        // Only log this if the error is something other than:\n        // * The user not having access to create a project, or,\n        // * A project with that slug already exists\n        if (err.status !== 403 && err.status !== 409) {\n          Sentry.withScope(scope => {\n            scope.setExtra('err', err);\n            scope.setExtra('props', this.props);\n            scope.setExtra('state', this.state);\n            Sentry.captureMessage('Project creation failed');\n          });\n        }\n      },\n    });\n  };\n\n  setPlatform = platformId =>\n    this.setState(({projectName, platform}) => ({\n      platform: platformId,\n      projectName:\n        !projectName || (platform && getPlatformName(platform) === projectName)\n          ? getPlatformName(platformId)\n          : projectName,\n    }));\n\n  render() {\n    const {organization} = this.props;\n    const {projectName, team, platform, error, inFlight} = this.state;\n    const teams = this.props.teams.filter(filterTeam => filterTeam.hasAccess);\n\n    return (\n      <React.Fragment>\n        {error && <Alert type=\"error\">{error}</Alert>}\n\n        <div data-test-id=\"onboarding-info\">\n          <PageHeading withMargins>{t('Create a new Project')}</PageHeading>\n          <HelpText>\n            {t(\n              `Projects allow you to scope events to a specific application in\n               your organization. For example, you might have separate projects\n               for your API server and frontend client.`\n            )}\n          </HelpText>\n\n          <PlatformPicker platform={platform} setPlatform={this.setPlatform} showOther />\n          <CreateProjectForm onSubmit={this.createProject}>\n            <div>\n              <FormLabel>{t('Give your project a name')}</FormLabel>\n              <ProjectNameInput>\n                <ProjectPlatformIcon monoTone platform={platform} />\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  label={t('Project Name')}\n                  placeholder={t('Project name')}\n                  autoComplete=\"off\"\n                  value={projectName}\n                  onChange={e => this.setState({projectName: e.target.value})}\n                />\n              </ProjectNameInput>\n            </div>\n            <div>\n              <FormLabel>{t('Assign a Team')}</FormLabel>\n              <TeamSelectInput>\n                <SelectControl\n                  name=\"select-team\"\n                  clearable={false}\n                  value={team}\n                  placeholder={t('Select a Team')}\n                  onChange={choice => this.setState({team: choice.value})}\n                  options={teams.map(({slug}) => ({\n                    label: `#${slug}`,\n                    value: slug,\n                  }))}\n                />\n                <Tooltip title={t('Create a team')}>\n                  <Button\n                    borderless\n                    data-test-id=\"create-team\"\n                    type=\"button\"\n                    icon=\"icon-circle-add\"\n                    onClick={() =>\n                      openCreateTeamModal({\n                        organization,\n                        onClose: ({slug}) => this.setState({team: slug}),\n                      })\n                    }\n                  />\n                </Tooltip>\n              </TeamSelectInput>\n            </div>\n            <div>\n              <Button\n                data-test-id=\"create-project\"\n                priority=\"primary\"\n                disabled={inFlight || !team || projectName === ''}\n              >\n                {t('Create Project')}\n              </Button>\n            </div>\n          </CreateProjectForm>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withApi(withTeams(withOrganization(CreateProject)));\nexport {CreateProject};\n\nconst CreateProjectForm = styled('form')`\n  display: grid;\n  grid-template-columns: 300px 250px max-content;\n  grid-gap: ${space(2)};\n  align-items: end;\n  padding: ${space(3)} 0;\n  box-shadow: 0 -1px 0 rgba(0, 0, 0, 0.1);\n  background: #fff;\n  position: sticky;\n  bottom: 0;\n`;\n\nconst FormLabel = styled('div')`\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  margin-bottom: ${space(1)};\n`;\n\nconst ProjectPlatformIcon = styled(PlatformIconTile)`\n  font-size: 25px;\n`;\n\nconst ProjectNameInput = styled('div')`\n  ${inputStyles};\n  display: grid;\n  grid-template-columns: min-content 1fr;\n  grid-gap: ${space(1)};\n  align-items: center;\n  padding: 5px 10px;\n\n  input {\n    border: 0;\n    outline: 0;\n  }\n`;\n\nconst TeamSelectInput = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr min-content;\n  align-items: center;\n`;\n\nconst HelpText = styled('p')`\n  color: ${p => p.theme.gray3};\n  max-width: 700px;\n`;\n","import DocumentTitle from 'react-document-title';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport CreateProject from 'app/components/createProject';\nimport space from 'app/styles/space';\n\nconst NewProject = () => (\n  <Container>\n    <div className=\"container\">\n      <Content>\n        <DocumentTitle title=\"Sentry\" />\n        <CreateProject />\n      </Content>\n    </div>\n  </Container>\n);\n\nconst Container = styled('div')`\n  flex: 1;\n  background: #fff;\n  margin-bottom: -${space(3)}; /* cleans up a bg gap at bottom */\n`;\n\nconst Content = styled('div')`\n  margin-top: ${space(3)};\n`;\n\nexport default NewProject;\n"],"sourceRoot":""}