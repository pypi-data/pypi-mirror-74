{"version":3,"sources":["webpack:///./app/views/monitors/create.jsx"],"names":["CreateMonitor","onSubmitSuccess","data","browserHistory","push","props","params","orgId","id","this","Fragment","apiMethod","apiEndpoint","AsyncView"],"mappings":"2QAOqBA,E,mLAKnBC,gBAAkB,SAAAC,GAChBC,iBAAeC,KAAf,yBAAsC,EAAKC,MAAMC,OAAOC,MAAxD,qBAA0EL,EAAKM,GAA/E,O,0DAJA,2BAAqBC,KAAKJ,MAAMC,OAAOC,S,mCAQvC,OACE,kBAAC,IAAMG,SAAP,KACE,2CACA,kBAAC,IAAD,CACEC,UAAU,OACVC,YAAW,yBAAoBH,KAAKJ,MAAMC,OAAOC,MAAtC,cACXN,gBAAiBQ,KAAKR,uB,GAhBWY","file":"MonitorCreate.js","sourcesContent":["import React from 'react';\nimport {browserHistory} from 'react-router';\n\nimport AsyncView from 'app/views/asyncView';\n\nimport MonitorForm from './monitorForm';\n\nexport default class CreateMonitor extends AsyncView {\n  getTitle() {\n    return `Monitors - ${this.props.params.orgId}`;\n  }\n\n  onSubmitSuccess = data => {\n    browserHistory.push(`/organizations/${this.props.params.orgId}/monitors/${data.id}/`);\n  };\n\n  renderBody() {\n    return (\n      <React.Fragment>\n        <h1>New Monitor</h1>\n        <MonitorForm\n          apiMethod=\"POST\"\n          apiEndpoint={`/organizations/${this.props.params.orgId}/monitors/`}\n          onSubmitSuccess={this.onSubmitSuccess}\n        />\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}