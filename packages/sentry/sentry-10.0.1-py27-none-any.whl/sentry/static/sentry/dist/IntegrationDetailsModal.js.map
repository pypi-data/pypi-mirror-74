{"version":3,"sources":["webpack:///./app/components/modals/integrationDetailsModal.tsx","webpack:///./app/views/settings/components/tag.jsx","webpack:///./app/plugins/components/pluginIcon.tsx","webpack:///./images/logos/logo-default.svg","webpack:///./images/logos/logo-sentry.svg","webpack:///./images/logos/logo-amixr.svg","webpack:///./images/logos/logo-asana.svg","webpack:///./images/logos/logo-bitbucket.svg","webpack:///./images/logos/logo-campfire.svg","webpack:///./images/logos/logo-clickup.svg","webpack:///./images/logos/logo-clubhouse.svg","webpack:///./images/logos/logo-flowdock.svg","webpack:///./images/logos/logo-github.svg","webpack:///./images/logos/logo-github-enterprise.svg","webpack:///./images/logos/logo-gitlab.svg","webpack:///./images/logos/logo-heroku.svg","webpack:///./images/logos/logo-jira.svg","webpack:///./images/logos/logo-jira-server.svg","webpack:///./images/logos/logo-lighthouse.svg","webpack:///./images/logos/logo-opsgenie.svg","webpack:///./images/logos/logo-pagerduty.svg","webpack:///./images/logos/logo-phabricator.svg","webpack:///./images/logos/logo-pivotaltracker.svg","webpack:///./images/logos/logo-pushover.svg","webpack:///./images/logos/logo-redmine.svg","webpack:///./images/logos/logo-rookout.svg","webpack:///./images/logos/logo-slack.svg","webpack:///./images/logos/logo-split.svg","webpack:///./images/logos/logo-taiga.svg","webpack:///./images/logos/logo-teamwork.svg","webpack:///./images/logos/logo-trello.svg","webpack:///./images/logos/logo-twilio.svg","webpack:///./images/logos/logo-azure.svg","webpack:///./images/logos/logo-youtrack.svg","webpack:///./app/views/organizationIntegrations/addIntegration.tsx","webpack:///./app/views/organizationIntegrations/addIntegrationButton.tsx"],"names":["defaultFeatureGateComponents","IntegrationFeatures","p","children","disabled","disabledReason","ungatedFeatures","features","gatedFeatureGroups","FeatureList","map","f","i","key","onAddIntegration","integration","props","closeModal","componentDidMount","org_id","parseInt","this","organization","id","provider","featureTags","feature","StyledTag","replace","render","metadata","description","alerts","aspects","canAdd","externalInstall","push","type","icon","text","noticeText","buttonProps","style","marginLeft","size","priority","AddButton","href","url","onClick","external","buttonText","featureGate","dangerouslySetInnerHTML","__html","featureListHooks","get","featureProps","Fragment","align","mb","pluginId","pl","direction","justify","ProviderName","name","length","Description","Metadata","AuthorName","flex","author","source_url","issue_url","alert","className","DisabledNotice","reason","access","hasAccess","title","propTypes","func","isRequired","object","Organization","Component","src","ml","theme","Tag","styled","border","StyledInlineSvg","gray5","background","offWhite2","gray1","getBorder","inline","getMarginLeft","PropTypes","string","bool","InlineSvg","DEFAULT_ICON","ICON_PATHS","_default","sentry","browsers","device","interface_types","os","urls","webhooks","amixr","asana","bitbucket","campfire","clickup","clubhouse","flowdock","github","github_enterprise","gitlab","heroku","jira","jira_server","lighthouse","opsgenie","pagerduty","phabricator","pivotal","pushover","redmine","rookout","slack","split","taiga","teamwork","trello","twilio","vsts","youtrack","PluginIcon","undefined","defaultProps","number","module","exports","dialog","openDialog","urlParams","width","height","left","top","query","reinstallId","reinstall_id","account","installUrl","stringify","opts","window","open","focus","didReceiveMessage","message","origin","document","location","source","success","data","onInstall","addSuccess","addError","error","addEventListener","componentWillUnmount","removeEventListener","close","computeCenteredWindow","screenLeft","screenX","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","reinstall","label","noun"],"mappings":"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","file":"IntegrationDetailsModal.js","sourcesContent":["import {Box, Flex} from 'grid-emotion';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {analytics} from 'app/utils/analytics';\nimport {t} from 'app/locale';\nimport Access from 'app/components/acl/access';\nimport AddIntegrationButton from 'app/views/organizationIntegrations/addIntegrationButton';\nimport Alert from 'app/components/alert';\nimport Button from 'app/components/button';\nimport ExternalLink from 'app/components/links/externalLink';\nimport HookStore from 'app/stores/hookStore';\nimport InlineSvg from 'app/components/inlineSvg';\nimport PluginIcon from 'app/plugins/components/pluginIcon';\nimport SentryTypes from 'app/sentryTypes';\nimport Tag from 'app/views/settings/components/tag';\nimport Tooltip from 'app/components/tooltip';\nimport marked, {singleLineRenderer} from 'app/utils/marked';\nimport space from 'app/styles/space';\nimport {IntegrationDetailsModalOptions} from 'app/actionCreators/modal';\nimport {Integration} from 'app/types';\nimport {Hooks} from 'app/types/hooks';\n\ntype Props = {\n  closeModal: () => void;\n} & IntegrationDetailsModalOptions;\n\n/**\n * In sentry.io the features list supports rendering plan details. If the hook\n * is not registered for rendering the features list like this simply show the\n * features as a normal list.\n */\nconst defaultFeatureGateComponents = {\n  IntegrationFeatures: p =>\n    p.children({\n      disabled: false,\n      disabledReason: null,\n      ungatedFeatures: p.features,\n      gatedFeatureGroups: [],\n    }),\n  FeatureList: p => (\n    <ul>\n      {p.features.map((f, i) => (\n        <li key={i}>{f.description}</li>\n      ))}\n    </ul>\n  ),\n} as ReturnType<Hooks['integrations:feature-gates']>;\n\nclass IntegrationDetailsModal extends React.Component<Props> {\n  static propTypes = {\n    closeModal: PropTypes.func.isRequired,\n    onAddIntegration: PropTypes.func.isRequired,\n    provider: PropTypes.object.isRequired,\n    organization: SentryTypes.Organization.isRequired,\n  };\n\n  componentDidMount() {\n    analytics('integrations.install_modal_opened', {\n      org_id: parseInt(this.props.organization.id, 10),\n      integration: this.props.provider.key,\n    });\n  }\n\n  onAddIntegration = (integration: Integration) => {\n    this.props.closeModal();\n    this.props.onAddIntegration(integration);\n  };\n\n  featureTags(features) {\n    return features.map(feature => (\n      <StyledTag key={feature}>{feature.replace(/-/g, ' ')}</StyledTag>\n    ));\n  }\n\n  render() {\n    const {provider, organization, closeModal} = this.props;\n    const {metadata} = provider;\n    const description = marked(metadata.description);\n\n    const alerts = metadata.aspects.alerts || [];\n\n    if (!provider.canAdd && metadata.aspects.externalInstall) {\n      alerts.push({\n        type: 'warning',\n        icon: 'icon-exit',\n        text: metadata.aspects.externalInstall.noticeText,\n      });\n    }\n\n    const buttonProps = {\n      style: {marginLeft: space(1)},\n      size: 'small',\n      priority: 'primary',\n    };\n\n    const AddButton = p =>\n      (provider.canAdd && (\n        <AddIntegrationButton\n          provider={provider}\n          onAddIntegration={this.onAddIntegration}\n          {...buttonProps}\n          {...p}\n        />\n      )) ||\n      (!provider.canAdd && metadata.aspects.externalInstall && (\n        <Button\n          icon=\"icon-exit\"\n          href={metadata.aspects.externalInstall.url}\n          onClick={closeModal}\n          external\n          {...buttonProps}\n          {...p}\n        >\n          {metadata.aspects.externalInstall.buttonText}\n        </Button>\n      ));\n\n    // Prepare the features list\n    const features = metadata.features.map(f => ({\n      featureGate: f.featureGate,\n      description: (\n        <span dangerouslySetInnerHTML={{__html: singleLineRenderer(f.description)}} />\n      ),\n    }));\n\n    const featureListHooks = HookStore.get('integrations:feature-gates');\n    featureListHooks.push(() => defaultFeatureGateComponents);\n\n    const {FeatureList, IntegrationFeatures} = featureListHooks[0]();\n    const featureProps = {organization, features};\n\n    return (\n      <React.Fragment>\n        <Flex align=\"center\" mb={2}>\n          <PluginIcon pluginId={provider.key} size={50} />\n          <Flex pl={1} align=\"flex-start\" direction=\"column\" justify=\"center\">\n            <ProviderName data-test-id=\"provider-name\">\n              {t('%s Integration', provider.name)}\n            </ProviderName>\n            <Flex>{provider.features.length && this.featureTags(provider.features)}</Flex>\n          </Flex>\n        </Flex>\n        <Description dangerouslySetInnerHTML={{__html: description}} />\n        <FeatureList {...featureProps} provider={provider} />\n\n        <Metadata>\n          <AuthorName flex={1}>{t('By %s', provider.metadata.author)}</AuthorName>\n          <Box>\n            <ExternalLink href={metadata.source_url}>{t('View Source')}</ExternalLink>\n            <ExternalLink href={metadata.issue_url}>{t('Report Issue')}</ExternalLink>\n          </Box>\n        </Metadata>\n\n        {alerts.map((alert, i) => (\n          <Alert key={i} type={alert.type} icon={alert.icon}>\n            <span dangerouslySetInnerHTML={{__html: singleLineRenderer(alert.text)}} />\n          </Alert>\n        ))}\n\n        <IntegrationFeatures {...featureProps}>\n          {({disabled, disabledReason}) => (\n            <div className=\"modal-footer\">\n              {disabled && <DisabledNotice reason={disabledReason} />}\n              <Button data-test-id=\"cancel-button\" size=\"small\" onClick={closeModal}>\n                {t('Cancel')}\n              </Button>\n              <Access organization={organization} access={['org:integrations']}>\n                {({hasAccess}) => (\n                  <Tooltip\n                    title={t(\n                      'You must be an organization owner, manager or admin to install this.'\n                    )}\n                    disabled={hasAccess}\n                  >\n                    <AddButton\n                      data-test-id=\"add-button\"\n                      disabled={disabled || !hasAccess}\n                    />\n                  </Tooltip>\n                )}\n              </Access>\n            </div>\n          )}\n        </IntegrationFeatures>\n      </React.Fragment>\n    );\n  }\n}\n\nconst DisabledNotice = styled(({reason, ...p}: {reason: React.ReactNode}) => (\n  <Flex align=\"center\" flex={1} {...p}>\n    <InlineSvg src=\"icon-circle-exclamation\" size=\"1.5em\" />\n    <Box ml={1}>{reason}</Box>\n  </Flex>\n))`\n  color: ${p => p.theme.red};\n  font-size: 0.9em;\n`;\n\nconst ProviderName = styled(p => <Box {...p} />)`\n  font-weight: bold;\n  font-size: 1.4em;\n  margin-bottom: ${space(1)};\n`;\n\nconst Description = styled('div')`\n  font-size: 1.5rem;\n  line-height: 2.1rem;\n  margin-bottom: ${space(2)};\n\n  li {\n    margin-bottom: 6px;\n  }\n`;\n\nconst Metadata = styled(Flex)`\n  font-size: 0.9em;\n  margin-bottom: ${space(2)};\n\n  a {\n    margin-left: ${space(1)};\n  }\n`;\n\nconst AuthorName = styled(Box)`\n  color: ${p => p.theme.gray2};\n`;\n\nconst StyledTag = styled(Tag)`\n  &:not(:first-child) {\n    margin-left: ${space(0.5)};\n  }\n`;\n\nexport default IntegrationDetailsModal;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport InlineSvg from 'app/components/inlineSvg';\n\nconst getMarginLeft = p => {\n  if (!p.inline) {\n    return '';\n  }\n  return `margin-left: ${p.size === 'small' ? '0.25em' : '0.5em'};`;\n};\n\nconst getBorder = p =>\n  p.border\n    ? `border: 1px solid ${\n        p.priority ? p.theme.alert[p.priority].border : p.theme.gray1\n      };`\n    : '';\n\nconst Tag = styled(\n  ({children, icon, priority: _priority, size: _size, border: _border, ...props}) => (\n    <div {...props}>\n      {icon && <StyledInlineSvg src={icon} size=\"12px\" />}\n      {children}\n    </div>\n  )\n)`\n  display: inline-flex;\n  box-sizing: border-box;\n  padding: ${p => (p.size === 'small' ? '0.1em 0.4em 0.2em' : '0.35em 0.8em 0.4em')};\n  font-size: 75%;\n  line-height: 1;\n  color: ${p => (p.priority ? '#fff' : p.gray5)};\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: middle;\n  border-radius: ${p => (p.size === 'small' ? '0.25em' : '2em')};\n  text-transform: lowercase;\n  font-weight: ${p => (p.size === 'small' ? 'bold' : 'normal')};\n  background: ${p =>\n    p.priority ? p.theme.alert[p.priority].background : p.theme.offWhite2};\n  ${p => getBorder(p)};\n  ${p => getMarginLeft(p)};\n`;\n\nTag.propTypes = {\n  priority: PropTypes.string,\n  size: PropTypes.string,\n  border: PropTypes.bool,\n  icon: PropTypes.string,\n  inline: PropTypes.bool,\n};\n\nconst StyledInlineSvg = styled(InlineSvg)`\n  margin-right: 4px;\n`;\n\nexport default Tag;\n","import PropTypes from 'prop-types';\nimport styled from 'react-emotion';\n\nimport placeholder from 'app/../images/logos/logo-default.svg';\nimport sentry from 'app/../images/logos/logo-sentry.svg';\nimport amixr from 'app/../images/logos/logo-amixr.svg';\nimport asana from 'app/../images/logos/logo-asana.svg';\nimport bitbucket from 'app/../images/logos/logo-bitbucket.svg';\nimport campfire from 'app/../images/logos/logo-campfire.svg';\nimport clickup from 'app/../images/logos/logo-clickup.svg';\nimport clubhouse from 'app/../images/logos/logo-clubhouse.svg';\nimport flowdock from 'app/../images/logos/logo-flowdock.svg';\nimport github from 'app/../images/logos/logo-github.svg';\nimport githubEnterprise from 'app/../images/logos/logo-github-enterprise.svg';\nimport gitlab from 'app/../images/logos/logo-gitlab.svg';\nimport heroku from 'app/../images/logos/logo-heroku.svg';\nimport jira from 'app/../images/logos/logo-jira.svg';\nimport jiraserver from 'app/../images/logos/logo-jira-server.svg';\nimport lighthouse from 'app/../images/logos/logo-lighthouse.svg';\nimport opsgenie from 'app/../images/logos/logo-opsgenie.svg';\nimport pagerduty from 'app/../images/logos/logo-pagerduty.svg';\nimport phabricator from 'app/../images/logos/logo-phabricator.svg';\nimport pivotal from 'app/../images/logos/logo-pivotaltracker.svg';\nimport pushover from 'app/../images/logos/logo-pushover.svg';\nimport redmine from 'app/../images/logos/logo-redmine.svg';\nimport rookout from 'app/../images/logos/logo-rookout.svg';\nimport slack from 'app/../images/logos/logo-slack.svg';\nimport split from 'app/../images/logos/logo-split.svg';\nimport taiga from 'app/../images/logos/logo-taiga.svg';\nimport teamwork from 'app/../images/logos/logo-teamwork.svg';\nimport trello from 'app/../images/logos/logo-trello.svg';\nimport twilio from 'app/../images/logos/logo-twilio.svg';\nimport vsts from 'app/../images/logos/logo-azure.svg';\nimport youtrack from 'app/../images/logos/logo-youtrack.svg';\n\n// Map of plugin id -> logo filename\nconst DEFAULT_ICON = placeholder;\nexport const ICON_PATHS = {\n  _default: DEFAULT_ICON,\n  sentry,\n  browsers: sentry,\n  device: sentry,\n  interface_types: sentry,\n  os: sentry,\n  urls: sentry,\n  webhooks: sentry,\n\n  amixr,\n  asana,\n  bitbucket,\n  campfire,\n  clickup,\n  clubhouse,\n  flowdock,\n  github,\n  github_enterprise: githubEnterprise,\n  gitlab,\n  heroku,\n  jira,\n  'jira-atlassian-connect': jira,\n  'jira-ac': jira,\n  jira_server: jiraserver,\n  lighthouse,\n  opsgenie,\n  pagerduty,\n  phabricator,\n  pivotal,\n  pushover,\n  redmine,\n  rookout,\n  slack,\n  split,\n  taiga,\n  teamwork,\n  trello,\n  twilio,\n  vsts,\n  youtrack,\n};\n\ntype Props = {\n  pluginId?: string;\n  size: number;\n};\n\nconst PluginIcon = styled('div')<Props>`\n  position: relative;\n  height: ${p => p.size}px;\n  width: ${p => p.size}px;\n  border-radius: 2px;\n  border: 0;\n  /* this is so that there aren't gray boxes before load */\n  background-color: #fff;\n  display: inline-block;\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n  background-image: url(${({pluginId}) =>\n    (pluginId !== undefined && ICON_PATHS[pluginId]) || DEFAULT_ICON});\n`;\n\nPluginIcon.defaultProps = {\n  pluginId: '_default',\n  size: 20,\n};\n\nPluginIcon.propTypes = {\n  pluginId: PropTypes.string,\n  size: PropTypes.number.isRequired,\n};\n\nexport default PluginIcon;\n","module.exports = __webpack_public_path__ + \"logo-default.svg\";","module.exports = __webpack_public_path__ + \"logo-sentry.svg\";","module.exports = __webpack_public_path__ + \"logo-amixr.svg\";","module.exports = __webpack_public_path__ + \"logo-asana.svg\";","module.exports = __webpack_public_path__ + \"logo-bitbucket.svg\";","module.exports = __webpack_public_path__ + \"logo-campfire.svg\";","module.exports = __webpack_public_path__ + \"logo-clickup.svg\";","module.exports = __webpack_public_path__ + \"logo-clubhouse.svg\";","module.exports = __webpack_public_path__ + \"logo-flowdock.svg\";","module.exports = __webpack_public_path__ + \"logo-github.svg\";","module.exports = __webpack_public_path__ + \"logo-github-enterprise.svg\";","module.exports = __webpack_public_path__ + \"logo-gitlab.svg\";","module.exports = __webpack_public_path__ + \"logo-heroku.svg\";","module.exports = __webpack_public_path__ + \"logo-jira.svg\";","module.exports = __webpack_public_path__ + \"logo-jira-server.svg\";","module.exports = __webpack_public_path__ + \"logo-lighthouse.svg\";","module.exports = __webpack_public_path__ + \"logo-opsgenie.svg\";","module.exports = __webpack_public_path__ + \"logo-pagerduty.svg\";","module.exports = __webpack_public_path__ + \"logo-phabricator.svg\";","module.exports = __webpack_public_path__ + \"logo-pivotaltracker.svg\";","module.exports = __webpack_public_path__ + \"logo-pushover.svg\";","module.exports = __webpack_public_path__ + \"logo-redmine.svg\";","module.exports = __webpack_public_path__ + \"logo-rookout.svg\";","module.exports = __webpack_public_path__ + \"logo-slack.svg\";","module.exports = __webpack_public_path__ + \"logo-split.svg\";","module.exports = __webpack_public_path__ + \"logo-taiga.svg\";","module.exports = __webpack_public_path__ + \"logo-teamwork.svg\";","module.exports = __webpack_public_path__ + \"logo-trello.svg\";","module.exports = __webpack_public_path__ + \"logo-twilio.svg\";","module.exports = __webpack_public_path__ + \"logo-azure.svg\";","module.exports = __webpack_public_path__ + \"logo-youtrack.svg\";","import PropTypes from 'prop-types';\nimport React from 'react';\nimport queryString from 'query-string';\n\nimport {t} from 'app/locale';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport {IntegrationProvider, Integration} from 'app/types';\n\ntype Props = {\n  children: (\n    openDialog: (urlParams?: {[key: string]: string}) => void\n  ) => React.ReactNode;\n  provider: IntegrationProvider;\n  onInstall: (data: Integration) => void;\n  reinstallId?: string;\n  account?: string;\n};\n\nexport default class AddIntegration extends React.Component<Props> {\n  static propTypes = {\n    children: PropTypes.func.isRequired,\n    provider: PropTypes.object.isRequired,\n    onInstall: PropTypes.func.isRequired,\n    reinstallId: PropTypes.string,\n    account: PropTypes.string,\n  };\n\n  componentDidMount() {\n    window.addEventListener('message', this.didReceiveMessage);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('message', this.didReceiveMessage);\n    this.dialog && this.dialog.close();\n  }\n\n  dialog: Window | null = null;\n\n  computeCenteredWindow(width: number, height: number) {\n    //Taken from: https://stackoverflow.com/questions/4068373/center-a-popup-window-on-screen\n    const screenLeft =\n      window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n\n    const screenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n    const innerWidth = window.innerWidth\n      ? window.innerWidth\n      : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : screen.width;\n\n    const innerHeight = window.innerHeight\n      ? window.innerHeight\n      : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : screen.height;\n\n    const left = innerWidth / 2 - width / 2 + screenLeft;\n    const top = innerHeight / 2 - height / 2 + screenTop;\n\n    return {left, top};\n  }\n\n  openDialog = (urlParams?: {[key: string]: string}) => {\n    const name = 'sentryAddIntegration';\n    const {url, width, height} = this.props.provider.setupDialog;\n    const {left, top} = this.computeCenteredWindow(width, height);\n\n    const query: {[key: string]: string} = {...urlParams};\n\n    if (this.props.reinstallId) {\n      query.reinstall_id = this.props.reinstallId;\n    }\n\n    if (this.props.account) {\n      query.account = this.props.account;\n    }\n\n    const installUrl = `${url}?${queryString.stringify(query)}`;\n    const opts = `scrollbars=yes,width=${width},height=${height},top=${top},left=${left}`;\n\n    this.dialog = window.open(installUrl, name, opts);\n    this.dialog && this.dialog.focus();\n  };\n\n  didReceiveMessage = (message: MessageEvent) => {\n    if (message.origin !== document.location.origin) {\n      return;\n    }\n\n    if (message.source !== this.dialog) {\n      return;\n    }\n\n    const {success, data} = message.data;\n    this.dialog = null;\n\n    if (!success) {\n      IndicatorStore.addError(data.error);\n      return;\n    }\n\n    if (!data) {\n      return;\n    }\n    this.props.onInstall(data);\n    IndicatorStore.addSuccess(t(`${this.props.provider.name} added`));\n  };\n\n  render() {\n    return this.props.children(this.openDialog);\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport AddIntegration from 'app/views/organizationIntegrations/addIntegration';\nimport Button from 'app/components/button';\nimport Tooltip from 'app/components/tooltip';\nimport {IntegrationProvider, Integration} from 'app/types';\n\ntype Props = {\n  provider: IntegrationProvider;\n  onAddIntegration: (data: Integration) => void;\n  buttonText?: string;\n  reinstall?: boolean;\n} & React.ComponentProps<typeof Button>;\n\nexport default class AddIntegrationButton extends React.Component<Props> {\n  static propTypes = {\n    provider: PropTypes.object.isRequired,\n    onAddIntegration: PropTypes.func.isRequired,\n    buttonText: PropTypes.string,\n    reinstall: PropTypes.bool,\n  };\n\n  render() {\n    const {\n      provider,\n      buttonText,\n      onAddIntegration,\n      reinstall,\n      ...buttonProps\n    } = this.props;\n\n    const label =\n      buttonText || t(reinstall ? 'Enable' : 'Add %s', provider.metadata.noun);\n\n    return (\n      <Tooltip\n        disabled={provider.canAdd}\n        title={`Integration cannot be added on Sentry. Enable this integration via the ${\n          provider.name\n        } instance.`}\n      >\n        <AddIntegration provider={provider} onInstall={onAddIntegration}>\n          {onClick => (\n            <Button\n              disabled={!provider.canAdd}\n              {...buttonProps}\n              onClick={() => onClick()}\n            >\n              {label}\n            </Button>\n          )}\n        </AddIntegration>\n      </Tooltip>\n    );\n  }\n}\n"],"sourceRoot":""}