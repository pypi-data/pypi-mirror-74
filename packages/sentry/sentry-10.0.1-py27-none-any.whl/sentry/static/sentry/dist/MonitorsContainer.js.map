{"version":3,"sources":["webpack:///./app/views/monitors/index.jsx"],"names":["Body","styled","p","theme","whiteDark","MonitorsContainer","this","props","organization","children","features","renderDisabled","showEnvironmentSelector","showDateSelector","resetParamsOnChange","React","Component","withOrganization","withGlobalSelection"],"mappings":"6SAWMA,EAAOC,YAAO,MAAV,qBAAGA,CAAH,qBACY,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,YADzB,kCAMJC,E,yIAKK,MAC0BC,KAAKC,MAA/BC,EADA,EACAA,aAAcC,EADd,EACcA,SAErB,OACE,kBAAC,IAAD,CAASC,SAAU,CAAC,YAAaC,gBAAc,GAC7C,kBAAC,IAAD,CACEH,aAAcA,EACdI,yBAAyB,EACzBC,kBAAkB,EAClBC,oBAAqB,CAAC,YAExB,kBAAC,IAAD,KACE,kBAACd,EAAD,KAAOS,S,GAjBeM,IAAMC,WAAhCX,E,gCAwBSY,sBAAiBC,YAAoBb","file":"MonitorsContainer.js","sourcesContent":["import React from 'react';\nimport styled from 'react-emotion';\n\nimport Feature from 'app/components/acl/feature';\nimport GlobalSelectionHeader from 'app/components/organizations/globalSelectionHeader';\nimport {PageContent} from 'app/styles/organization';\nimport withGlobalSelection from 'app/utils/withGlobalSelection';\nimport withOrganization from 'app/utils/withOrganization';\n\nimport SentryTypes from 'app/sentryTypes';\n\nconst Body = styled('div')`\n  background-color: ${p => p.theme.whiteDark};\n  flex-direction: column;\n  flex: 1;\n`;\n\nclass MonitorsContainer extends React.Component {\n  static propTypes = {\n    organization: SentryTypes.Organization,\n  };\n\n  render() {\n    const {organization, children} = this.props;\n\n    return (\n      <Feature features={['monitors']} renderDisabled>\n        <GlobalSelectionHeader\n          organization={organization}\n          showEnvironmentSelector={false}\n          showDateSelector={false}\n          resetParamsOnChange={['cursor']}\n        />\n        <PageContent>\n          <Body>{children}</Body>\n        </PageContent>\n      </Feature>\n    );\n  }\n}\n\nexport default withOrganization(withGlobalSelection(MonitorsContainer));\nexport {MonitorsContainer};\n"],"sourceRoot":""}