{"version":3,"sources":["webpack:///./app/views/settings/projectAlerts/ruleEditor/ruleNode.jsx","webpack:///./app/views/settings/projectAlerts/ruleEditor/ruleNodeList.jsx","webpack:///./app/views/settings/projectAlerts/ruleEditor/index.jsx","webpack:///./app/views/settings/projectAlerts/projectAlertRuleDetails.jsx"],"names":["RuleNode","name","data","initialVal","undefined","this","props","choices","length","initial","handlePropertyChange","clearable","placeholder","t","noResultsText","value","key","style","marginLeft","marginRight","onChange","val","marginBottom","toString","choice","getChoiceField","bind","number","getNumberField","string","getTextField","type","node","label","formFields","split","map","part","test","slice","match","getField","component","getComponent","RuleNodeRow","RuleNodeForm","id","RuleNodeControls","onClick","handleDelete","size","icon","React","Component","styled","p","theme","offWhite","RuleNodeList","getNode","nodes","find","className","RuleNodes","items","item","idx","handleDeleteRow","obj","handleAddRow","width","options","filter","n","enabled","FREQUENCY_CHOICES","ACTION_MATCH_CHOICES","AlertRuleRow","RuleEditor","createReactClass","displayName","getInitialState","rule","loading","error","environments","componentDidMount","fetchData","componentDidUpdate","state","$","document","body","scrollTop","formNode","offset","top","api","params","ruleId","projectId","orgId","defaultRule","actionMatch","actions","conditions","frequency","environment","ALL_ENVIRONMENTS_KEY","promises","requestPromise","Promise","resolve","all","then","setState","handleSubmit","e","preventDefault","isNew","project","organization","endpoint","slug","addMessage","request","method","success","resp","browserHistory","replace","recreateRoute","stepBack","addSuccessMessage","response","responseJSON","__all__","addErrorMessage","hasError","field","handleEnvironmentChange","handleChange","prop","prevState","push","splice","render","environmentChoices","env","getDisplayName","title","onSubmit","ref","objSlug","disablePadding","defaultValue","required","ActionBar","CancelButton","to","priority","disabled","withApi","Button","space","borderLight","ProjectAlertRuleDetails","context","configs","routes","AsyncView","contextTypes","SentryTypes","Organization","Project"],"mappings":"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","file":"ProjectAlertRuleDetails.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport Button from 'app/components/button';\nimport {t} from 'app/locale';\nimport {SelectField, NumberField, TextField} from 'app/components/forms';\n\nclass RuleNode extends React.Component {\n  static propTypes = {\n    data: PropTypes.object.isRequired,\n    node: PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      formFields: PropTypes.object,\n    }).isRequired,\n    handleDelete: PropTypes.func.isRequired,\n    handlePropertyChange: PropTypes.func.isRequired,\n  };\n\n  getChoiceField(name, data) {\n    // Select the first item on this list\n    // If it's not yet defined, call handlePropertyChange to make sure the value is set on state\n\n    let initialVal;\n    if (this.props.data[name] === undefined && !!data.choices.length) {\n      if (data.initial) {\n        initialVal = data.initial;\n      } else {\n        initialVal = data.choices[0][0];\n      }\n      this.props.handlePropertyChange(name, initialVal);\n    } else {\n      initialVal = this.props.data[name];\n    }\n\n    return (\n      <SelectField\n        clearable={false}\n        placeholder={t('Select integration')}\n        noResultsText={t('No integrations available')}\n        name={name}\n        value={initialVal}\n        choices={data.choices}\n        key={name}\n        style={{marginLeft: 6, marginRight: 6}}\n        onChange={val => this.props.handlePropertyChange(name, val)}\n      />\n    );\n  }\n\n  getTextField(name, data) {\n    return (\n      <TextField\n        name={name}\n        value={this.props.data[name]}\n        placeholder={data.placeholder}\n        key={name}\n        style={{marginBottom: 0}}\n        onChange={val => this.props.handlePropertyChange(name, val)}\n      />\n    );\n  }\n\n  getNumberField(name, data) {\n    return (\n      <NumberField\n        name={name}\n        value={this.props.data[name]}\n        placeholder={data.placeholder.toString()}\n        key={name}\n        style={{marginBottom: 0}}\n        onChange={val => this.props.handlePropertyChange(name, val)}\n      />\n    );\n  }\n\n  getField(name, data) {\n    const getFieldTypes = {\n      choice: this.getChoiceField.bind(this),\n      number: this.getNumberField.bind(this),\n      string: this.getTextField.bind(this),\n    };\n    return getFieldTypes[data.type](name, data);\n  }\n\n  getComponent(node) {\n    const {label, formFields} = node;\n\n    return label.split(/({\\w+})/).map(part => {\n      if (!/^{\\w+}$/.test(part)) {\n        return part;\n      }\n\n      const key = part.slice(1, -1);\n\n      // If matcher is \"is set\" or \"is not set\", then we do not want to show the value input\n      // because it is not required\n      if (\n        key === 'value' &&\n        (this.props.data.match === 'is' || this.props.data.match === 'ns')\n      ) {\n        return null;\n      }\n\n      return formFields[key] ? this.getField(key, formFields[key]) : part;\n    });\n  }\n\n  render() {\n    const {data, node} = this.props;\n\n    const component = this.getComponent(node);\n\n    return (\n      <RuleNodeRow>\n        <RuleNodeForm>\n          <input type=\"hidden\" name=\"id\" value={data.id} />\n          {component}\n        </RuleNodeForm>\n        <RuleNodeControls>\n          <Button\n            onClick={this.props.handleDelete}\n            type=\"button\"\n            size=\"small\"\n            icon=\"icon-trash\"\n          />\n        </RuleNodeControls>\n      </RuleNodeRow>\n    );\n  }\n}\n\nexport default RuleNode;\n\nconst RuleNodeRow = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: 0 15px;\n\n  &:nth-child(odd) {\n    background-color: ${p => p.theme.offWhite};\n  }\n`;\n\nconst RuleNodeForm = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  flex: 1;\n  line-height: 40px;\n  margin: 5px 12px 5px 0;\n  align-items: center;\n\n  .control-group {\n    margin: 0 6px;\n  }\n\n  .form-control {\n    padding: 3px 12px;\n  }\n\n  .Select {\n    line-height: 26px;\n    min-width: 150px;\n  }\n  .Select-placeholder {\n    height: 26px;\n    line-height: 26px;\n  }\n  .Select-control {\n    height: 24px;\n  }\n  .Select--single > .Select-control .Select-value {\n    line-height: 25px;\n  }\n  .Select-input {\n    height: 24px;\n    input {\n      line-height: 20px;\n      padding: 2px 0;\n    }\n  }\n`;\n\nconst RuleNodeControls = styled('div')`\n  margin-left: 6px;\n`;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport SelectControl from 'app/components/forms/selectControl';\nimport RuleNode from 'app/views/settings/projectAlerts/ruleEditor/ruleNode';\n\nclass RuleNodeList extends React.Component {\n  static propTypes = {\n    items: PropTypes.array,\n    nodes: PropTypes.array.isRequired,\n    handlePropertyChange: PropTypes.func.isRequired,\n    handleAddRow: PropTypes.func.isRequired,\n    handleDeleteRow: PropTypes.func.isRequired,\n  };\n\n  getNode = id => {\n    return this.props.nodes.find(node => node.id === id);\n  };\n\n  render() {\n    return (\n      <div className={this.props.className}>\n        <RuleNodes>\n          {this.props.items.map((item, idx) => {\n            return (\n              <RuleNode\n                key={idx}\n                node={this.getNode(item.id)}\n                handleDelete={() => this.props.handleDeleteRow(idx)}\n                data={item}\n                handlePropertyChange={this.props.handlePropertyChange(idx)}\n              />\n            );\n          })}\n        </RuleNodes>\n        <fieldset>\n          <SelectControl\n            onChange={obj => this.props.handleAddRow(obj ? obj.value : obj)}\n            style={{width: '100%'}}\n            options={this.props.nodes\n              .filter(n => n.enabled)\n              .map(node => ({\n                value: node.id,\n                label: node.label,\n              }))}\n          />\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nexport default RuleNodeList;\n\nconst RuleNodes = styled('div')`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n`;\n","import $ from 'jquery';\nimport {browserHistory} from 'react-router';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport createReactClass from 'create-react-class';\nimport styled from 'react-emotion';\n\nimport {ALL_ENVIRONMENTS_KEY} from 'app/constants';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\nimport {SelectField, TextField} from 'app/components/forms';\nimport {\n  addErrorMessage,\n  addSuccessMessage,\n  addMessage,\n} from 'app/actionCreators/indicator';\nimport {t} from 'app/locale';\nimport withApi from 'app/utils/withApi';\nimport Button from 'app/components/button';\nimport LoadingIndicator from 'app/components/loadingIndicator';\nimport SentryDocumentTitle from 'app/components/sentryDocumentTitle';\nimport RuleNodeList from 'app/views/settings/projectAlerts/ruleEditor/ruleNodeList';\nimport recreateRoute from 'app/utils/recreateRoute';\nimport space from 'app/styles/space';\nimport {getDisplayName} from 'app/utils/environment';\n\nconst FREQUENCY_CHOICES = [\n  ['5', t('5 minutes')],\n  ['10', t('10 minutes')],\n  ['30', t('30 minutes')],\n  ['60', t('60 minutes')],\n  ['180', t('3 hours')],\n  ['720', t('12 hours')],\n  ['1440', t('24 hours')],\n  ['10080', t('one week')],\n  ['43200', t('30 days')],\n];\n\nconst ACTION_MATCH_CHOICES = [['all', t('all')], ['any', t('any')], ['none', t('none')]];\n\nconst AlertRuleRow = styled('h6')`\n  display: flex;\n  align-items: center;\n`;\n\nconst RuleEditor = createReactClass({\n  displayName: 'RuleEditor',\n\n  propTypes: {\n    api: PropTypes.object,\n    actions: PropTypes.array.isRequired,\n    conditions: PropTypes.array.isRequired,\n    project: PropTypes.object.isRequired,\n    organization: PropTypes.object.isRequired,\n  },\n\n  getInitialState() {\n    return {\n      rule: null,\n      loading: false,\n      error: null,\n      environments: [],\n    };\n  },\n\n  componentDidMount() {\n    this.fetchData();\n  },\n\n  componentDidUpdate() {\n    if (this.state.error) {\n      $(document.body).scrollTop($(this.formNode).offset().top);\n    }\n  },\n\n  fetchData() {\n    const {\n      api,\n      params: {ruleId, projectId, orgId},\n    } = this.props;\n\n    const defaultRule = {\n      actionMatch: 'all',\n      actions: [],\n      conditions: [],\n      name: '',\n      frequency: 30,\n      environment: ALL_ENVIRONMENTS_KEY,\n    };\n\n    const promises = [\n      api.requestPromise(`/projects/${orgId}/${projectId}/environments/`),\n      ruleId\n        ? api.requestPromise(`/projects/${orgId}/${projectId}/rules/${ruleId}/`)\n        : Promise.resolve(defaultRule),\n    ];\n\n    Promise.all(promises).then(([environments, rule]) => {\n      this.setState({environments, rule});\n    });\n  },\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const data = {...this.state.rule};\n    const isNew = !data.id;\n    const {project, organization} = this.props;\n\n    let endpoint = `/projects/${organization.slug}/${project.slug}/rules/`;\n    if (data.id) {\n      endpoint += data.id + '/';\n    }\n\n    if (data.environment === ALL_ENVIRONMENTS_KEY) {\n      delete data.environment;\n    }\n\n    addMessage(t('Saving...'));\n\n    this.props.api.request(endpoint, {\n      method: isNew ? 'POST' : 'PUT',\n      data,\n      success: resp => {\n        this.setState({error: null, loading: false, rule: resp});\n        // Redirect to correct ID if /new\n        if (isNew) {\n          browserHistory.replace(\n            recreateRoute(`${resp.id}/`, {...this.props, stepBack: -1})\n          );\n        }\n        addSuccessMessage(isNew ? t('Created alert rule') : t('Updated alert rule'));\n      },\n      error: response => {\n        this.setState({\n          error: response.responseJSON || {__all__: 'Unknown error'},\n          loading: false,\n        });\n        addErrorMessage(t('An error occurred'));\n      },\n    });\n  },\n\n  hasError(field) {\n    const {error} = this.state;\n    if (!error) {\n      return false;\n    }\n    return !!error[field];\n  },\n\n  handleEnvironmentChange(val) {\n    // If 'All Environments' is selected the value should be null\n    if (val === ALL_ENVIRONMENTS_KEY) {\n      this.handleChange('environment', null);\n    } else {\n      this.handleChange('environment', val);\n    }\n  },\n\n  handleChange(prop, val) {\n    this.setState(state => {\n      const rule = {...state.rule};\n      rule[prop] = val;\n      return {rule};\n    });\n  },\n\n  handlePropertyChange(type) {\n    return idx => {\n      return (prop, val) => {\n        const rule = {...this.state.rule};\n        rule[type][idx][prop] = val;\n        this.setState({rule});\n      };\n    };\n  },\n\n  handleAddRow(type) {\n    return id => {\n      this.setState(prevState => {\n        prevState.rule[type].push({id});\n        return {\n          rule: prevState.rule,\n        };\n      });\n    };\n  },\n\n  handleDeleteRow(type) {\n    return idx => {\n      this.setState(prevState => {\n        prevState.rule[type].splice(idx, 1);\n        return {\n          rule: prevState.rule,\n        };\n      });\n    };\n  },\n\n  render() {\n    const {projectId} = this.props.params;\n    const {environments} = this.state;\n    const environmentChoices = [\n      [ALL_ENVIRONMENTS_KEY, t('All Environments')],\n      ...environments.map(env => [env.name, getDisplayName(env)]),\n    ];\n\n    if (!this.state.rule) {\n      return <LoadingIndicator />;\n    }\n\n    const {rule, loading, error} = this.state;\n    const {actionMatch, actions, conditions, frequency, name} = rule;\n\n    const environment =\n      rule.environment === null ? ALL_ENVIRONMENTS_KEY : rule.environment;\n\n    const title = rule.id ? t('Edit Alert Rule') : t('New Alert Rule');\n\n    return (\n      <form onSubmit={this.handleSubmit} ref={node => (this.formNode = node)}>\n        <SentryDocumentTitle title={title} objSlug={projectId} />\n        <Panel className=\"rule-detail\">\n          <PanelHeader>{title}</PanelHeader>\n          <PanelBody disablePadding={false}>\n            {error && (\n              <div className=\"alert alert-block alert-error\">\n                <p>\n                  {t(\n                    'There was an error saving your changes. Make sure all fields are valid and try again.'\n                  )}\n                </p>\n              </div>\n            )}\n            <h6>{t('Rule name')}:</h6>\n            <TextField\n              name=\"name\"\n              defaultValue={name}\n              required\n              placeholder={t('My Rule Name')}\n              onChange={val => this.handleChange('name', val)}\n            />\n\n            <hr />\n\n            <AlertRuleRow>\n              {t(\n                'Every time %s of these conditions are met:',\n                <SelectField\n                  clearable={false}\n                  className={this.hasError('actionMatch') ? ' error' : ''}\n                  style={{marginBottom: 0, marginLeft: 5, marginRight: 5, width: 100}}\n                  name=\"actionMatch\"\n                  value={actionMatch}\n                  required\n                  choices={ACTION_MATCH_CHOICES}\n                  onChange={val => this.handleChange('actionMatch', val)}\n                />\n              )}\n            </AlertRuleRow>\n\n            {this.hasError('conditions') && (\n              <p className=\"error\">{this.state.error.conditions[0]}</p>\n            )}\n\n            <RuleNodeList\n              nodes={this.props.conditions}\n              items={conditions || []}\n              className=\"rule-condition-list\"\n              handlePropertyChange={this.handlePropertyChange('conditions')}\n              handleAddRow={this.handleAddRow('conditions')}\n              handleDeleteRow={this.handleDeleteRow('conditions')}\n            />\n\n            <hr />\n\n            <h6>{t('In this environment')}:</h6>\n            <SelectField\n              clearable={false}\n              className={this.hasError('environment') ? ' error' : ''}\n              style={{marginBottom: 0, marginLeft: 5, marginRight: 5}}\n              name=\"environment\"\n              value={environment}\n              required\n              choices={environmentChoices}\n              onChange={val => this.handleEnvironmentChange(val)}\n            />\n\n            <hr />\n\n            <h6>{t('Take these actions:')}</h6>\n\n            {this.hasError('actions') && (\n              <p className=\"error\">{this.state.error.actions[0]}</p>\n            )}\n\n            <RuleNodeList\n              nodes={this.props.actions}\n              items={actions || []}\n              handlePropertyChange={this.handlePropertyChange('actions')}\n              handleAddRow={this.handleAddRow('actions')}\n              handleDeleteRow={this.handleDeleteRow('actions')}\n            />\n\n            <hr />\n\n            <AlertRuleRow>\n              {t(\n                'Perform these actions at most once every %s for an issue.',\n                <SelectField\n                  clearable={false}\n                  name=\"frequency\"\n                  className={this.hasError('frequency') ? ' error' : ''}\n                  value={frequency}\n                  style={{marginBottom: 0, marginLeft: 5, marginRight: 5, width: 140}}\n                  required\n                  choices={FREQUENCY_CHOICES}\n                  onChange={val => this.handleChange('frequency', val)}\n                />\n              )}\n            </AlertRuleRow>\n\n            <ActionBar>\n              <CancelButton to={recreateRoute('', {...this.props, stepBack: -1})}>\n                {t('Cancel')}\n              </CancelButton>\n              <Button priority=\"primary\" disabled={loading}>\n                {t('Save Rule')}\n              </Button>\n            </ActionBar>\n          </PanelBody>\n        </Panel>\n      </form>\n    );\n  },\n});\n\nexport {RuleEditor};\n\nexport default withApi(RuleEditor);\n\nconst CancelButton = styled(Button)`\n  margin-right: ${space(1)};\n`;\n\nconst ActionBar = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  padding: ${space(2)};\n  border-top: 1px solid ${p => p.theme.borderLight};\n  margin: 0 -${space(2)} -${space(2)};\n`;\n","import React from 'react';\n\nimport SentryTypes from 'app/sentryTypes';\nimport AsyncView from 'app/views/asyncView';\nimport RuleEditor from 'app/views/settings/projectAlerts/ruleEditor';\n\nclass ProjectAlertRuleDetails extends AsyncView {\n  static contextTypes = {\n    organization: SentryTypes.Organization,\n    project: SentryTypes.Project,\n  };\n\n  getEndpoints() {\n    const {orgId, projectId} = this.props.params;\n\n    return [['configs', `/projects/${orgId}/${projectId}/rules/configuration/`]];\n  }\n\n  renderBody() {\n    const {organization, project} = this.context;\n    const {actions, conditions} = this.state.configs;\n\n    return (\n      <RuleEditor\n        organization={organization}\n        project={project}\n        actions={actions}\n        conditions={conditions}\n        params={this.props.params}\n        routes={this.props.routes}\n      />\n    );\n  }\n}\n\nexport default ProjectAlertRuleDetails;\n"],"sourceRoot":""}