{"version":3,"sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/components/settingsPageHeader.tsx","webpack:///./app/views/settings/components/forms/apiForm.jsx","webpack:///./app/views/settings/components/forms/controls/multipleCheckbox.jsx","webpack:///./app/views/settings/project/serviceHookSettingsForm.jsx","webpack:///./app/views/settings/project/projectServiceHookDetails.jsx"],"names":["getTitle","render","title","this","renderComponent","icon","action","tabs","noTitleStyles","props","TitleAndActions","Icon","Title","styled","Action","propTypes","node","isRequired","bool","defaultProps","Component","p","StyledSettingsPageHeading","SettingsPageHeading","ApiForm","context","onSubmit","data","onSuccess","onError","loadingIndicator","IndicatorStore","add","t","api","request","apiEndpoint","method","apiMethod","success","remove","error","Client","clear","otherProps","React","MultipleCheckboxWrapper","Label","CheckboxLabel","MultipleCheckbox","onChange","selectedValue","e","value","target","checked","filter","v","disabled","choices","map","choiceValue","choiceLabel","key","w","type","bind","defined","indexOf","EVENT_CHOICES","ServiceHookSettingsForm","onSubmitSuccess","orgId","projectId","browserHistory","push","initialData","hookId","endpoint","footerStyle","marginTop","paddingRight","submitLabel","name","label","required","help","inline","HookStats","until","Math","floor","Date","getTime","since","params","query","resolution","point","pointIdx","chart","timeLabel","getTimeLabel","total","y","toLocaleString","style","width","className","emptyStats","stats","state","x","ts","description","points","height","barClasses","border","tooltip","renderTooltip","AsyncComponent","ProjectServiceHookDetails","onDelete","duration","hook","isActive","status","flexibleControlStateSize","getDynamicText","secret","fixed","priority","onClick","AsyncView"],"mappings":"0IAQA,2B,+CAgBA,OAbU,iBACR,YAAAA,SAAA,WACE,MAAO,IAGT,YAAAC,OAAA,WACE,IAAMC,EAAQC,KAAKH,WACnB,OACE,kBAAC,IAAa,CAACE,OAAUA,EAAWA,EAAK,MAAQ,IAAE,UAChDC,KAAKC,oBAId,EAhBA,C,QAGU,G,sHCcV,2B,+CAgCA,OAhCkC,iBAchC,YAAAH,OAAA,WACE,IAAM,aAACI,EAAA,EAAAA,KAAMH,EAAA,EAAAA,MAAOI,EAAA,EAAAA,OAAQC,EAAA,EAAAA,KAAMC,EAAA,EAAAA,cAAe,kEACjD,OACE,uCAASC,GACP,kBAACC,EAAe,KACbL,GAAQ,kBAACM,EAAI,KAAEN,GACfH,GACC,kBAACU,EAAK,CAACL,KAAMA,EAAMM,OAAQL,GACzB,kBAAC,IAAW,KAAEN,IAGjBI,GAAU,kBAACQ,EAAM,CAACP,KAAMA,GAAOD,IAGjCC,GAAQ,6BAAMA,KA3Bd,EAAAQ,UAAY,CACjBV,KAAM,IAAUW,KAChBd,MAAO,IAAUc,KAAKC,WACtBX,OAAQ,IAAUU,KAClBT,KAAM,IAAUS,KAEhBR,cAAe,IAAUU,MAGpB,EAAAC,aAAe,CACpBX,eAAe,GAqBnB,EAhCA,CAAkC,IAAMY,WAuClCV,EAAkB,YAAO,MAAV,qBAAG,CAAa,uHAK/BE,EAAQ,YAAO,MAAV,qBAAG,CAAa,8DAA8C,OAKlD,gBACkD,sBALrE,SAAAS,GACA,OAACA,EAAER,QACH,oDAGQ,SAAAQ,GAAK,OAACA,EAAEd,KAAU,YAAM,GAAE,MAAM,YAAM,GAAU,YAAM,GAAjD,QAIXI,EAAO,YAAO,MAAV,qBAAG,CAAa,qEACA,SAAR,YAAM,IAGlBG,EAAS,YAAO,MAAV,qBAAG,CAAa,kCAA0B,OACF,UAAhD,SAAAO,GAAK,OAACA,EAAEd,KAAO,eAAe,YAAM,GAA/B,QAGHe,EAA4B,YAAOC,EAAV,qBAAG,CAA2B,mEAE5D,wCAEwB,SAAR,YAAM,IAGR,O,4OCtFMC,E,YAQnB,WAAYf,EAAOgB,GAAS,0BAC1B,4BAAMhB,EAAOgB,KAQfC,SAAW,SAACC,EAAMC,EAAWC,GAC3B,EAAKpB,MAAMiB,UAAY,EAAKjB,MAAMiB,SAASC,GAC3C,IAAMG,EAAmBC,IAAeC,IAAIC,YAAE,qBAC9C,EAAKC,IAAIC,QAAQ,EAAK1B,MAAM2B,YAAa,CACvCC,OAAQ,EAAK5B,MAAM6B,UACnBX,OACAY,QAAS,WACPR,IAAeS,OAAOV,GACtBF,EAAS,WAAT,cAEFa,MAAO,WACLV,IAAeS,OAAOV,GACtBD,EAAO,WAAP,iBAnBJ,EAAKK,IAAM,IAAIQ,IAFW,E,oEAM1BvC,KAAK+B,IAAIS,U,+BAoBF,MAEmDxC,KAAKM,MAAnBmC,GAFrC,EAEAlB,SAFA,EAEUY,UAFV,EAEqBF,YAFrB,+CAIP,OAAO,kBAAC,IAAD,KAAMV,SAAUvB,KAAKuB,UAAckB,Q,GAtCTC,IAAMzB,WAAtBI,E,0PCAfsB,EAA0BjC,YAAO,MAAV,qBAAGA,CAAH,gCAKvBkC,EAAQlC,YAAO,QAAV,qBAAGA,CAAH,yFAQLmC,EAAgBnC,YAAO,OAAV,qBAAGA,CAAH,oBAIEoC,E,mLAQnBC,SAAW,SAACC,EAAeC,GAAM,MACL,EAAK3C,MAAxB4C,EADwB,EACxBA,MAAOH,EADiB,EACjBA,SAGU,mBAAbA,GAUXA,EANIE,EAAEE,OAAOC,QACAF,EAAQ,GAAH,WAAOA,GAAP,CAAcF,IAAiB,CAACE,GAErCA,EAAMG,QAAO,SAAAC,GAAC,OAAIA,IAAMN,KAGlBC,I,wDAGZ,aAC4BjD,KAAKM,MAAjCiD,EADA,EACAA,SAAUC,EADV,EACUA,QAASN,EADnB,EACmBA,MAE1B,OACE,kBAACP,EAAD,KACGa,EAAQC,KAAI,YAAgC,eAA9BC,EAA8B,KAAjBC,EAAiB,KAC3C,OACE,kBAAC,IAAD,CAAKC,IAAKF,EAAaG,EAAG,CAAC,EAAG,GAAO,EAAI,EAAG,MAC1C,kBAACjB,EAAD,KACE,2BACEkB,KAAK,WACLZ,MAAOQ,EACPX,SAAU,EAAKA,SAASgB,KAAK,EAAML,GACnCH,SAAUA,EACVH,QAASY,YAAQd,KAA0C,IAAhCA,EAAMe,QAAQP,KAE3C,kBAACb,EAAD,KAAgBc,a,GAzCcjB,IAAMzB,WAA/B6B,E,iRCbfoB,EAAgB,CAAC,cAAe,iBAAiBT,KAAI,SAAAR,GAAC,MAAI,CAACA,EAAGA,MAE/CkB,E,mLAQnBC,gBAAkB,WAAM,MACK,EAAK9D,MAAzB+D,EADe,EACfA,MAAOC,EADQ,EACRA,UACdC,iBAAeC,KAAf,oBAAiCH,EAAjC,qBAAmDC,EAAnD,a,wDAGO,MACyCtE,KAAKM,MAA9CmE,EADA,EACAA,YAAaJ,EADb,EACaA,MAAOC,EADpB,EACoBA,UAAWI,EAD/B,EAC+BA,OAEhCC,EAAWD,EAAM,oBACNL,EADM,YACGC,EADH,kBACsBI,EADtB,yBAENL,EAFM,YAEGC,EAFH,WAIvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEnC,UAAWuC,EAAS,MAAQ,OAC5BzC,YAAa0C,EACbF,YAAaA,EACbL,gBAAiBpE,KAAKoE,gBACtBQ,YAAa,CACXC,UAAW,EACXC,aAAc,IAEhBC,YAAaL,EAAS5C,YAAE,gBAAkBA,YAAE,gBAE5C,kBAAC,IAAD,KAAcA,YAAE,uBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAckD,KAAK,WAAWC,MAAOnD,YAAE,YACvC,kBAAC,IAAD,CACEkD,KAAK,MACLC,MAAOnD,YAAE,OACToD,UAAQ,EACRC,KAAMrD,YAAE,wCAEV,kBAAC,IAAD,CACEkD,KAAK,SACLxB,QAASU,EACTe,MAAOnD,YAAE,UACTsD,QAAQ,EACRD,KAAMrD,YAAE,+CAEP,gBAAEoB,EAAF,EAAEA,MAAOH,EAAT,EAASA,SAAT,OACC,kBAAC,IAAD,CACEA,SAAUA,EACVG,MAAOA,EACPM,QAASU,c,GArD0BxB,IAAMzB,WAAtCkD,E,28BCKfkB,E,+IAEF,IAAMC,EAAQC,KAAKC,OAAM,IAAIC,MAAOC,UAAY,KAC1CC,EAAQL,EAAQ,OAFT,EAGsBtF,KAAKM,MAAMsF,OAAvClB,EAHM,EAGNA,OAAQL,EAHF,EAGEA,MAAOC,EAHT,EAGSA,UACtB,MAAO,CACL,CACE,QADF,oBAEeD,EAFf,YAEwBC,EAFxB,kBAE2CI,EAF3C,WAGE,CACEmB,MAAO,CACLF,QACAL,QACAQ,WAAY,W,oCAORC,EAAOC,EAAUC,GAC7B,IAAMC,EAAYD,EAAME,aAAaJ,GAC9BK,EAF6B,IAEpBL,EAAMM,EAFc,MAI9BnD,EAAQ,GAAH,OAAMkD,EAAME,iBAAZ,WAEX,OACE,yBAAKC,MAAO,CAACC,MAAO,UAClB,yBAAKC,UAAU,cAAcP,GAC7B,yBAAKO,UAAU,eAAevD,M,mCAMlC,IAAIwD,GAAa,EACXC,EAAQ3G,KAAK4G,MAAMD,MAAMlD,KAAI,SAAAvC,GAIjC,OAHIA,EAAEkF,QACJM,GAAa,GAER,CACLG,EAAG3F,EAAE4F,GACLT,EAAG,CAACnF,EAAEkF,WAIV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KAActE,YAAE,wCAChB,kBAAC,IAAD,KACI4E,EAWA,kBAAC,IAAD,CACE3G,MAAO+B,YAAE,yCACTiF,YAAajF,YAAE,kDAZjB,kBAAC,IAAD,CACEkF,OAAQL,EACRM,OAAQ,IACRhC,MAAM,SACNiC,WAAY,CAAC,SACbT,UAAU,oBACVF,MAAO,CAACY,OAAQ,QAChBC,QAASpH,KAAKqH,sB,GA1DJC,KAwEHC,E,mLAMnBC,SAAW,WAAM,MACoB,EAAKlH,MAAMsF,OAAvCvB,EADQ,EACRA,MAAOC,EADC,EACDA,UAAWI,EADV,EACUA,OACnB/C,EAAmBC,IAAeC,IAAIC,YAAE,qBAC9C,EAAKC,IAAIC,QAAT,oBAA8BqC,EAA9B,YAAuCC,EAAvC,kBAA0DI,EAA1D,KAAqE,CACnExC,OAAQ,SACRE,QAAS,WACPR,IAAeS,OAAOV,GACtB4C,iBAAeC,KAAf,oBAAiCH,EAAjC,qBAAmDC,EAAnD,aAEFhC,MAAO,WACLV,IAAeS,OAAOV,GACtBC,IAAeC,IACbC,YAAE,mDACF,QACA,CACE2F,SAAU,U,8DApBL,MACsBzH,KAAKM,MAAMsF,OAAvCvB,EADM,EACNA,MAAOC,EADD,EACCA,UAAWI,EADZ,EACYA,OACzB,MAAO,CAAC,CAAC,OAAD,oBAAsBL,EAAtB,YAA+BC,EAA/B,kBAAkDI,EAAlD,S,mCAyBG,MACwB1E,KAAKM,MAAMsF,OAAvCvB,EADI,EACJA,MAAOC,EADH,EACGA,UAAWI,EADd,EACcA,OAClBgD,EAAQ1H,KAAK4G,MAAbc,KACP,OACE,6BACE,kBAAC,IAAD,CAAoB3H,MAAO+B,YAAE,0BAE7B,kBAAC,IAAD,KACE,kBAACuD,EAAD,CAAWO,OAAQ5F,KAAKM,MAAMsF,UAGhC,kBAAC,IAAD,OACM5F,KAAKM,MADX,CAEE+D,MAAOA,EACPC,UAAWA,EACXI,OAAQA,EACRD,YAAW,KACNiD,EADM,CAETC,SAA0B,aAAhBD,EAAKE,YAGnB,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAc9F,YAAE,qBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYgC,KAAK,OAAO5D,KAAK,2BAA7B,wBACuB,yDADvB,sBAC+E,IAC7E,mEAFF,sGAKA,kBAAC,IAAD,CACE+E,MAAOnD,YAAE,UACT+F,0BAAwB,EACxBzC,QAAQ,EACRD,KAAMrD,YAAE,iEAER,kBAAC,IAAD,KACGgG,YAAe,CACd5E,MAAOwE,EAAKK,OACZC,MAAO,+BAMjB,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAclG,YAAE,gBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEmD,MAAOnD,YAAE,eACTqD,KAAMrD,YAAE,mDAER,6BACE,kBAAC,IAAD,CAAQmG,SAAS,SAASC,QAASlI,KAAKwH,UAAxC,wB,GAhFuCW","file":"ProjectServiceHookDetails.js","sourcesContent":["import DocumentTitle from 'react-document-title';\nimport React from 'react';\n\nimport AsyncComponent from 'app/components/asyncComponent';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    const title = this.getTitle();\n    return (\n      <DocumentTitle title={`${title ? `${title} - ` : ''}Sentry`}>\n        {this.renderComponent()}\n      </DocumentTitle>\n    );\n  }\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport space from 'app/styles/space';\nimport {HeaderTitle} from 'app/styles/organization';\n\ntype Props = {\n  // The title\n  title: React.ReactNode;\n\n  // Disables font styles in the title. Allows for more custom titles.\n  noTitleStyles?: boolean;\n\n  className?: string;\n\n  // Icon left of title\n  icon?: React.ReactNode;\n\n  // Actions on opposite end of title bar from the title\n  action?: React.ReactNode;\n\n  tabs?: React.ReactNode;\n};\n\nclass SettingsPageHeading extends React.Component<Props> {\n  static propTypes = {\n    icon: PropTypes.node,\n    title: PropTypes.node.isRequired,\n    action: PropTypes.node,\n    tabs: PropTypes.node,\n    // Disables font styles in the title. Allows for more custom titles.\n    noTitleStyles: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    noTitleStyles: false,\n  };\n\n  render() {\n    const {icon, title, action, tabs, noTitleStyles, ...props} = this.props;\n    return (\n      <div {...props}>\n        <TitleAndActions>\n          {icon && <Icon>{icon}</Icon>}\n          {title && (\n            <Title tabs={tabs} styled={noTitleStyles}>\n              <HeaderTitle>{title}</HeaderTitle>\n            </Title>\n          )}\n          {action && <Action tabs={tabs}>{action}</Action>}\n        </TitleAndActions>\n\n        {tabs && <div>{tabs}</div>}\n      </div>\n    );\n  }\n}\n\ntype TitleProps = {\n  styled?: boolean;\n  tabs?: React.ReactNode;\n};\n\nconst TitleAndActions = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst Title = styled('div')<TitleProps & React.HTMLProps<HTMLDivElement>>`\n  ${p =>\n    !p.styled &&\n    `\n    font-size: 20px;\n    font-weight: bold;`};\n  margin: ${p => (p.tabs ? `${space(4)} 0 ${space(2)}` : `${space(4)} 0`)};\n  flex: 1;\n`;\n\nconst Icon = styled('div')`\n  margin-right: ${space(1)};\n`;\n\nconst Action = styled('div')<{tabs?: React.ReactNode}>`\n  ${p => (p.tabs ? `margin-top: ${space(2)}` : null)};\n`;\n\nconst StyledSettingsPageHeading = styled(SettingsPageHeading)<\n  Omit<React.HTMLProps<HTMLDivElement>, keyof Props> & Props\n>`\n  font-size: 14px;\n  margin-top: -${space(4)};\n`;\n\nexport default StyledSettingsPageHeading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport {Client} from 'app/api';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport Form from 'app/views/settings/components/forms/form';\nimport {t} from 'app/locale';\n\nexport default class ApiForm extends React.Component {\n  static propTypes = {\n    ...Form.propTypes,\n    onSubmit: PropTypes.func,\n    apiMethod: PropTypes.string.isRequired,\n    apiEndpoint: PropTypes.string.isRequired,\n  };\n\n  constructor(props, context) {\n    super(props, context);\n    this.api = new Client();\n  }\n\n  componentWillUnmount() {\n    this.api.clear();\n  }\n\n  onSubmit = (data, onSuccess, onError) => {\n    this.props.onSubmit && this.props.onSubmit(data);\n    const loadingIndicator = IndicatorStore.add(t('Saving changes..'));\n    this.api.request(this.props.apiEndpoint, {\n      method: this.props.apiMethod,\n      data,\n      success: (...args) => {\n        IndicatorStore.remove(loadingIndicator);\n        onSuccess(...args);\n      },\n      error: (...args) => {\n        IndicatorStore.remove(loadingIndicator);\n        onError(...args);\n      },\n    });\n  };\n\n  render() {\n    // eslint-disable-next-line no-unused-vars\n    const {onSubmit, apiMethod, apiEndpoint, ...otherProps} = this.props;\n\n    return <Form onSubmit={this.onSubmit} {...otherProps} />;\n  }\n}\n","import {Box} from 'grid-emotion';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'react-emotion';\n\nimport {defined} from 'app/utils';\n\nconst MultipleCheckboxWrapper = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Label = styled('label')`\n  font-weight: normal;\n  white-space: nowrap;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  width: 20%;\n`;\n\nconst CheckboxLabel = styled('span')`\n  margin-left: 3px;\n`;\n\nexport default class MultipleCheckbox extends React.Component {\n  static propTypes = {\n    value: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number])),\n    onChange: PropTypes.func,\n    disabled: PropTypes.bool,\n    choices: PropTypes.array.isRequired,\n  };\n\n  onChange = (selectedValue, e) => {\n    const {value, onChange} = this.props;\n    let newValue;\n\n    if (typeof onChange !== 'function') {\n      return;\n    }\n\n    if (e.target.checked) {\n      newValue = value ? [...value, selectedValue] : [value];\n    } else {\n      newValue = value.filter(v => v !== selectedValue);\n    }\n\n    onChange(newValue, e);\n  };\n\n  render() {\n    const {disabled, choices, value} = this.props;\n\n    return (\n      <MultipleCheckboxWrapper>\n        {choices.map(([choiceValue, choiceLabel]) => {\n          return (\n            <Box key={choiceValue} w={[1, 1 / 2, 1 / 3, 1 / 4]}>\n              <Label>\n                <input\n                  type=\"checkbox\"\n                  value={choiceValue}\n                  onChange={this.onChange.bind(this, choiceValue)}\n                  disabled={disabled}\n                  checked={defined(value) && value.indexOf(choiceValue) !== -1}\n                />\n                <CheckboxLabel>{choiceLabel}</CheckboxLabel>\n              </Label>\n            </Box>\n          );\n        })}\n      </MultipleCheckboxWrapper>\n    );\n  }\n}\n","import {browserHistory} from 'react-router';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {t} from 'app/locale';\nimport ApiForm from 'app/views/settings/components/forms/apiForm';\nimport BooleanField from 'app/views/settings/components/forms/booleanField';\nimport FormField from 'app/views/settings/components/forms/formField';\nimport TextField from 'app/views/settings/components/forms/textField';\nimport MultipleCheckbox from 'app/views/settings/components/forms/controls/multipleCheckbox';\nimport {Panel, PanelBody, PanelHeader} from 'app/components/panels';\n\nconst EVENT_CHOICES = ['event.alert', 'event.created'].map(e => [e, e]);\n\nexport default class ServiceHookSettingsForm extends React.Component {\n  static propTypes = {\n    orgId: PropTypes.string.isRequired,\n    projectId: PropTypes.string.isRequired,\n    hookId: PropTypes.string,\n    initialData: PropTypes.object.isRequired,\n  };\n\n  onSubmitSuccess = () => {\n    const {orgId, projectId} = this.props;\n    browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n  };\n\n  render() {\n    const {initialData, orgId, projectId, hookId} = this.props;\n\n    const endpoint = hookId\n      ? `/projects/${orgId}/${projectId}/hooks/${hookId}/`\n      : `/projects/${orgId}/${projectId}/hooks/`;\n\n    return (\n      <Panel>\n        <ApiForm\n          apiMethod={hookId ? 'PUT' : 'POST'}\n          apiEndpoint={endpoint}\n          initialData={initialData}\n          onSubmitSuccess={this.onSubmitSuccess}\n          footerStyle={{\n            marginTop: 0,\n            paddingRight: 20,\n          }}\n          submitLabel={hookId ? t('Save Changes') : t('Create Hook')}\n        >\n          <PanelHeader>{t('Hook Configuration')}</PanelHeader>\n          <PanelBody>\n            <BooleanField name=\"isActive\" label={t('Active')} />\n            <TextField\n              name=\"url\"\n              label={t('URL')}\n              required\n              help={t('The URL which will receive events.')}\n            />\n            <FormField\n              name=\"events\"\n              choices={EVENT_CHOICES}\n              label={t('Events')}\n              inline={false}\n              help={t('The event types you wish to subscribe to.')}\n            >\n              {({value, onChange}) => (\n                <MultipleCheckbox\n                  onChange={onChange}\n                  value={value}\n                  choices={EVENT_CHOICES}\n                />\n              )}\n            </FormField>\n          </PanelBody>\n        </ApiForm>\n      </Panel>\n    );\n  }\n}\n","import {browserHistory} from 'react-router';\nimport React from 'react';\n\nimport {t} from 'app/locale';\nimport AsyncComponent from 'app/components/asyncComponent';\nimport AsyncView from 'app/views/asyncView';\nimport {Panel, PanelAlert, PanelBody, PanelHeader} from 'app/components/panels';\nimport Button from 'app/components/button';\nimport EmptyMessage from 'app/views/settings/components/emptyMessage';\nimport ErrorBoundary from 'app/components/errorBoundary';\nimport Field from 'app/views/settings/components/forms/field';\nimport getDynamicText from 'app/utils/getDynamicText';\nimport IndicatorStore from 'app/stores/indicatorStore';\nimport SettingsPageHeader from 'app/views/settings/components/settingsPageHeader';\nimport StackedBarChart from 'app/components/stackedBarChart';\nimport TextCopyInput from 'app/views/settings/components/forms/textCopyInput';\n\nimport ServiceHookSettingsForm from 'app/views/settings/project/serviceHookSettingsForm';\n\nclass HookStats extends AsyncComponent {\n  getEndpoints() {\n    const until = Math.floor(new Date().getTime() / 1000);\n    const since = until - 3600 * 24 * 30;\n    const {hookId, orgId, projectId} = this.props.params;\n    return [\n      [\n        'stats',\n        `/projects/${orgId}/${projectId}/hooks/${hookId}/stats/`,\n        {\n          query: {\n            since,\n            until,\n            resolution: '1d',\n          },\n        },\n      ],\n    ];\n  }\n\n  renderTooltip(point, pointIdx, chart) {\n    const timeLabel = chart.getTimeLabel(point);\n    const [total] = point.y;\n\n    const value = `${total.toLocaleString()} events`;\n\n    return (\n      <div style={{width: '150px'}}>\n        <div className=\"time-label\">{timeLabel}</div>\n        <div className=\"value-label\">{value}</div>\n      </div>\n    );\n  }\n\n  renderBody() {\n    let emptyStats = true;\n    const stats = this.state.stats.map(p => {\n      if (p.total) {\n        emptyStats = false;\n      }\n      return {\n        x: p.ts,\n        y: [p.total],\n      };\n    });\n\n    return (\n      <Panel>\n        <PanelHeader>{t('Events in the last 30 days (by day)')}</PanelHeader>\n        <PanelBody>\n          {!emptyStats ? (\n            <StackedBarChart\n              points={stats}\n              height={150}\n              label=\"events\"\n              barClasses={['total']}\n              className=\"standard-barchart\"\n              style={{border: 'none'}}\n              tooltip={this.renderTooltip}\n            />\n          ) : (\n            <EmptyMessage\n              title={t('Nothing recorded in the last 30 days.')}\n              description={t('Total webhooks fired for this configuration.')}\n            />\n          )}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default class ProjectServiceHookDetails extends AsyncView {\n  getEndpoints() {\n    const {orgId, projectId, hookId} = this.props.params;\n    return [['hook', `/projects/${orgId}/${projectId}/hooks/${hookId}/`]];\n  }\n\n  onDelete = () => {\n    const {orgId, projectId, hookId} = this.props.params;\n    const loadingIndicator = IndicatorStore.add(t('Saving changes..'));\n    this.api.request(`/projects/${orgId}/${projectId}/hooks/${hookId}/`, {\n      method: 'DELETE',\n      success: () => {\n        IndicatorStore.remove(loadingIndicator);\n        browserHistory.push(`/settings/${orgId}/projects/${projectId}/hooks/`);\n      },\n      error: () => {\n        IndicatorStore.remove(loadingIndicator);\n        IndicatorStore.add(\n          t('Unable to remove application. Please try again.'),\n          'error',\n          {\n            duration: 3000,\n          }\n        );\n      },\n    });\n  };\n\n  renderBody() {\n    const {orgId, projectId, hookId} = this.props.params;\n    const {hook} = this.state;\n    return (\n      <div>\n        <SettingsPageHeader title={t('Service Hook Details')} />\n\n        <ErrorBoundary>\n          <HookStats params={this.props.params} />\n        </ErrorBoundary>\n\n        <ServiceHookSettingsForm\n          {...this.props}\n          orgId={orgId}\n          projectId={projectId}\n          hookId={hookId}\n          initialData={{\n            ...hook,\n            isActive: hook.status !== 'disabled',\n          }}\n        />\n        <Panel>\n          <PanelHeader>{t('Event Validation')}</PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\" icon=\"icon-circle-exclamation\">\n              Sentry will send the <code>X-ServiceHook-Signature</code> header built using{' '}\n              <code>HMAC(SHA256, [secret], [payload])</code>. You should always verify\n              this signature before trusting the information provided in the webhook.\n            </PanelAlert>\n            <Field\n              label={t('Secret')}\n              flexibleControlStateSize\n              inline={false}\n              help={t('The shared secret used for generating event HMAC signatures.')}\n            >\n              <TextCopyInput>\n                {getDynamicText({\n                  value: hook.secret,\n                  fixed: 'a dynamic secret value',\n                })}\n              </TextCopyInput>\n            </Field>\n          </PanelBody>\n        </Panel>\n        <Panel>\n          <PanelHeader>{t('Delete Hook')}</PanelHeader>\n          <PanelBody>\n            <Field\n              label={t('Delete Hook')}\n              help={t('Removing this hook is immediate and permanent.')}\n            >\n              <div>\n                <Button priority=\"danger\" onClick={this.onDelete}>\n                  Delete Hook\n                </Button>\n              </div>\n            </Field>\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}