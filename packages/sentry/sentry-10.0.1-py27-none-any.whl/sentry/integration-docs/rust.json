{
  "html": "<p>To add Sentry to your Rust project you just need to add a new dependency to your <code class=\"highlighter-rouge\">Cargo.toml</code>:</p>\n\n<pre class=\"highlight\"><code><span class=\"nn\">[dependencies]</span>\n<span class=\"py\">sentry</span> <span class=\"p\">=</span> <span class=\"s\">\"0.19.0\"</span>\n</code></pre>\n\n      \n\n\n\n\n        <p><code class=\"highlighter-rouge\">sentry.init()</code> will return you a guard that when freed, will prevent process exit until all events have been sent (within a timeout):</p>\n\n<pre class=\"highlight\"><code><span class=\"k\">let</span> <span class=\"mi\">_</span><span class=\"n\">guard</span> <span class=\"o\">=</span> <span class=\"nn\">sentry</span><span class=\"p\">::</span><span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"s\">\"___PUBLIC_DSN___\"</span><span class=\"p\">);</span>\n</code></pre>\n\n      \n\n\n\n        <p>One way to verify your setup is by intentionally sending an event that breaks your application.</p>\n\n<p>The quickest way to verify Sentry in your Rust application is to cause a panic:</p>\n\n<pre class=\"highlight\"><code><span class=\"k\">fn</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n    <span class=\"k\">let</span> <span class=\"mi\">_</span><span class=\"n\">guard</span> <span class=\"o\">=</span> <span class=\"nn\">sentry</span><span class=\"p\">::</span><span class=\"nf\">init</span><span class=\"p\">(</span><span class=\"s\">\"___PUBLIC_DSN___\"</span><span class=\"p\">);</span>\n\n    <span class=\"c\">// Sentry will capture this</span>\n    <span class=\"nd\">panic!</span><span class=\"p\">(</span><span class=\"s\">\"Everything is on fire!\"</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n</code></pre>", 
  "link": "https://docs.sentry.io/error-reporting/quickstart/?platform=rust", 
  "id": "rust", 
  "name": "Rust"
}
