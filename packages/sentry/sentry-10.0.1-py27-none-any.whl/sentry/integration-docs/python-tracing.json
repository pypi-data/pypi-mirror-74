{
  "html": "<p>To manually instrument certain regions of your code, you can create a transaction to capture them.</p>\n\n<p>The following example creates a transaction for a scope that contains an expensive operation (for example, <code class=\"highlighter-rouge\">process_item</code>), and sends the result to Sentry:</p>\n\n<pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">sentry_sdk</span> <span class=\"kn\">import</span> <span class=\"n\">start_transaction</span>\n\n<span class=\"k\">while</span> <span class=\"bp\">True</span><span class=\"p\">:</span>\n  <span class=\"n\">item</span> <span class=\"o\">=</span> <span class=\"n\">get_from_queue</span><span class=\"p\">()</span>\n\n  <span class=\"k\">with</span> <span class=\"n\">start_transaction</span><span class=\"p\">(</span><span class=\"n\">op</span><span class=\"o\">=</span><span class=\"s\">\"task\"</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">item</span><span class=\"p\">.</span><span class=\"n\">get_transaction_name</span><span class=\"p\">()):</span>\n      <span class=\"c1\"># process_item may create more spans internally (see next examples)\n</span>      <span class=\"n\">process_item</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span>\n</code></pre>\n\n<p><strong>Adding More Spans to the Transaction</strong></p>\n\n<p>The next example contains the implementation of the hypothetical <code class=\"highlighter-rouge\">process_item</code> function called from the code snippet in the previous section. Our SDK can determine if there is currently an open transaction and add all newly created spans as child operations to that transaction. Keep in mind that each individual span also needs to be manually finished; otherwise, spans will not show up in the transaction. When using spans and transactions as context managers, they are automatically finished at the end of the <code class=\"highlighter-rouge\">with</code> block.</p>\n\n<p>In cases where you want to attach Spans to an already ongoing Transaction you can use <code class=\"highlighter-rouge\">Hub.current.scope.transaction</code>. This property will return a <code class=\"highlighter-rouge\">Transaction</code> in case there is a running Transaction otherwise it returns <code class=\"highlighter-rouge\">None</code>.</p>\n\n<p>Alternatively, instead of adding to the top-level transaction, you can make a child span of the current span, if there is one. Use <code class=\"highlighter-rouge\">Hub.current.scope.span</code> in that case.</p>\n\n<p>You can choose the value of <code class=\"highlighter-rouge\">op</code> and <code class=\"highlighter-rouge\">description</code>.</p>\n\n<pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">sentry_sdk</span> <span class=\"kn\">import</span> <span class=\"n\">Hub</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">process_item</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">):</span>\n    <span class=\"n\">transaction</span> <span class=\"o\">=</span> <span class=\"n\">Hub</span><span class=\"p\">.</span><span class=\"n\">current</span><span class=\"p\">.</span><span class=\"n\">scope</span><span class=\"p\">.</span><span class=\"n\">transaction</span>\n    <span class=\"c1\"># omitted code...\n</span>    <span class=\"k\">with</span> <span class=\"n\">transaction</span><span class=\"p\">.</span><span class=\"n\">start_child</span><span class=\"p\">(</span><span class=\"n\">op</span><span class=\"o\">=</span><span class=\"s\">\"http\"</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s\">\"GET /\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">span</span><span class=\"p\">:</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">my_custom_http_library</span><span class=\"p\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s\">\"GET\"</span><span class=\"p\">,</span> <span class=\"s\">\"/\"</span><span class=\"p\">)</span>\n        <span class=\"n\">span</span><span class=\"p\">.</span><span class=\"n\">set_tag</span><span class=\"p\">(</span><span class=\"s\">\"http.status_code\"</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">.</span><span class=\"n\">status_code</span><span class=\"p\">)</span>\n        <span class=\"n\">span</span><span class=\"p\">.</span><span class=\"n\">set_data</span><span class=\"p\">(</span><span class=\"s\">\"http.foobarsessionid\"</span><span class=\"p\">,</span> <span class=\"n\">get_foobar_sessionid</span><span class=\"p\">())</span>\n</code></pre>\n\n<p>The alternative to make a tree of spans:</p>\n\n<pre class=\"highlight\"><code><span class=\"kn\">from</span> <span class=\"nn\">sentry_sdk</span> <span class=\"kn\">import</span> <span class=\"n\">Hub</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">process_item</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">):</span>\n    <span class=\"n\">parent_span</span> <span class=\"o\">=</span> <span class=\"n\">Hub</span><span class=\"p\">.</span><span class=\"n\">current</span><span class=\"p\">.</span><span class=\"n\">scope</span><span class=\"p\">.</span><span class=\"n\">span</span>\n    <span class=\"c1\"># omitted code...\n</span>    <span class=\"k\">with</span> <span class=\"n\">parent_span</span><span class=\"p\">.</span><span class=\"n\">start_child</span><span class=\"p\">(</span><span class=\"n\">op</span><span class=\"o\">=</span><span class=\"s\">\"http\"</span><span class=\"p\">,</span> <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s\">\"GET /\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">span</span><span class=\"p\">:</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">my_custom_http_library</span><span class=\"p\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"s\">\"GET\"</span><span class=\"p\">,</span> <span class=\"s\">\"/\"</span><span class=\"p\">)</span>\n        <span class=\"n\">span</span><span class=\"p\">.</span><span class=\"n\">set_tag</span><span class=\"p\">(</span><span class=\"s\">\"http.status_code\"</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">.</span><span class=\"n\">status_code</span><span class=\"p\">)</span>\n        <span class=\"n\">span</span><span class=\"p\">.</span><span class=\"n\">set_data</span><span class=\"p\">(</span><span class=\"s\">\"http.foobarsessionid\"</span><span class=\"p\">,</span> <span class=\"n\">get_foobar_sessionid</span><span class=\"p\">())</span>\n</code></pre>", 
  "link": "https://docs.sentry.io/performance-monitoring/getting-started/?platform=python", 
  "id": "python-tracing", 
  "name": "Python"
}
