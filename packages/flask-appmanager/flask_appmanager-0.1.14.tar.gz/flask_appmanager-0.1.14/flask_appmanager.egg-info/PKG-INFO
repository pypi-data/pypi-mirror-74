Metadata-Version: 2.1
Name: flask-appmanager
Version: 0.1.14
Summary: 一个Flask的后台插件
Home-page: https://gitee.com/toby_lai/flask_appmanager
Author: Lai_Pengtao
Author-email: toby_lai@126.com
License: MIT
Description: 
        # flask_appmanager
        [![star](https://gitee.com/toby_lai/flask_appmanager/badge/star.svg?theme=dark)](https://gitee.com/toby_lai/flask_appmanager/stargazers)[![fork](https://gitee.com/toby_lai/flask_appmanager/badge/fork.svg?theme=dark)](https://gitee.com/toby_lai/flask_appmanager/members)
        #### 介绍
        使用flask做的后台插件，暂时功能很少，欢迎issue或pull request
        
        #### 功能
        【先按照示例代码配置先】
        
        
        > 运行后进入
        > localhost:5000/manager
        输入账号密码admin 12345（还没完全做好登陆系统QWQ，可以[pull request](https://gitee.com/toby_lai/flask_appmanager/pulls)来帮帮忙）
        然后进入后台（界面如下）
        ![后台界面](https://images.gitee.com/uploads/images/2020/0722/224844_c029d383_6580637.png "批注 2020-07-22 151843.png")
        目前的功能：
        1. 查看路由和函数连接关系（概览页面）
        2. 上传文件到静态资源目录
        更多文档：[https://gitee.com/toby_lai/flask_appmanager/wikis](https://gitee.com/toby_lai/flask_appmanager/wikis)
        
         _可以[pull request](https://gitee.com/toby_lai/flask_appmanager/pulls)来提交新功能哦~_ 
        #### 安装教程
        
        ```git
        cd 你的python site-package路径
        git clone https://gitee.com/toby_lai/flask_appmanager.git
        ```
        
        #### 示例代码
        简单几行，即可启动
        ```python
        from flask import *
        from flask_appmanager import *
        app=Flask(__file__,static_folder='static')
        #自己先创建静态目录，并把static_folder参数设置为静态目录名称
        
        app.config['SECRET_KEY'] = '给session设置key，自己修改' #这个key随便设置也行，但不要给别人看
        manage_app(app,'static')#给app添加上后台，第二个参数是静态目录名称   **_> ！最核心语句！_** 
        app.run()#运行
        ```
        [提交issue](https://gitee.com/toby_lai/flask_appmanager/issues) | 
        [新建pull request](https://gitee.com/toby_lai/flask_appmanager/pulls)
Platform: UNKNOWN
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Requires-Python: >=3.6.0
Description-Content-Type: text/markdown
