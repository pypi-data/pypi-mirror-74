dist: bionic
language: python
cache: pip
os: linux

python:
  - 3.6
  - 3.7
  - 3.8

jobs:
  include:
    - python: 3.8
      env: TESTENV=pep8 WAYLAND_VERSION=1.18.0 WAYLAND_PROTOCOLS_VERSION=1.20 WLROOTS_VERSION=0.11.0
    - python: 3.8
      env: TESTENV=mypy WAYLAND_VERSION=1.18.0 WAYLAND_PROTOCOLS_VERSION=1.20 WLROOTS_VERSION=0.11.0

env:
  jobs:
    - WAYLAND_VERSION=1.18.0 WAYLAND_PROTOCOLS_VERSION=1.20 WLROOTS_VERSION=0.11.0
  global:
    - CPATH="${HOME}/wayland/include"
    - LD_LIBRARY_PATH="${HOME}/wayland/lib"
    - LIBRARY_PATH="${HOME}/wayland/lib"
    - PKG_CONFIG_PATH="${HOME}/wayland/share/pkgconfig:${HOME}/wayland/lib/pkgconfig"
    - XDG_RUNTIME_DIR="/tmp"
    - WAYLAND_URL='https://wayland.freedesktop.org/releases/wayland-${WAYLAND_VERSION}.tar.xz'
    - WAYLAND_PROTOCOLS_URL='https://wayland.freedesktop.org/releases/wayland-protocols-${WAYLAND_PROTOCOLS_VERSION}.tar.xz'
    - WLROOTS_URL='https://github.com/swaywm/wlroots/archive/${WLROOTS_VERSION}.tar.gz'

addons:
  apt:
    packages:
    - libdrm-dev
    - libinput-dev
    - libgbm-dev
    - libgles2-mesa-dev
    - libxcb1-dev
    - libxcb-composite0-dev
    - libxcb-icccm4-dev
    - libxcb-image0-dev
    - libxcb-xfixes0-dev
    - libxcb-xinput-dev
    - libxcb-render0-dev
    - libxkbcommon-dev
    - ninja-build

install:
  - WAYLAND_URL=`echo $WAYLAND_URL | envsubst`
  - WAYLAND_PROTOCOLS_URL=`echo $WAYLAND_PROTOCOLS_URL | envsubst`
  - WLROOTS_URL=`echo $WLROOTS_URL | envsubst`
  - wget --no-check-certificate -P wayland_dl $WAYLAND_URL
  - wget --no-check-certificate -P wayland_dl $WAYLAND_PROTOCOLS_URL
  - wget --no-check-certificate -P wayland_dl $WLROOTS_URL
  # build wayland
  - tar -xJf wayland_dl/wayland-${WAYLAND_VERSION}.tar.xz
  - pushd wayland-${WAYLAND_VERSION}
  - ./configure --disable-documentation --prefix=${HOME}/wayland
  - make
  - make install
  - popd
  # build wayland protocols
  - tar -xJf wayland_dl/wayland-protocols-${WAYLAND_PROTOCOLS_VERSION}.tar.xz
  - pushd wayland-protocols-${WAYLAND_PROTOCOLS_VERSION}
  - ./configure --prefix=${HOME}/wayland
  - make
  - make install
  - popd
  # build wlroots
  - pip install meson
  - tar -xzf wayland_dl/${WLROOTS_VERSION}.tar.gz
  - pushd wlroots-${WLROOTS_VERSION}
  - meson build --prefix=${HOME}/wayland  --libdir=lib
  - ninja -C build
  - ninja -C build install
  - popd
  # install necessary packages
  - pip install -r requirements.txt
  - python wlroots/ffi_build.py
  - if [[ $TESTENV == "pep8" ]]; then
      pip install flake8;
    elif [[ $TESTENV == "mypy" ]]; then
      pip install mypy;
    fi

script:
  - if [[ $TESTENV == "pep8" ]]; then
      flake8 wlroots tiny;
    elif [[ $TESTENV == "mypy" ]]; then
      mypy -p wlroots;
      mypy -p tiny;
    else
      pytest -Wall;
    fi

