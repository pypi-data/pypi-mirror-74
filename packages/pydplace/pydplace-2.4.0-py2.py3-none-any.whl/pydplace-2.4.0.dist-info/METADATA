Metadata-Version: 2.1
Name: pydplace
Version: 2.4.0
Summary: programmatic access to D-PLACE/dplace-data
Home-page: https://d-place.org
Author: Robert Forkel
Author-email: forkel@shh.mpg.de
License: Apache 2.0
Keywords: data
Platform: any
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.5
Description-Content-Type: text/markdown
Provides-Extra: dev
Provides-Extra: test
Requires-Dist: attrs (>=19.1)
Requires-Dist: clldutils (>=3.5.0)
Requires-Dist: cldfcatalog
Requires-Dist: csvw (>=1.6)
Requires-Dist: pyglottolog (>=3.0)
Requires-Dist: python-nexus (>=1.63)
Requires-Dist: pycldf (>=1.14)
Requires-Dist: ete3 (>=3.0.0b34)
Provides-Extra: dev
Requires-Dist: flake8; extra == 'dev'
Requires-Dist: wheel; extra == 'dev'
Requires-Dist: twine; extra == 'dev'
Provides-Extra: test
Requires-Dist: mock; extra == 'test'
Requires-Dist: pytest (>=5); extra == 'test'
Requires-Dist: pytest-mock; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Requires-Dist: coverage (>=4.2); extra == 'test'

# pydplace

A Python library to access [D-PLACE](https://d-place.org) data. 

[![Build Status](https://travis-ci.org/D-PLACE/pydplace.svg?branch=master)](https://travis-ci.org/D-PLACE/pydplace)
[![codecov](https://codecov.io/gh/D-PLACE/pydplace/branch/master/graph/badge.svg)](https://codecov.io/gh/D-PLACE/pydplace)
[![PyPI](https://img.shields.io/pypi/v/pydplace.svg)](https://pypi.org/project/pydplace)


To install `pydplace` you need a python installation on your system, running python 2.7 or >3.4. Run

```
pip install pydplace
```

to install the requirements, `pydplace` and the command line interface `dplace`.

`pydplace` is built to access data in a local clone or export of D-PLACE's data repository https://github.com/D-PLACE/dplace-data


## CLI

Command line functionality is implemented via sub-commands of `dplace`. The list of
available sub-commands can be inspected running
```
$ dplace --help
usage: deplace [-h] [--verbosity VERBOSITY] [--log-level LOG_LEVEL]
                 [--repos REPOS]
                 command ...
...

Use 'dplace help <cmd>' to get help about individual commands.
```

## Python API

D-PLACE data can also be accessed programmatically. All functionality is mediated through an instance of `pydplace.api.Repos`, e.g.

```python
>>> from pydplace.api import Repos
>>> api = Repos('.')



