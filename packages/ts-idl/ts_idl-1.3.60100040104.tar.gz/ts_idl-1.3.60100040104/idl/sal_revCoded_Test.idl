// SAL_VERSION=4.1.4 XML_VERSION=6.1.0
module Test {
struct arrays_96004198 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	boolean0[5]; // @Metadata=(Units="unitless",Description="Array of boolean.")
	  octet	byte0[5]; // @Metadata=(Units="unitless",Description="Array of byte.")
	  short	short0[5]; // @Metadata=(Units="unitless",Description="Array of short.")
	  long	int0[5]; // @Metadata=(Units="unitless",Description="Array of int.")
	  long	long0[5]; // @Metadata=(Units="unitless",Description="Array of long.")
	  long long	longLong0[5]; // @Metadata=(Units="unitless",Description="Array of long long.")
	  octet	octet0[5]; // @Metadata=(Units="unitless",Description="Array of octet.")
	  unsigned short	unsignedShort0[5]; // @Metadata=(Units="unitless",Description="Array of unsigned short.")
	  unsigned long	unsignedInt0[5]; // @Metadata=(Units="unitless",Description="Array of unsigned int.")
	  unsigned long	unsignedLong0[5]; // @Metadata=(Units="unitless",Description="Array of unsigned long.")
	  float	float0[5]; // @Metadata=(Units="unitless",Description="Array of float.")
	  double	double0[5]; // @Metadata=(Units="unitless",Description="Array of double.")
	};
#pragma keylist arrays_96004198 TestID
	 const long indexEnumeration_any=1;
struct command_abort_c4c1bdb3 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_abort_c4c1bdb3 TestID
struct command_disable_b8c67bd6 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_disable_b8c67bd6 TestID
struct command_enable_4b9c4788 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_enable_4b9c4788 TestID
struct command_enterControl_a6e7e918 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_enterControl_a6e7e918 TestID
struct command_exitControl_5c977299 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_exitControl_5c977299 TestID
struct command_fault_49fcb180 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	};
#pragma keylist command_fault_49fcb180 TestID
struct command_setArrays_c3a096c5 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	boolean0[5]; // @Metadata=(Units="unitless",Description="Array of boolean.")
	  octet	byte0[5]; // @Metadata=(Units="unitless",Description="Array of byte.")
	  short	short0[5]; // @Metadata=(Units="unitless",Description="Array of short.")
	  long	int0[5]; // @Metadata=(Units="unitless",Description="Array of int.")
	  long	long0[5]; // @Metadata=(Units="unitless",Description="Array of long.")
	  long long	longLong0[5]; // @Metadata=(Units="unitless",Description="Array of long long.")
	  octet	octet0[5]; // @Metadata=(Units="unitless",Description="Array of octet.")
	  unsigned short	unsignedShort0[5]; // @Metadata=(Units="unitless",Description="Array of unsigned short.")
	  unsigned long	unsignedInt0[5]; // @Metadata=(Units="unitless",Description="Array of unsigned int.")
	  unsigned long	unsignedLong0[5]; // @Metadata=(Units="unitless",Description="Array of unsigned long.")
	  float	float0[5]; // @Metadata=(Units="unitless",Description="Array of float.")
	  double	double0[5]; // @Metadata=(Units="unitless",Description="Array of double.")
	};
#pragma keylist command_setArrays_c3a096c5 TestID
struct command_setAuthList_0ad00e93 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	authorizedUsers; // @Metadata=(Units="unitless",Description="Comma seperated list of authorized users currently allowed to command this CSC;")
	  string	nonAuthorizedCSCs; // @Metadata=(Units="unitless",Description="Comma seperated list of CSC's not currently allowed to command this CSC;")
	};
#pragma keylist command_setAuthList_0ad00e93 TestID
struct command_setLogLevel_ddc6cdb9 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	level; // @Metadata=(Units="unitless",Description="Logging level; as a Python logging level: error=40; warning=30; info=20; debug=10.")
	};
#pragma keylist command_setLogLevel_ddc6cdb9 TestID
struct command_setScalars_49ca96ac {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	boolean0; // @Metadata=(Units="unitless",Description="A boolean.")
	  octet	byte0; // @Metadata=(Units="unitless",Description="A byte.")
	  string	char0; // @Metadata=(Units="unitless",Description="A char; which is a synonym for string.")
	  short	short0; // @Metadata=(Units="unitless",Description="A short.")
	  long	int0; // @Metadata=(Units="unitless",Description="An int.")
	  long	long0; // @Metadata=(Units="unitless",Description="A long.")
	  long long	longLong0; // @Metadata=(Units="unitless",Description="A long long.")
	  octet	octet0; // @Metadata=(Units="unitless",Description="A octet.")
	  unsigned short	unsignedShort0; // @Metadata=(Units="unitless",Description="An unsigned short.")
	  unsigned long	unsignedInt0; // @Metadata=(Units="unitless",Description="An unsigned int.")
	  unsigned long	unsignedLong0; // @Metadata=(Units="unitless",Description="An unsigned long.")
	  float	float0; // @Metadata=(Units="unitless",Description="A float.")
	  double	double0; // @Metadata=(Units="unitless",Description="A double.")
	  string<20>	string0; // @Metadata=(Units="unitless",Description="A string.")
	};
#pragma keylist command_setScalars_49ca96ac TestID
struct command_setValue_762eb3df {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	parametersAndValues; // @Metadata=(Units="unitless",Description="List of parameters and their values as a Json string")
	};
#pragma keylist command_setValue_762eb3df TestID
struct command_standby_ae24a93a {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	value; // @Metadata=(Units="unitless",Description="Not used")
	};
#pragma keylist command_standby_ae24a93a TestID
struct command_start_b4b383b2 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	settingsToApply; // @Metadata=(Units="unitless",Description="Name of the selected settings set")
	};
#pragma keylist command_start_b4b383b2 TestID
struct command_wait_72069478 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	ack; // @Metadata=(Units="unitless",Description="Final ack code; typically a SAL__CMD constant.")
	  double	duration; // @Metadata=(Units="second",Description="Desired command duration.")
	};
#pragma keylist command_wait_72069478 TestID
struct logevent_appliedSettingsMatchStart_8f7e2998 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	appliedSettingsMatchStartIsTrue; // @Metadata=(Units="unitless",Description="True when the configuration matches the start conditions")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_appliedSettingsMatchStart_8f7e2998 TestID
struct logevent_arrays_7c134488 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	boolean0[5]; // @Metadata=(Units="unitless",Description="Array of boolean.")
	  octet	byte0[5]; // @Metadata=(Units="unitless",Description="Array of byte.")
	  short	short0[5]; // @Metadata=(Units="unitless",Description="Array of short.")
	  long	int0[5]; // @Metadata=(Units="unitless",Description="Array of int.")
	  long	long0[5]; // @Metadata=(Units="unitless",Description="Array of long.")
	  long long	longLong0[5]; // @Metadata=(Units="unitless",Description="Array of long long.")
	  octet	octet0[5]; // @Metadata=(Units="unitless",Description="Array of octet.")
	  unsigned short	unsignedShort0[5]; // @Metadata=(Units="unitless",Description="Array of unsigned short.")
	  unsigned long	unsignedInt0[5]; // @Metadata=(Units="unitless",Description="Array of unsigned int.")
	  unsigned long	unsignedLong0[5]; // @Metadata=(Units="unitless",Description="Array of unsigned long.")
	  float	float0[5]; // @Metadata=(Units="unitless",Description="Array of float.")
	  double	double0[5]; // @Metadata=(Units="unitless",Description="Array of double.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_arrays_7c134488 TestID
	 const long arrays_Int0ValueEnum_Zero=0;
	 const long arrays_Int0ValueEnum_Two=2;
	 const long arrays_Int0ValueEnum_Four=04;
	 const long arrays_Int0ValueEnum_Five=0x05;
struct logevent_authList_2c48904d {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	authorizedUsers; // @Metadata=(Units="unitless",Description="Comma seperated list of authorized users currently allowed to command this CSC.")
	  string	nonAuthorizedCSCs; // @Metadata=(Units="unitless",Description="Comma seperated list of CSC's not currently allowed to command this CSC.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_authList_2c48904d TestID
struct logevent_errorCode_5b705f39 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	errorCode; // @Metadata=(Units="unitless",Description="A numeric error code")
	  string	errorReport; // @Metadata=(Units="unitless",Description="An string providing detailed information about the error")
	  string	traceback; // @Metadata=(Units="unitless",Description="An optional stack trace of the error condition")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_errorCode_5b705f39 TestID
struct logevent_heartbeat_7474b041 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	heartbeat; // @Metadata=(Units="unitless",Description="Beats the drum.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_heartbeat_7474b041 TestID
struct logevent_logLevel_d0dabf9e {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	level; // @Metadata=(Units="unitless",Description="Current logging level; a Python logging level: error=40; warning=30; info=20; debug=10.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_logLevel_d0dabf9e TestID
struct logevent_logMessage_d259b736 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	name; // @Metadata=(Units="unitless",Description="Log name.")
	  long	level; // @Metadata=(Units="unitless",Description="Message level; a Python logging level: error=40; warning=30; info=20; debug=10.")
	  string	message; // @Metadata=(Units="unitless",Description="Log message.")
	  string	traceback; // @Metadata=(Units="unitless",Description="Exception traceback; "" if not an exception.")
	  string	filePath; // @Metadata=(Units="unitless",Description="Path to source file.")
	  string	functionName; // @Metadata=(Units="unitless",Description="Function or method name.")
	  long	lineNumber; // @Metadata=(Units="unitless",Description="Line number in the file specified by filePath.")
	  long	process; // @Metadata=(Units="unitless",Description="Process ID.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_logMessage_d259b736 TestID
struct logevent_scalars_7e6c6af3 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	boolean0; // @Metadata=(Units="unitless",Description="A boolean.")
	  octet	byte0; // @Metadata=(Units="unitless",Description="A byte.")
	  string	char0; // @Metadata=(Units="unitless",Description="A char; which is a synonym for string.")
	  short	short0; // @Metadata=(Units="unitless",Description="A short.")
	  long	int0; // @Metadata=(Units="unitless",Description="An int.")
	  long	long0; // @Metadata=(Units="unitless",Description="A long.")
	  long long	longLong0; // @Metadata=(Units="unitless",Description="A long long.")
	  octet	octet0; // @Metadata=(Units="unitless",Description="An octet.")
	  unsigned short	unsignedShort0; // @Metadata=(Units="unitless",Description="An unsigned short.")
	  unsigned long	unsignedInt0; // @Metadata=(Units="unitless",Description="An unsigned int.")
	  unsigned long	unsignedLong0; // @Metadata=(Units="unitless",Description="An unsigned long.")
	  float	float0; // @Metadata=(Units="unitless",Description="A float.")
	  double	double0; // @Metadata=(Units="unitless",Description="A double.")
	  string<20>	string0; // @Metadata=(Units="unitless",Description="A string.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_scalars_7e6c6af3 TestID
	 const long scalars_Int0Enum_One=1;
	 const long scalars_Int0Enum_Two=2;
	 const long scalars_Int0Enum_Three=3;
	 const long Test_shared_Enum_One=1;
	 const long Test_shared_Enum_Two=2;
	 const long Test_shared_Enum_Three=3;
	 const long Test_shared_ValueEnum_Zero=0;
	 const long Test_shared_ValueEnum_Two=2;
	 const long Test_shared_ValueEnum_Four=04;
	 const long Test_shared_ValueEnum_Five=0x05;
struct logevent_settingVersions_749a3f91 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string	recommendedSettingsVersion; // @Metadata=(Units="unitless",Description="List of comma seperated recomended versions of settings sets")
	  string	recommendedSettingsLabels; // @Metadata=(Units="unitless",Description="List of comma seperated names of settings sets")
	  string	settingsUrl; // @Metadata=(Units="unitless",Description="The URL where the settings sets definitions can be found")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_settingVersions_749a3f91 TestID
struct logevent_settingsApplied_7ea11940 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<256>	settingsVersion; // @Metadata=(Units="unitless",Description="The SHA or name corresponding to the published configuration")
	  string	otherSettingsEvents; // @Metadata=(Units="unitless",Description="A comma delimited list of other specific CSC configuration events. This may be blank if no other CSC specific events are necessary")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_settingsApplied_7ea11940 TestID
struct logevent_simulationMode_e14d04bc {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	mode; // @Metadata=(Units="unitless",Description="Current simulation mode; 0 for normal operation (no simulation); other supported values are specific to each CSC.")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_simulationMode_e14d04bc TestID
struct logevent_softwareVersions_1d2de05a {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  string<16>	salVersion; // @Metadata=(Units="unitless",Description="This is the current version of SAL generation")
	  string<16>	xmlVersion; // @Metadata=(Units="unitless",Description="This is the current version of CSC XML")
	  string<16>	openSpliceVersion; // @Metadata=(Units="unitless",Description="This is the current version of OpenSplice")
	  string<16>	cscVersion; // @Metadata=(Units="unitless",Description="This is the top-level version of the CSC")
	  string	subsystemVersions; // @Metadata=(Units="unitless",Description="A comma delimited list of key=value pairs relating subsystem name (key) to its version number (value). This may be left blank if there are no subsystems within a CSC")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_softwareVersions_1d2de05a TestID
struct logevent_summaryState_90255bf1 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  long	summaryState; // @Metadata=(Units="unitless",Description="High level state machine state identifier")
	  long	priority; // @Metadata=(Units="unitless",Description="Priority code")
	};
#pragma keylist logevent_summaryState_90255bf1 TestID
struct scalars_7b442c21 {  // @Metadata=(Description="")
	  long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
	  string<8>	private_revCode; //private // @Metadata=(Units="unitless",Description="Revision code of topic")
	  double	private_sndStamp; //private // @Metadata=(Units="second",Description="TAI at sender")
	  double	private_rcvStamp; //private // @Metadata=(Units="second",Description="TAI at receiver")
	  long		private_seqNum; //private // @Metadata=(Units="unitless",Description="Sequence number")
	  long		private_origin; //private // @Metadata=(Units="unitless",Description="PID code of sender")
	  long		private_host; //private // @Metadata=(Units="unitless",Description="IP of sender")
	  boolean	boolean0; // @Metadata=(Units="unitless",Description="A boolean.")
	  octet	byte0; // @Metadata=(Units="unitless",Description="A byte.")
	  string	char0; // @Metadata=(Units="unitless",Description="A char; which is a synonym for string.")
	  short	short0; // @Metadata=(Units="unitless",Description="A short.")
	  long	int0; // @Metadata=(Units="unitless",Description="An int.")
	  long	long0; // @Metadata=(Units="unitless",Description="A long.")
	  long long	longLong0; // @Metadata=(Units="unitless",Description="A long long.")
	  octet	octet0; // @Metadata=(Units="unitless",Description="A octet.")
	  unsigned short	unsignedShort0; // @Metadata=(Units="unitless",Description="An unsigned short.")
	  unsigned long	unsignedInt0; // @Metadata=(Units="unitless",Description="An unsigned int.")
	  unsigned long	unsignedLong0; // @Metadata=(Units="unitless",Description="An unsigned long.")
	  float	float0; // @Metadata=(Units="unitless",Description="A float.")
	  double	double0; // @Metadata=(Units="unitless",Description="A double.")
	  string<20>	string0; // @Metadata=(Units="unitless",Description="A string.")
	};
#pragma keylist scalars_7b442c21 TestID
struct ackcmd_7d51da11 {  // @Metadata=(Description="")
      string<8>	private_revCode;
      double		private_sndStamp;
      double		private_rcvStamp;
      long		private_origin;
      long 		private_host;
      long		private_seqNum;
      long	TestID; // @Metadata=(Description="Index number for CSC with multiple instances")
      long 		ack;
      long 		error;
      string<256>	result;
      long		host;
      long		origin;
      long		cmdtype;
      double		timeout;
	};
#pragma keylist ackcmd_7d51da11 TestID
};

