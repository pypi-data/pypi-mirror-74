# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import organization_pb2 as organization__pb2


class OrganizationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createOrganization = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/createOrganization',
                request_serializer=organization__pb2.CreateOrganizationRequest.SerializeToString,
                response_deserializer=organization__pb2.Organization.FromString,
                )
        self.updateOrganization = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/updateOrganization',
                request_serializer=organization__pb2.UpdateOrganizationRequest.SerializeToString,
                response_deserializer=organization__pb2.Organization.FromString,
                )
        self.getOrganization = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/getOrganization',
                request_serializer=organization__pb2.GetOrganizationRequest.SerializeToString,
                response_deserializer=organization__pb2.Organization.FromString,
                )
        self.getOrganizations = channel.unary_stream(
                '/calixa.domain.organization.OrganizationService/getOrganizations',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=organization__pb2.Organization.FromString,
                )
        self.getPushNotificationConfig = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/getPushNotificationConfig',
                request_serializer=organization__pb2.GetOrganizationRequest.SerializeToString,
                response_deserializer=organization__pb2.PushNotificationConfig.FromString,
                )
        self.setPushNotificationConfig = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/setPushNotificationConfig',
                request_serializer=organization__pb2.SetPushNotificationConfigRequest.SerializeToString,
                response_deserializer=organization__pb2.PushNotificationConfig.FromString,
                )
        self.createOrganizationUser = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/createOrganizationUser',
                request_serializer=organization__pb2.CreateOrganizationUserRequest.SerializeToString,
                response_deserializer=organization__pb2.OrganizationUser.FromString,
                )
        self.updateOrganizationUser = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/updateOrganizationUser',
                request_serializer=organization__pb2.UpdateOrganizationUserRequest.SerializeToString,
                response_deserializer=organization__pb2.OrganizationUser.FromString,
                )
        self.getOrganizationUser = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/getOrganizationUser',
                request_serializer=organization__pb2.GetOrganizationUserRequest.SerializeToString,
                response_deserializer=organization__pb2.OrganizationUser.FromString,
                )
        self.ListOrganizationUsers = channel.unary_stream(
                '/calixa.domain.organization.OrganizationService/ListOrganizationUsers',
                request_serializer=organization__pb2.ListOrganizationUsersRequest.SerializeToString,
                response_deserializer=organization__pb2.OrganizationUser.FromString,
                )
        self.createAccessKey = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/createAccessKey',
                request_serializer=organization__pb2.CreateKeyRequest.SerializeToString,
                response_deserializer=organization__pb2.AccessKey.FromString,
                )
        self.getAccessKeys = channel.unary_stream(
                '/calixa.domain.organization.OrganizationService/getAccessKeys',
                request_serializer=organization__pb2.GetOrganizationRequest.SerializeToString,
                response_deserializer=organization__pb2.AccessKey.FromString,
                )
        self.SendOrganizationUserInvite = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/SendOrganizationUserInvite',
                request_serializer=organization__pb2.SendOrganizationUserInvitesRequest.SerializeToString,
                response_deserializer=organization__pb2.SendOrganizationUserInvitesResponse.FromString,
                )
        self.AcceptOrganizationUserInvite = channel.unary_unary(
                '/calixa.domain.organization.OrganizationService/AcceptOrganizationUserInvite',
                request_serializer=organization__pb2.AcceptOrganizationUserInviteRequest.SerializeToString,
                response_deserializer=organization__pb2.AcceptOrganizationUserInviteResponse.FromString,
                )


class OrganizationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getOrganizations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPushNotificationConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setPushNotificationConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createOrganizationUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateOrganizationUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getOrganizationUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizationUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createAccessKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getAccessKeys(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendOrganizationUserInvite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AcceptOrganizationUserInvite(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrganizationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.createOrganization,
                    request_deserializer=organization__pb2.CreateOrganizationRequest.FromString,
                    response_serializer=organization__pb2.Organization.SerializeToString,
            ),
            'updateOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.updateOrganization,
                    request_deserializer=organization__pb2.UpdateOrganizationRequest.FromString,
                    response_serializer=organization__pb2.Organization.SerializeToString,
            ),
            'getOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.getOrganization,
                    request_deserializer=organization__pb2.GetOrganizationRequest.FromString,
                    response_serializer=organization__pb2.Organization.SerializeToString,
            ),
            'getOrganizations': grpc.unary_stream_rpc_method_handler(
                    servicer.getOrganizations,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=organization__pb2.Organization.SerializeToString,
            ),
            'getPushNotificationConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.getPushNotificationConfig,
                    request_deserializer=organization__pb2.GetOrganizationRequest.FromString,
                    response_serializer=organization__pb2.PushNotificationConfig.SerializeToString,
            ),
            'setPushNotificationConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.setPushNotificationConfig,
                    request_deserializer=organization__pb2.SetPushNotificationConfigRequest.FromString,
                    response_serializer=organization__pb2.PushNotificationConfig.SerializeToString,
            ),
            'createOrganizationUser': grpc.unary_unary_rpc_method_handler(
                    servicer.createOrganizationUser,
                    request_deserializer=organization__pb2.CreateOrganizationUserRequest.FromString,
                    response_serializer=organization__pb2.OrganizationUser.SerializeToString,
            ),
            'updateOrganizationUser': grpc.unary_unary_rpc_method_handler(
                    servicer.updateOrganizationUser,
                    request_deserializer=organization__pb2.UpdateOrganizationUserRequest.FromString,
                    response_serializer=organization__pb2.OrganizationUser.SerializeToString,
            ),
            'getOrganizationUser': grpc.unary_unary_rpc_method_handler(
                    servicer.getOrganizationUser,
                    request_deserializer=organization__pb2.GetOrganizationUserRequest.FromString,
                    response_serializer=organization__pb2.OrganizationUser.SerializeToString,
            ),
            'ListOrganizationUsers': grpc.unary_stream_rpc_method_handler(
                    servicer.ListOrganizationUsers,
                    request_deserializer=organization__pb2.ListOrganizationUsersRequest.FromString,
                    response_serializer=organization__pb2.OrganizationUser.SerializeToString,
            ),
            'createAccessKey': grpc.unary_unary_rpc_method_handler(
                    servicer.createAccessKey,
                    request_deserializer=organization__pb2.CreateKeyRequest.FromString,
                    response_serializer=organization__pb2.AccessKey.SerializeToString,
            ),
            'getAccessKeys': grpc.unary_stream_rpc_method_handler(
                    servicer.getAccessKeys,
                    request_deserializer=organization__pb2.GetOrganizationRequest.FromString,
                    response_serializer=organization__pb2.AccessKey.SerializeToString,
            ),
            'SendOrganizationUserInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.SendOrganizationUserInvite,
                    request_deserializer=organization__pb2.SendOrganizationUserInvitesRequest.FromString,
                    response_serializer=organization__pb2.SendOrganizationUserInvitesResponse.SerializeToString,
            ),
            'AcceptOrganizationUserInvite': grpc.unary_unary_rpc_method_handler(
                    servicer.AcceptOrganizationUserInvite,
                    request_deserializer=organization__pb2.AcceptOrganizationUserInviteRequest.FromString,
                    response_serializer=organization__pb2.AcceptOrganizationUserInviteResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'calixa.domain.organization.OrganizationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrganizationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/createOrganization',
            organization__pb2.CreateOrganizationRequest.SerializeToString,
            organization__pb2.Organization.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/updateOrganization',
            organization__pb2.UpdateOrganizationRequest.SerializeToString,
            organization__pb2.Organization.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/getOrganization',
            organization__pb2.GetOrganizationRequest.SerializeToString,
            organization__pb2.Organization.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getOrganizations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/calixa.domain.organization.OrganizationService/getOrganizations',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            organization__pb2.Organization.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPushNotificationConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/getPushNotificationConfig',
            organization__pb2.GetOrganizationRequest.SerializeToString,
            organization__pb2.PushNotificationConfig.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def setPushNotificationConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/setPushNotificationConfig',
            organization__pb2.SetPushNotificationConfigRequest.SerializeToString,
            organization__pb2.PushNotificationConfig.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createOrganizationUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/createOrganizationUser',
            organization__pb2.CreateOrganizationUserRequest.SerializeToString,
            organization__pb2.OrganizationUser.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def updateOrganizationUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/updateOrganizationUser',
            organization__pb2.UpdateOrganizationUserRequest.SerializeToString,
            organization__pb2.OrganizationUser.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getOrganizationUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/getOrganizationUser',
            organization__pb2.GetOrganizationUserRequest.SerializeToString,
            organization__pb2.OrganizationUser.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizationUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/calixa.domain.organization.OrganizationService/ListOrganizationUsers',
            organization__pb2.ListOrganizationUsersRequest.SerializeToString,
            organization__pb2.OrganizationUser.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def createAccessKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/createAccessKey',
            organization__pb2.CreateKeyRequest.SerializeToString,
            organization__pb2.AccessKey.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getAccessKeys(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/calixa.domain.organization.OrganizationService/getAccessKeys',
            organization__pb2.GetOrganizationRequest.SerializeToString,
            organization__pb2.AccessKey.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendOrganizationUserInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/SendOrganizationUserInvite',
            organization__pb2.SendOrganizationUserInvitesRequest.SerializeToString,
            organization__pb2.SendOrganizationUserInvitesResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AcceptOrganizationUserInvite(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/calixa.domain.organization.OrganizationService/AcceptOrganizationUserInvite',
            organization__pb2.AcceptOrganizationUserInviteRequest.SerializeToString,
            organization__pb2.AcceptOrganizationUserInviteResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
