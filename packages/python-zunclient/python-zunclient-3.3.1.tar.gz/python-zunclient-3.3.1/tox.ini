[tox]
minversion = 2.0
envlist = py35,py27,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command = pip install -U {opts} {packages}
whitelist_externals = bash
                      find
                      rm
setenv =
   VIRTUAL_ENV={envdir}

deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

commands =
  find . -type f -name "*.py[c|o]" -delete
  stestr run {posargs}
  stestr slowest


[testenv:bandit]
basepython = python3
deps = -r{toxinidir}/test-requirements.txt
commands = bandit -r zunclient -x tests -n5 -ll

[testenv:pypy]
basepython = python3
deps = setuptools<3.2
       -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

[testenv:debug]
basepython = python3
commands = oslo_debug_helper -t zunclient/tests {posargs}

[testenv:debug-py27]
basepython = python2.7
commands = oslo_debug_helper -t zunclient/tests {posargs}

[testenv:debug-py34]
basepython = python3.4
commands = oslo_debug_helper -t zunclient/tests {posargs}

[testenv:docs]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -W -b html doc/source doc/build/html

[testenv:pep8]
basepython = python3
commands =
  flake8
  # Run security linter
  bandit -r zunclient -x tests -n5 -ll

[testenv:releasenotes]
basepython = python3
deps =
  -c{env:UPPER_CONSTRAINTS_FILE:https://releases.openstack.org/constraints/upper/stein}
  -r{toxinidir}/requirements.txt
  -r{toxinidir}/doc/requirements.txt
commands =
  sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:venv]
basepython = python3
commands = {posargs}

[testenv:cover]
basepython = python3
setenv =
    {[testenv]setenv}
    PYTHON=coverage run --source zunclient --parallel-mode
commands =
    stestr run {posargs}
    coverage combine
    coverage html -d cover
    coverage xml -o cover/coverage.xml
    coverage report

[flake8]
# E123, E125 skipped as they are invalid PEP-8.

show-source = True
ignore = E123,E125
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build

[hacking]
import_exceptions = zunclient._i18n

[testenv:functional]
commands =
    find . -type f -name "*.py[c|o]" -delete
    stestr run {posargs}
setenv =
  {[testenv]setenv}
  OS_TEST_PATH = ./zunclient/tests/functional/osc/v1
# The OS_CACERT environment variable should be passed to the test
# environments to specify a CA bundle file to use in verifying a
# TLS (https) server certificate.
passenv = OS_*

[testenv:lower-constraints]
basepython = python3
deps =
  -c{toxinidir}/lower-constraints.txt
  -r{toxinidir}/test-requirements.txt
  -r{toxinidir}/requirements.txt
