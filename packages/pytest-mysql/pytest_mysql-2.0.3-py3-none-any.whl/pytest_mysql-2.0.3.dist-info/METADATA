Metadata-Version: 2.1
Name: pytest-mysql
Version: 2.0.3
Summary: MySQL process and client fixtures for pytest
Home-page: https://github.com/ClearcodeHQ/pytest-mysql
Author: Pyziomki, a Clearcode's team
Author-email: notextisting.email@clearcode.cc
Maintainer: Grzegorz Śliwiński
Maintainer-email: g.sliwnski+pypi@clearcode.cc
License: LGPLv3
Keywords: tests py.test pytest fixture mysql
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Web Environment
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Dist: pytest (>=3.0.0)
Requires-Dist: mirakuru (>=2.3.0)
Requires-Dist: port-for
Requires-Dist: mysqlclient
Provides-Extra: tests
Requires-Dist: pytest-cov ; extra == 'tests'
Requires-Dist: pytest-xdist ; extra == 'tests'
Requires-Dist: Mock ; extra == 'tests'

.. image:: https://raw.githubusercontent.com/ClearcodeHQ/pytest-mysql/master/logo.png
    :width: 100px
    :height: 100px

pytest-mysql
============

.. image:: https://img.shields.io/pypi/v/pytest-mysql.svg
    :target: https://pypi.python.org/pypi/pytest-mysql/
    :alt: Latest PyPI version

.. image:: https://img.shields.io/pypi/wheel/pytest-mysql.svg
    :target: https://pypi.python.org/pypi/pytest-mysql/
    :alt: Wheel Status

.. image:: https://img.shields.io/pypi/pyversions/pytest-mysql.svg
    :target: https://pypi.python.org/pypi/pytest-mysql/
    :alt: Supported Python Versions

.. image:: https://img.shields.io/pypi/l/pytest-mysql.svg
    :target: https://pypi.python.org/pypi/pytest-mysql/
    :alt: License

Package status
--------------

.. image:: https://travis-ci.org/ClearcodeHQ/pytest-mysql.svg?branch=v2.0.3
    :target: https://travis-ci.org/ClearcodeHQ/pytest-mysql
    :alt: Tests

.. image:: https://coveralls.io/repos/ClearcodeHQ/pytest-mysql/badge.png?branch=v2.0.3
    :target: https://coveralls.io/r/ClearcodeHQ/pytest-mysql?branch=v2.0.3
    :alt: Coverage Status

.. image:: https://requires.io/github/ClearcodeHQ/pytest-mysql/requirements.svg?tag=v2.0.3
     :target: https://requires.io/github/ClearcodeHQ/pytest-mysql/requirements/?tag=v2.0.3
     :alt: Requirements Status

What is this?
=============

This is a pytest plugin, that enables you to test your code that relies on a running MySQL Database.
It allows you to specify fixtures for MySQL process and client.

.. warning::

    Only MySQL 5.7.6 and up are supported. For older versions, please use pytest-mysql 2.0.3
    Although Pull Request to add back support for older MySQL versions are welcome.

How to use
==========

Plugin contains two fixtures

* **mysql** - it's a client fixture that has functional scope. After each test drops test database from MySQL ensuring repeatability.
* **mysql_proc** - session scoped fixture, that starts MySQL instance at it's first use and stops at the end of the tests.

Simply include one of these fixtures into your tests fixture list.

You can also create additional mysql client and process fixtures if you'd need to:


.. code-block:: python

    from pytest_mysql import factories

    mysql_my_proc = factories.mysql_proc(
        port=None, logsdir='/tmp')
    mysql_my = factories.mysql('mysql_my_proc')

.. note::

    Each MySQL process fixture can be configured in a different way than the others through the fixture factory arguments.

Configuration
=============

You can define your settings in three ways, it's fixture factory argument, command line option and pytest.ini configuration option.
You can pick which you prefer, but remember that these settings are handled in the following order:

    * ``Fixture factory argument``
    * ``Command line option``
    * ``Configuration option in your pytest.ini file``

+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| MySQL option             | Fixture factory argument | Command line option | pytest.ini option | Default                   |
+==========================+==========================+=====================+===================+===========================+
| Path to executable       | mysqld_exec              | --mysql-mysqld      | mysql_mysqld      | mysqld                    |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| Path to safe executable  | mysqld_safe              | --mysql-mysqld-safe | mysql_mysqld_safe | mysqld_safe               |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| Path to mysql_install_db | install_db               | --mysql-install-db  | mysql_install_db  | mysql_install_db          |
| for legacy installations |                          |                     |                   |                           |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| Path to Admin executable | admin_executable         | --mysql-admin       | mysql_admin       | mysqladmin                |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| host                     | host                     | --mysql-host        | mysql_host        | localhost                 |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| port                     | port                     | --mysql-port        | mysql_port        | random                    |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| MySQL user to work with  | user                     | --mysql-user        | mysql_user        | root                      |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| User's password          | passwd                   | --mysql-passwd      | mysql_passwd      |                           |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| Test database name       | dbname                   | --mysql-dbname      | mysqldbname       | test                      |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| Starting parameters      | params                   | --mysql-params      | mysql_params      |                           |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+
| Log directory location   | logsdir                  | --mysql-logsdir     | mysql_logsdir     | $TMPDIR                   |
+--------------------------+--------------------------+---------------------+-------------------+---------------------------+

Example usage:

* pass it as an argument in your own fixture

    .. code-block:: python

        mysql_proc = factories.mysql_proc(
            port=8888)

* use ``--mysql-port`` command line option when you run your tests

    .. code-block::

        py.test tests --mysql-port=8888


* specify your port as ``mysql_port`` in your ``pytest.ini`` file.

    To do so, put a line like the following under the ``[pytest]`` section of your ``pytest.ini``:

    .. code-block:: ini

        [pytest]
        mysql_port = 8888

Running on Docker/as root
=========================

Unfortunately, running MySQL as root (thus by default on docker) is not possible.
MySQL (and MariaDB as well) will not allow it.

.. code-block::

    USER nobody

This line should switch your docker process to run on user nobody. See `this comment for example <https://github.com/ClearcodeHQ/pytest-mysql/issues/62#issuecomment-367975723>`_

Package resources
-----------------

* Bug tracker: https://github.com/ClearcodeHQ/pytest-mysql/issues


CHANGELOG
=========

2.0.3
-------

- [enhancement] Do not assume that mysql executables are in /usr/bin

2.0.2
-------

- [enhancement] Preemptively read data after each test in mysql client fixture.
  This will make test run if the test itself forgot to fetch queried data.
- [enhnacement] Require at least mirakuru 2.3.0 - forced by changed stop method parameters change

2.0.1
-------

- [fix] Improved mysql version detection on osx
- [build] extracted xdist into separate stage on travis
- [build] have deployemt as separate stage on travis

2.0.0
-------

- [Enhancements] Add support for MySQL 5.7.6 and up with new configuration options. Legacy configuration supports older MySQL and MariaDB databases.
- [breaking] mysql_exec ini option replaced with mysql_mysqld_safe
- [breaking] --mysql-exec cmd option replaced with --mysql-mysqld-safe
- [breaking] replaced mysql_init ini option with mysql_install_db
- [breaking] replaced --mysql-init cmd option with --mysql-install-db 
- [breaking] added mysql_mysqld option and --mysql-mysqld cmd option

1.1.1
-------

- [enhancements] removed path.py dependency

1.1.0
-------

- [enhancement] change deprecated getfuncargvalaue to getfixturevalues, require at least pytest 3.0.0

1.0.0
-------

- [enhancements] create command line and pytest.ini configuration options for mysql's log directory location
- [enhancements] create command line and pytest.ini configuration options for mysql's starting parametetrs
- [enhancements] create command line and pytest.ini configuration options for mysql test database name
- [enhancements] create command line and pytest.ini configuration options for mysql's user password
- [enhancements] create command line and pytest.ini configuration options for mysql user
- [enhancements] create command line and pytest.ini configuration options for mysql host
- [enhancements] create command line and pytest.ini configuration options for mysql port
- [enhancements] create command line and pytest.ini configuration options for mysql's init executable
- [enhancements] create command line and pytest.ini configuration options for mysql's admin executable
- [enhancements] create command line and pytest.ini configuration options for mysql executable
- [enhancements] create command line and pytest.ini configuration options for mysql logsdir


