# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkAdditiveGaussianNoiseMeshFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkAdditiveGaussianNoiseMeshFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkAdditiveGaussianNoiseMeshFilterPython
            return _itkAdditiveGaussianNoiseMeshFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkAdditiveGaussianNoiseMeshFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkAdditiveGaussianNoiseMeshFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkAdditiveGaussianNoiseMeshFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkMapContainerPython
import itkPointPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkVectorPython
import itkBoundingBoxPython
import itkVectorContainerPython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkContinuousIndexPython
import itkIndexPython
import itkMeshBasePython
import itkPointSetPython
import itkArrayPython

def itkPointSetD3DTD3_New():
  return itkPointSetD3DTD3.New()


def itkPointSetF3DTF3_New():
  return itkPointSetF3DTF3.New()


def itkPointSetD2DTD2_New():
  return itkPointSetD2DTD2.New()


def itkPointSetF2DTF2_New():
  return itkPointSetF2DTF2.New()


def itkMeshD3DTD3_New():
  return itkMeshD3DTD3.New()


def itkMeshF3DTF3_New():
  return itkMeshF3DTF3.New()


def itkMeshD2DTD2_New():
  return itkMeshD2DTD2.New()


def itkMeshF2DTF2_New():
  return itkMeshF2DTF2.New()


def itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_New():
  return itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.New()


def itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMD3MD3_New():
  return itkAdditiveGaussianNoiseMeshFilterMD3MD3.New()


def itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_New():
  return itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.New()


def itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMF3MF3_New():
  return itkAdditiveGaussianNoiseMeshFilterMF3MF3.New()


def itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_New():
  return itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.New()


def itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMD2MD2_New():
  return itkAdditiveGaussianNoiseMeshFilterMD2MD2.New()


def itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_New():
  return itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.New()


def itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMF2MF2_New():
  return itkAdditiveGaussianNoiseMeshFilterMF2MF2.New()


def itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass.New()


def itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_New():
  return itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass.New()

class itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshD2DTD2 *":
        """
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass self) -> itkMeshD2DTD2
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass self, unsigned int idx) -> itkMeshD2DTD2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshD2DTD2') -> "void":
        """SetOutput(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass self, itkMeshD2DTD2 output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass self, itkDataObject output)
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass.GetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_GetOutput, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass.SetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_SetOutput, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass.GraftOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_GraftOutput, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass.GraftNthOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_GraftNthOutput, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshD2 *":
        """
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass self) -> itkMeshD2
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass self, unsigned int idx) -> itkMeshD2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshD2') -> "void":
        """SetOutput(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass self, itkMeshD2 output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass self, itkDataObject output)
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass.GetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_GetOutput, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass.SetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_SetOutput, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass.GraftOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_GraftOutput, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass.GraftNthOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_GraftNthOutput, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshD3DTD3 *":
        """
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass self) -> itkMeshD3DTD3
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass self, unsigned int idx) -> itkMeshD3DTD3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshD3DTD3') -> "void":
        """SetOutput(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass self, itkMeshD3DTD3 output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass self, itkDataObject output)
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass.GetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_GetOutput, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass.SetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_SetOutput, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass.GraftOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_GraftOutput, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass.GraftNthOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_GraftNthOutput, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshD3 *":
        """
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass self) -> itkMeshD3
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass self, unsigned int idx) -> itkMeshD3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshD3') -> "void":
        """SetOutput(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass self, itkMeshD3 output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass self, itkDataObject output)
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass.GetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_GetOutput, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass.SetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_SetOutput, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass.GraftOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_GraftOutput, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass.GraftNthOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_GraftNthOutput, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshF2DTF2 *":
        """
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass self) -> itkMeshF2DTF2
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass self, unsigned int idx) -> itkMeshF2DTF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshF2DTF2') -> "void":
        """SetOutput(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass self, itkMeshF2DTF2 output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass self, itkDataObject output)
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass.GetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_GetOutput, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass.SetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_SetOutput, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass.GraftOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_GraftOutput, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass.GraftNthOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_GraftNthOutput, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshF2 *":
        """
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass self) -> itkMeshF2
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass self, unsigned int idx) -> itkMeshF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshF2') -> "void":
        """SetOutput(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass self, itkMeshF2 output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass self, itkDataObject output)
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass.GetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_GetOutput, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass.SetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_SetOutput, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass.GraftOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_GraftOutput, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass.GraftNthOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_GraftNthOutput, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshF3DTF3 *":
        """
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass self) -> itkMeshF3DTF3
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass self, unsigned int idx) -> itkMeshF3DTF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshF3DTF3') -> "void":
        """SetOutput(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass self, itkMeshF3DTF3 output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass self, itkDataObject output)
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass.GetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_GetOutput, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass.SetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_SetOutput, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass.GraftOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_GraftOutput, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass.GraftNthOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_GraftNthOutput, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_Clone(self)


    def GetOutput(self, *args) -> "itkMeshF3 *":
        """
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass self) -> itkMeshF3
        GetOutput(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass self, unsigned int idx) -> itkMeshF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_GetOutput(self, *args)


    def SetOutput(self, output: 'itkMeshF3') -> "void":
        """SetOutput(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass self, itkMeshF3 output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_SetOutput(self, output)


    def GraftOutput(self, *args) -> "void":
        """
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass self, itkDataObject output)
        GraftOutput(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass self, std::string const & key, itkDataObject output)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_GraftOutput(self, *args)


    def GraftNthOutput(self, idx: 'unsigned int', output: 'itkDataObject') -> "void":
        """GraftNthOutput(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass self, unsigned int idx, itkDataObject output)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_GraftNthOutput(self, idx, output)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass.GetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_GetOutput, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass.SetOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_SetOutput, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass.GraftOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_GraftOutput, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass.GraftNthOutput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_GraftNthOutput, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass_cast(obj)

class itkPointSetD2DTD2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkPointSetD2DTD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPointSetD2DTD2_Pointer":
        """__New_orig__() -> itkPointSetD2DTD2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPointSetD2DTD2_Pointer":
        """Clone(itkPointSetD2DTD2 self) -> itkPointSetD2DTD2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_Clone(self)


    def GetMaximumNumberOfRegions(self) -> "long":
        """GetMaximumNumberOfRegions(itkPointSetD2DTD2 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetMaximumNumberOfRegions(self)


    def PassStructure(self, inputPointSet: 'itkPointSetD2DTD2') -> "void":
        """PassStructure(itkPointSetD2DTD2 self, itkPointSetD2DTD2 inputPointSet)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_PassStructure(self, inputPointSet)


    def GetNumberOfPoints(self) -> "unsigned long":
        """GetNumberOfPoints(itkPointSetD2DTD2 self) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetNumberOfPoints(self)


    def SetPoints(self, arg0: 'itkMapContainerULPF2') -> "void":
        """SetPoints(itkPointSetD2DTD2 self, itkMapContainerULPF2 arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetPoints(self, arg0)


    def GetPoints(self, *args) -> "itkMapContainerULPF2 const *":
        """
        GetPoints(itkPointSetD2DTD2 self) -> itkMapContainerULPF2
        GetPoints(itkPointSetD2DTD2 self) -> itkMapContainerULPF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetPoints(self, *args)


    def SetPoint(self, arg0: 'unsigned long', arg1: 'itkPointF2') -> "void":
        """SetPoint(itkPointSetD2DTD2 self, unsigned long arg0, itkPointF2 arg1)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetPoint(self, arg0, arg1)


    def GetPoint(self, *args) -> "itkPointF2":
        """
        GetPoint(itkPointSetD2DTD2 self, unsigned long arg0, itkPointF2 arg1) -> bool
        GetPoint(itkPointSetD2DTD2 self, unsigned long arg0) -> itkPointF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetPoint(self, *args)


    def SetPointData(self, *args) -> "void":
        """
        SetPointData(itkPointSetD2DTD2 self, itkMapContainerULD arg0)
        SetPointData(itkPointSetD2DTD2 self, unsigned long arg0, double arg1)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetPointData(self, *args)


    def GetPointData(self, *args) -> "bool":
        """
        GetPointData(itkPointSetD2DTD2 self) -> itkMapContainerULD
        GetPointData(itkPointSetD2DTD2 self) -> itkMapContainerULD
        GetPointData(itkPointSetD2DTD2 self, unsigned long arg0, double * arg1) -> bool
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetPointData(self, *args)


    def SetRequestedRegion(self, *args) -> "void":
        """
        SetRequestedRegion(itkPointSetD2DTD2 self, itkDataObject data)
        SetRequestedRegion(itkPointSetD2DTD2 self, long const & region)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetRequestedRegion(self, *args)


    def GetRequestedRegion(self) -> "long":
        """GetRequestedRegion(itkPointSetD2DTD2 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetRequestedRegion(self)


    def SetBufferedRegion(self, region: 'long const &') -> "void":
        """SetBufferedRegion(itkPointSetD2DTD2 self, long const & region)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetBufferedRegion(self, region)


    def GetBufferedRegion(self) -> "long":
        """GetBufferedRegion(itkPointSetD2DTD2 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetBufferedRegion(self)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkPointSetD2DTD2

    def cast(obj: 'itkLightObject') -> "itkPointSetD2DTD2 *":
        """cast(itkLightObject obj) -> itkPointSetD2DTD2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPointSetD2DTD2

        Create a new object of the class itkPointSetD2DTD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointSetD2DTD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPointSetD2DTD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPointSetD2DTD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPointSetD2DTD2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_Clone, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.GetMaximumNumberOfRegions = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetMaximumNumberOfRegions, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.PassStructure = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_PassStructure, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.GetNumberOfPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetNumberOfPoints, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.SetPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetPoints, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.GetPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetPoints, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.SetPoint = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetPoint, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.GetPoint = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetPoint, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.SetPointData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetPointData, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.GetPointData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetPointData, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.SetRequestedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetRequestedRegion, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.GetRequestedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetRequestedRegion, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.SetBufferedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_SetBufferedRegion, None, itkPointSetD2DTD2)
itkPointSetD2DTD2.GetBufferedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_GetBufferedRegion, None, itkPointSetD2DTD2)
itkPointSetD2DTD2_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_swigregister
itkPointSetD2DTD2_swigregister(itkPointSetD2DTD2)

def itkPointSetD2DTD2___New_orig__() -> "itkPointSetD2DTD2_Pointer":
    """itkPointSetD2DTD2___New_orig__() -> itkPointSetD2DTD2_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2___New_orig__()

def itkPointSetD2DTD2_cast(obj: 'itkLightObject') -> "itkPointSetD2DTD2 *":
    """itkPointSetD2DTD2_cast(itkLightObject obj) -> itkPointSetD2DTD2"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD2DTD2_cast(obj)

class itkPointSetD3DTD3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkPointSetD3DTD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPointSetD3DTD3_Pointer":
        """__New_orig__() -> itkPointSetD3DTD3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPointSetD3DTD3_Pointer":
        """Clone(itkPointSetD3DTD3 self) -> itkPointSetD3DTD3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_Clone(self)


    def GetMaximumNumberOfRegions(self) -> "long":
        """GetMaximumNumberOfRegions(itkPointSetD3DTD3 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetMaximumNumberOfRegions(self)


    def PassStructure(self, inputPointSet: 'itkPointSetD3DTD3') -> "void":
        """PassStructure(itkPointSetD3DTD3 self, itkPointSetD3DTD3 inputPointSet)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_PassStructure(self, inputPointSet)


    def GetNumberOfPoints(self) -> "unsigned long":
        """GetNumberOfPoints(itkPointSetD3DTD3 self) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetNumberOfPoints(self)


    def SetPoints(self, arg0: 'itkMapContainerULPF3') -> "void":
        """SetPoints(itkPointSetD3DTD3 self, itkMapContainerULPF3 arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetPoints(self, arg0)


    def GetPoints(self, *args) -> "itkMapContainerULPF3 const *":
        """
        GetPoints(itkPointSetD3DTD3 self) -> itkMapContainerULPF3
        GetPoints(itkPointSetD3DTD3 self) -> itkMapContainerULPF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetPoints(self, *args)


    def SetPoint(self, arg0: 'unsigned long', arg1: 'itkPointF3') -> "void":
        """SetPoint(itkPointSetD3DTD3 self, unsigned long arg0, itkPointF3 arg1)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetPoint(self, arg0, arg1)


    def GetPoint(self, *args) -> "itkPointF3":
        """
        GetPoint(itkPointSetD3DTD3 self, unsigned long arg0, itkPointF3 arg1) -> bool
        GetPoint(itkPointSetD3DTD3 self, unsigned long arg0) -> itkPointF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetPoint(self, *args)


    def SetPointData(self, *args) -> "void":
        """
        SetPointData(itkPointSetD3DTD3 self, itkMapContainerULD arg0)
        SetPointData(itkPointSetD3DTD3 self, unsigned long arg0, double arg1)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetPointData(self, *args)


    def GetPointData(self, *args) -> "bool":
        """
        GetPointData(itkPointSetD3DTD3 self) -> itkMapContainerULD
        GetPointData(itkPointSetD3DTD3 self) -> itkMapContainerULD
        GetPointData(itkPointSetD3DTD3 self, unsigned long arg0, double * arg1) -> bool
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetPointData(self, *args)


    def SetRequestedRegion(self, *args) -> "void":
        """
        SetRequestedRegion(itkPointSetD3DTD3 self, itkDataObject data)
        SetRequestedRegion(itkPointSetD3DTD3 self, long const & region)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetRequestedRegion(self, *args)


    def GetRequestedRegion(self) -> "long":
        """GetRequestedRegion(itkPointSetD3DTD3 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetRequestedRegion(self)


    def SetBufferedRegion(self, region: 'long const &') -> "void":
        """SetBufferedRegion(itkPointSetD3DTD3 self, long const & region)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetBufferedRegion(self, region)


    def GetBufferedRegion(self) -> "long":
        """GetBufferedRegion(itkPointSetD3DTD3 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetBufferedRegion(self)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkPointSetD3DTD3

    def cast(obj: 'itkLightObject') -> "itkPointSetD3DTD3 *":
        """cast(itkLightObject obj) -> itkPointSetD3DTD3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPointSetD3DTD3

        Create a new object of the class itkPointSetD3DTD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointSetD3DTD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPointSetD3DTD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPointSetD3DTD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPointSetD3DTD3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_Clone, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.GetMaximumNumberOfRegions = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetMaximumNumberOfRegions, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.PassStructure = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_PassStructure, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.GetNumberOfPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetNumberOfPoints, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.SetPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetPoints, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.GetPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetPoints, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.SetPoint = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetPoint, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.GetPoint = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetPoint, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.SetPointData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetPointData, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.GetPointData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetPointData, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.SetRequestedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetRequestedRegion, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.GetRequestedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetRequestedRegion, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.SetBufferedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_SetBufferedRegion, None, itkPointSetD3DTD3)
itkPointSetD3DTD3.GetBufferedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_GetBufferedRegion, None, itkPointSetD3DTD3)
itkPointSetD3DTD3_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_swigregister
itkPointSetD3DTD3_swigregister(itkPointSetD3DTD3)

def itkPointSetD3DTD3___New_orig__() -> "itkPointSetD3DTD3_Pointer":
    """itkPointSetD3DTD3___New_orig__() -> itkPointSetD3DTD3_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3___New_orig__()

def itkPointSetD3DTD3_cast(obj: 'itkLightObject') -> "itkPointSetD3DTD3 *":
    """itkPointSetD3DTD3_cast(itkLightObject obj) -> itkPointSetD3DTD3"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetD3DTD3_cast(obj)

class itkPointSetF2DTF2(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkPointSetF2DTF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPointSetF2DTF2_Pointer":
        """__New_orig__() -> itkPointSetF2DTF2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPointSetF2DTF2_Pointer":
        """Clone(itkPointSetF2DTF2 self) -> itkPointSetF2DTF2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_Clone(self)


    def GetMaximumNumberOfRegions(self) -> "long":
        """GetMaximumNumberOfRegions(itkPointSetF2DTF2 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetMaximumNumberOfRegions(self)


    def PassStructure(self, inputPointSet: 'itkPointSetF2DTF2') -> "void":
        """PassStructure(itkPointSetF2DTF2 self, itkPointSetF2DTF2 inputPointSet)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_PassStructure(self, inputPointSet)


    def GetNumberOfPoints(self) -> "unsigned long":
        """GetNumberOfPoints(itkPointSetF2DTF2 self) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetNumberOfPoints(self)


    def SetPoints(self, arg0: 'itkMapContainerULPF2') -> "void":
        """SetPoints(itkPointSetF2DTF2 self, itkMapContainerULPF2 arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetPoints(self, arg0)


    def GetPoints(self, *args) -> "itkMapContainerULPF2 const *":
        """
        GetPoints(itkPointSetF2DTF2 self) -> itkMapContainerULPF2
        GetPoints(itkPointSetF2DTF2 self) -> itkMapContainerULPF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetPoints(self, *args)


    def SetPoint(self, arg0: 'unsigned long', arg1: 'itkPointF2') -> "void":
        """SetPoint(itkPointSetF2DTF2 self, unsigned long arg0, itkPointF2 arg1)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetPoint(self, arg0, arg1)


    def GetPoint(self, *args) -> "itkPointF2":
        """
        GetPoint(itkPointSetF2DTF2 self, unsigned long arg0, itkPointF2 arg1) -> bool
        GetPoint(itkPointSetF2DTF2 self, unsigned long arg0) -> itkPointF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetPoint(self, *args)


    def SetPointData(self, *args) -> "void":
        """
        SetPointData(itkPointSetF2DTF2 self, itkMapContainerULF arg0)
        SetPointData(itkPointSetF2DTF2 self, unsigned long arg0, float arg1)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetPointData(self, *args)


    def GetPointData(self, *args) -> "bool":
        """
        GetPointData(itkPointSetF2DTF2 self) -> itkMapContainerULF
        GetPointData(itkPointSetF2DTF2 self) -> itkMapContainerULF
        GetPointData(itkPointSetF2DTF2 self, unsigned long arg0, float * arg1) -> bool
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetPointData(self, *args)


    def SetRequestedRegion(self, *args) -> "void":
        """
        SetRequestedRegion(itkPointSetF2DTF2 self, itkDataObject data)
        SetRequestedRegion(itkPointSetF2DTF2 self, long const & region)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetRequestedRegion(self, *args)


    def GetRequestedRegion(self) -> "long":
        """GetRequestedRegion(itkPointSetF2DTF2 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetRequestedRegion(self)


    def SetBufferedRegion(self, region: 'long const &') -> "void":
        """SetBufferedRegion(itkPointSetF2DTF2 self, long const & region)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetBufferedRegion(self, region)


    def GetBufferedRegion(self) -> "long":
        """GetBufferedRegion(itkPointSetF2DTF2 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetBufferedRegion(self)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkPointSetF2DTF2

    def cast(obj: 'itkLightObject') -> "itkPointSetF2DTF2 *":
        """cast(itkLightObject obj) -> itkPointSetF2DTF2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPointSetF2DTF2

        Create a new object of the class itkPointSetF2DTF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointSetF2DTF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPointSetF2DTF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPointSetF2DTF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPointSetF2DTF2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_Clone, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.GetMaximumNumberOfRegions = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetMaximumNumberOfRegions, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.PassStructure = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_PassStructure, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.GetNumberOfPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetNumberOfPoints, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.SetPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetPoints, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.GetPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetPoints, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.SetPoint = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetPoint, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.GetPoint = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetPoint, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.SetPointData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetPointData, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.GetPointData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetPointData, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.SetRequestedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetRequestedRegion, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.GetRequestedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetRequestedRegion, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.SetBufferedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_SetBufferedRegion, None, itkPointSetF2DTF2)
itkPointSetF2DTF2.GetBufferedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_GetBufferedRegion, None, itkPointSetF2DTF2)
itkPointSetF2DTF2_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_swigregister
itkPointSetF2DTF2_swigregister(itkPointSetF2DTF2)

def itkPointSetF2DTF2___New_orig__() -> "itkPointSetF2DTF2_Pointer":
    """itkPointSetF2DTF2___New_orig__() -> itkPointSetF2DTF2_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2___New_orig__()

def itkPointSetF2DTF2_cast(obj: 'itkLightObject') -> "itkPointSetF2DTF2 *":
    """itkPointSetF2DTF2_cast(itkLightObject obj) -> itkPointSetF2DTF2"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF2DTF2_cast(obj)

class itkPointSetF3DTF3(ITKCommonBasePython.itkDataObject):
    """Proxy of C++ itkPointSetF3DTF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPointSetF3DTF3_Pointer":
        """__New_orig__() -> itkPointSetF3DTF3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPointSetF3DTF3_Pointer":
        """Clone(itkPointSetF3DTF3 self) -> itkPointSetF3DTF3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_Clone(self)


    def GetMaximumNumberOfRegions(self) -> "long":
        """GetMaximumNumberOfRegions(itkPointSetF3DTF3 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetMaximumNumberOfRegions(self)


    def PassStructure(self, inputPointSet: 'itkPointSetF3DTF3') -> "void":
        """PassStructure(itkPointSetF3DTF3 self, itkPointSetF3DTF3 inputPointSet)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_PassStructure(self, inputPointSet)


    def GetNumberOfPoints(self) -> "unsigned long":
        """GetNumberOfPoints(itkPointSetF3DTF3 self) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetNumberOfPoints(self)


    def SetPoints(self, arg0: 'itkMapContainerULPF3') -> "void":
        """SetPoints(itkPointSetF3DTF3 self, itkMapContainerULPF3 arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetPoints(self, arg0)


    def GetPoints(self, *args) -> "itkMapContainerULPF3 const *":
        """
        GetPoints(itkPointSetF3DTF3 self) -> itkMapContainerULPF3
        GetPoints(itkPointSetF3DTF3 self) -> itkMapContainerULPF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetPoints(self, *args)


    def SetPoint(self, arg0: 'unsigned long', arg1: 'itkPointF3') -> "void":
        """SetPoint(itkPointSetF3DTF3 self, unsigned long arg0, itkPointF3 arg1)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetPoint(self, arg0, arg1)


    def GetPoint(self, *args) -> "itkPointF3":
        """
        GetPoint(itkPointSetF3DTF3 self, unsigned long arg0, itkPointF3 arg1) -> bool
        GetPoint(itkPointSetF3DTF3 self, unsigned long arg0) -> itkPointF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetPoint(self, *args)


    def SetPointData(self, *args) -> "void":
        """
        SetPointData(itkPointSetF3DTF3 self, itkMapContainerULF arg0)
        SetPointData(itkPointSetF3DTF3 self, unsigned long arg0, float arg1)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetPointData(self, *args)


    def GetPointData(self, *args) -> "bool":
        """
        GetPointData(itkPointSetF3DTF3 self) -> itkMapContainerULF
        GetPointData(itkPointSetF3DTF3 self) -> itkMapContainerULF
        GetPointData(itkPointSetF3DTF3 self, unsigned long arg0, float * arg1) -> bool
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetPointData(self, *args)


    def SetRequestedRegion(self, *args) -> "void":
        """
        SetRequestedRegion(itkPointSetF3DTF3 self, itkDataObject data)
        SetRequestedRegion(itkPointSetF3DTF3 self, long const & region)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetRequestedRegion(self, *args)


    def GetRequestedRegion(self) -> "long":
        """GetRequestedRegion(itkPointSetF3DTF3 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetRequestedRegion(self)


    def SetBufferedRegion(self, region: 'long const &') -> "void":
        """SetBufferedRegion(itkPointSetF3DTF3 self, long const & region)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetBufferedRegion(self, region)


    def GetBufferedRegion(self) -> "long":
        """GetBufferedRegion(itkPointSetF3DTF3 self) -> long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetBufferedRegion(self)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkPointSetF3DTF3

    def cast(obj: 'itkLightObject') -> "itkPointSetF3DTF3 *":
        """cast(itkLightObject obj) -> itkPointSetF3DTF3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkPointSetF3DTF3

        Create a new object of the class itkPointSetF3DTF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointSetF3DTF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPointSetF3DTF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPointSetF3DTF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPointSetF3DTF3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_Clone, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.GetMaximumNumberOfRegions = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetMaximumNumberOfRegions, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.PassStructure = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_PassStructure, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.GetNumberOfPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetNumberOfPoints, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.SetPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetPoints, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.GetPoints = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetPoints, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.SetPoint = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetPoint, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.GetPoint = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetPoint, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.SetPointData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetPointData, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.GetPointData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetPointData, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.SetRequestedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetRequestedRegion, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.GetRequestedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetRequestedRegion, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.SetBufferedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_SetBufferedRegion, None, itkPointSetF3DTF3)
itkPointSetF3DTF3.GetBufferedRegion = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_GetBufferedRegion, None, itkPointSetF3DTF3)
itkPointSetF3DTF3_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_swigregister
itkPointSetF3DTF3_swigregister(itkPointSetF3DTF3)

def itkPointSetF3DTF3___New_orig__() -> "itkPointSetF3DTF3_Pointer":
    """itkPointSetF3DTF3___New_orig__() -> itkPointSetF3DTF3_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3___New_orig__()

def itkPointSetF3DTF3_cast(obj: 'itkLightObject') -> "itkPointSetF3DTF3 *":
    """itkPointSetF3DTF3_cast(itkLightObject obj) -> itkPointSetF3DTF3"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkPointSetF3DTF3_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Clone(self)


    def SetInput(self, input: 'itkMeshD2DTD2') -> "void":
        """SetInput(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass self, itkMeshD2DTD2 input)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshD2DTD2 const *":
        """
        GetInput(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass self) -> itkMeshD2DTD2
        GetInput(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass self, unsigned int idx) -> itkMeshD2DTD2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_GetInput(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass.SetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_SetInput, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass.GetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_GetInput, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Clone(self)


    def SetInput(self, input: 'itkMeshD2') -> "void":
        """SetInput(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass self, itkMeshD2 input)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshD2 const *":
        """
        GetInput(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass self) -> itkMeshD2
        GetInput(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass self, unsigned int idx) -> itkMeshD2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_GetInput(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass.SetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_SetInput, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass.GetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_GetInput, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Clone(self)


    def SetInput(self, input: 'itkMeshD3DTD3') -> "void":
        """SetInput(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass self, itkMeshD3DTD3 input)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshD3DTD3 const *":
        """
        GetInput(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass self) -> itkMeshD3DTD3
        GetInput(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass self, unsigned int idx) -> itkMeshD3DTD3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_GetInput(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass.SetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_SetInput, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass.GetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_GetInput, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Clone(self)


    def SetInput(self, input: 'itkMeshD3') -> "void":
        """SetInput(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass self, itkMeshD3 input)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshD3 const *":
        """
        GetInput(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass self) -> itkMeshD3
        GetInput(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass self, unsigned int idx) -> itkMeshD3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_GetInput(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass.SetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_SetInput, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass.GetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_GetInput, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Clone(self)


    def SetInput(self, input: 'itkMeshF2DTF2') -> "void":
        """SetInput(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass self, itkMeshF2DTF2 input)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshF2DTF2 const *":
        """
        GetInput(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass self) -> itkMeshF2DTF2
        GetInput(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass self, unsigned int idx) -> itkMeshF2DTF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_GetInput(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass.SetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_SetInput, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass.GetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_GetInput, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Clone(self)


    def SetInput(self, input: 'itkMeshF2') -> "void":
        """SetInput(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass self, itkMeshF2 input)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshF2 const *":
        """
        GetInput(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass self) -> itkMeshF2
        GetInput(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass self, unsigned int idx) -> itkMeshF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_GetInput(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass.SetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_SetInput, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass.GetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_GetInput, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Clone(self)


    def SetInput(self, input: 'itkMeshF3DTF3') -> "void":
        """SetInput(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass self, itkMeshF3DTF3 input)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshF3DTF3 const *":
        """
        GetInput(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass self) -> itkMeshF3DTF3
        GetInput(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass self, unsigned int idx) -> itkMeshF3DTF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_GetInput(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass.SetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_SetInput, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass.GetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_GetInput, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass self) -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Clone(self)


    def SetInput(self, input: 'itkMeshF3') -> "void":
        """SetInput(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass self, itkMeshF3 input)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_SetInput(self, input)


    def GetInput(self, *args) -> "itkMeshF3 const *":
        """
        GetInput(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass self) -> itkMeshF3
        GetInput(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass self, unsigned int idx) -> itkMeshF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_GetInput(self, *args)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass.SetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_SetInput, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass.GetInput = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_GetInput, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass)
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_swigregister
itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_swigregister(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass)

def itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass *":
    """itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass_cast(obj)

class itkMeshD2DTD2(itkPointSetD2DTD2):
    """Proxy of C++ itkMeshD2DTD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshD2DTD2_Pointer":
        """__New_orig__() -> itkMeshD2DTD2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshD2DTD2_Pointer":
        """Clone(itkMeshD2DTD2 self) -> itkMeshD2DTD2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_Clone(self)


    def GetNumberOfCells(self) -> "unsigned long":
        """GetNumberOfCells(itkMeshD2DTD2 self) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetNumberOfCells(self)


    def PassStructure(self, inputMesh: 'itkMeshD2DTD2') -> "void":
        """PassStructure(itkMeshD2DTD2 self, itkMeshD2DTD2 inputMesh)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_PassStructure(self, inputMesh)


    def GetBoundingBox(self) -> "itkBoundingBoxUL2FMCULPF2 const *":
        """GetBoundingBox(itkMeshD2DTD2 self) -> itkBoundingBoxUL2FMCULPF2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetBoundingBox(self)


    def SetCellLinks(self, arg0: 'itkMapContainerULSIT') -> "void":
        """SetCellLinks(itkMeshD2DTD2 self, itkMapContainerULSIT arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCellLinks(self, arg0)


    def GetCellLinks(self, *args) -> "itkMapContainerULSIT const *":
        """
        GetCellLinks(itkMeshD2DTD2 self) -> itkMapContainerULSIT
        GetCellLinks(itkMeshD2DTD2 self) -> itkMapContainerULSIT
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellLinks(self, *args)


    def SetCells(self, arg0: 'itkMapContainerULCIDCTI2FFULULULPF2MCULPF2') -> "void":
        """SetCells(itkMeshD2DTD2 self, itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCells(self, arg0)


    def GetCells(self, *args) -> "itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 const *":
        """
        GetCells(itkMeshD2DTD2 self) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2
        GetCells(itkMeshD2DTD2 self) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCells(self, *args)


    def DeleteUnusedCellData(self) -> "void":
        """DeleteUnusedCellData(itkMeshD2DTD2 self)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_DeleteUnusedCellData(self)


    def SetCell(self, arg0: 'unsigned long', arg1: 'itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer') -> "void":
        """SetCell(itkMeshD2DTD2 self, unsigned long arg0, itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer arg1)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCell(self, arg0, arg1)


    def GetCell(self, arg0: 'unsigned long', arg1: 'itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer') -> "bool":
        """GetCell(itkMeshD2DTD2 self, unsigned long arg0, itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer arg1) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCell(self, arg0, arg1)


    def SetCellData(self, *args) -> "void":
        """
        SetCellData(itkMeshD2DTD2 self, itkMapContainerULD arg0)
        SetCellData(itkMeshD2DTD2 self, unsigned long arg0, double arg1)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCellData(self, *args)


    def GetCellData(self, *args) -> "bool":
        """
        GetCellData(itkMeshD2DTD2 self) -> itkMapContainerULD
        GetCellData(itkMeshD2DTD2 self) -> itkMapContainerULD
        GetCellData(itkMeshD2DTD2 self, unsigned long arg0, double * arg1) -> bool
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellData(self, *args)


    def SetBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long', boundaryId: 'unsigned long') -> "void":
        """SetBoundaryAssignment(itkMeshD2DTD2 self, int dimension, unsigned long cellId, unsigned long featureId, unsigned long boundaryId)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)


    def GetBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long', boundaryId: 'unsigned long *') -> "bool":
        """GetBoundaryAssignment(itkMeshD2DTD2 self, int dimension, unsigned long cellId, unsigned long featureId, unsigned long * boundaryId) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)


    def RemoveBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long') -> "bool":
        """RemoveBoundaryAssignment(itkMeshD2DTD2 self, int dimension, unsigned long cellId, unsigned long featureId) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)


    def GetNumberOfCellBoundaryFeatures(self, dimension: 'int', arg1: 'unsigned long') -> "unsigned long":
        """GetNumberOfCellBoundaryFeatures(itkMeshD2DTD2 self, int dimension, unsigned long arg1) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)


    def GetCellBoundaryFeature(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', arg3: 'itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer') -> "bool":
        """GetCellBoundaryFeature(itkMeshD2DTD2 self, int dimension, unsigned long arg1, unsigned long arg2, itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer arg3) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)


    def GetCellBoundaryFeatureNeighbors(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', cellSet: 'setUL') -> "unsigned long":
        """GetCellBoundaryFeatureNeighbors(itkMeshD2DTD2 self, int dimension, unsigned long arg1, unsigned long arg2, setUL cellSet) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)


    def GetCellNeighbors(self, cellId: 'unsigned long', cellSet: 'setUL') -> "unsigned long":
        """GetCellNeighbors(itkMeshD2DTD2 self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellNeighbors(self, cellId, cellSet)


    def GetAssignedCellBoundaryIfOneExists(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', arg3: 'itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer') -> "bool":
        """GetAssignedCellBoundaryIfOneExists(itkMeshD2DTD2 self, int dimension, unsigned long arg1, unsigned long arg2, itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer arg3) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)


    def BuildCellLinks(self) -> "void":
        """BuildCellLinks(itkMeshD2DTD2 self)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_BuildCellLinks(self)


    def Accept(self, mv: 'itkCellInterfaceDCTI2FFULULULPF2MCULPF2::MultiVisitor *') -> "void":
        """Accept(itkMeshD2DTD2 self, itkCellInterfaceDCTI2FFULULULPF2MCULPF2::MultiVisitor * mv)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_Accept(self, mv)


    def SetCellsAllocationMethod(self, _arg: 'itkMeshEnums::MeshClassCellsAllocationMethod const') -> "void":
        """SetCellsAllocationMethod(itkMeshD2DTD2 self, itkMeshEnums::MeshClassCellsAllocationMethod const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCellsAllocationMethod(self, _arg)


    def GetCellsAllocationMethod(self) -> "itkMeshEnums::MeshClassCellsAllocationMethod const &":
        """GetCellsAllocationMethod(itkMeshD2DTD2 self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkMeshD2DTD2

    def cast(obj: 'itkLightObject') -> "itkMeshD2DTD2 *":
        """cast(itkLightObject obj) -> itkMeshD2DTD2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshD2DTD2

        Create a new object of the class itkMeshD2DTD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD2DTD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshD2DTD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshD2DTD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshD2DTD2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_Clone, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetNumberOfCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetNumberOfCells, None, itkMeshD2DTD2)
itkMeshD2DTD2.PassStructure = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_PassStructure, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetBoundingBox = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetBoundingBox, None, itkMeshD2DTD2)
itkMeshD2DTD2.SetCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCellLinks, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellLinks, None, itkMeshD2DTD2)
itkMeshD2DTD2.SetCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCells, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCells, None, itkMeshD2DTD2)
itkMeshD2DTD2.DeleteUnusedCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_DeleteUnusedCellData, None, itkMeshD2DTD2)
itkMeshD2DTD2.SetCell = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCell, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetCell = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCell, None, itkMeshD2DTD2)
itkMeshD2DTD2.SetCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCellData, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellData, None, itkMeshD2DTD2)
itkMeshD2DTD2.SetBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetBoundaryAssignment, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetBoundaryAssignment, None, itkMeshD2DTD2)
itkMeshD2DTD2.RemoveBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_RemoveBoundaryAssignment, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetNumberOfCellBoundaryFeatures, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetCellBoundaryFeature = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellBoundaryFeature, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellBoundaryFeatureNeighbors, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetCellNeighbors = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellNeighbors, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetAssignedCellBoundaryIfOneExists = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetAssignedCellBoundaryIfOneExists, None, itkMeshD2DTD2)
itkMeshD2DTD2.BuildCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_BuildCellLinks, None, itkMeshD2DTD2)
itkMeshD2DTD2.Accept = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_Accept, None, itkMeshD2DTD2)
itkMeshD2DTD2.SetCellsAllocationMethod = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_SetCellsAllocationMethod, None, itkMeshD2DTD2)
itkMeshD2DTD2.GetCellsAllocationMethod = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_GetCellsAllocationMethod, None, itkMeshD2DTD2)
itkMeshD2DTD2_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_swigregister
itkMeshD2DTD2_swigregister(itkMeshD2DTD2)

def itkMeshD2DTD2___New_orig__() -> "itkMeshD2DTD2_Pointer":
    """itkMeshD2DTD2___New_orig__() -> itkMeshD2DTD2_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2___New_orig__()

def itkMeshD2DTD2_cast(obj: 'itkLightObject') -> "itkMeshD2DTD2 *":
    """itkMeshD2DTD2_cast(itkLightObject obj) -> itkMeshD2DTD2"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD2DTD2_cast(obj)

class itkMeshD3DTD3(itkPointSetD3DTD3):
    """Proxy of C++ itkMeshD3DTD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshD3DTD3_Pointer":
        """__New_orig__() -> itkMeshD3DTD3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshD3DTD3_Pointer":
        """Clone(itkMeshD3DTD3 self) -> itkMeshD3DTD3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_Clone(self)


    def GetNumberOfCells(self) -> "unsigned long":
        """GetNumberOfCells(itkMeshD3DTD3 self) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetNumberOfCells(self)


    def PassStructure(self, inputMesh: 'itkMeshD3DTD3') -> "void":
        """PassStructure(itkMeshD3DTD3 self, itkMeshD3DTD3 inputMesh)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_PassStructure(self, inputMesh)


    def GetBoundingBox(self) -> "itkBoundingBoxUL3FMCULPF3 const *":
        """GetBoundingBox(itkMeshD3DTD3 self) -> itkBoundingBoxUL3FMCULPF3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetBoundingBox(self)


    def SetCellLinks(self, arg0: 'itkMapContainerULSIT') -> "void":
        """SetCellLinks(itkMeshD3DTD3 self, itkMapContainerULSIT arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCellLinks(self, arg0)


    def GetCellLinks(self, *args) -> "itkMapContainerULSIT const *":
        """
        GetCellLinks(itkMeshD3DTD3 self) -> itkMapContainerULSIT
        GetCellLinks(itkMeshD3DTD3 self) -> itkMapContainerULSIT
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellLinks(self, *args)


    def SetCells(self, arg0: 'itkMapContainerULCIDCTI3FFULULULPF3MCULPF3') -> "void":
        """SetCells(itkMeshD3DTD3 self, itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCells(self, arg0)


    def GetCells(self, *args) -> "itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 const *":
        """
        GetCells(itkMeshD3DTD3 self) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3
        GetCells(itkMeshD3DTD3 self) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCells(self, *args)


    def DeleteUnusedCellData(self) -> "void":
        """DeleteUnusedCellData(itkMeshD3DTD3 self)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_DeleteUnusedCellData(self)


    def SetCell(self, arg0: 'unsigned long', arg1: 'itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer') -> "void":
        """SetCell(itkMeshD3DTD3 self, unsigned long arg0, itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer arg1)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCell(self, arg0, arg1)


    def GetCell(self, arg0: 'unsigned long', arg1: 'itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer') -> "bool":
        """GetCell(itkMeshD3DTD3 self, unsigned long arg0, itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer arg1) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCell(self, arg0, arg1)


    def SetCellData(self, *args) -> "void":
        """
        SetCellData(itkMeshD3DTD3 self, itkMapContainerULD arg0)
        SetCellData(itkMeshD3DTD3 self, unsigned long arg0, double arg1)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCellData(self, *args)


    def GetCellData(self, *args) -> "bool":
        """
        GetCellData(itkMeshD3DTD3 self) -> itkMapContainerULD
        GetCellData(itkMeshD3DTD3 self) -> itkMapContainerULD
        GetCellData(itkMeshD3DTD3 self, unsigned long arg0, double * arg1) -> bool
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellData(self, *args)


    def SetBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long', boundaryId: 'unsigned long') -> "void":
        """SetBoundaryAssignment(itkMeshD3DTD3 self, int dimension, unsigned long cellId, unsigned long featureId, unsigned long boundaryId)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)


    def GetBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long', boundaryId: 'unsigned long *') -> "bool":
        """GetBoundaryAssignment(itkMeshD3DTD3 self, int dimension, unsigned long cellId, unsigned long featureId, unsigned long * boundaryId) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)


    def RemoveBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long') -> "bool":
        """RemoveBoundaryAssignment(itkMeshD3DTD3 self, int dimension, unsigned long cellId, unsigned long featureId) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)


    def GetNumberOfCellBoundaryFeatures(self, dimension: 'int', arg1: 'unsigned long') -> "unsigned long":
        """GetNumberOfCellBoundaryFeatures(itkMeshD3DTD3 self, int dimension, unsigned long arg1) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)


    def GetCellBoundaryFeature(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', arg3: 'itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer') -> "bool":
        """GetCellBoundaryFeature(itkMeshD3DTD3 self, int dimension, unsigned long arg1, unsigned long arg2, itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer arg3) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)


    def GetCellBoundaryFeatureNeighbors(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', cellSet: 'setUL') -> "unsigned long":
        """GetCellBoundaryFeatureNeighbors(itkMeshD3DTD3 self, int dimension, unsigned long arg1, unsigned long arg2, setUL cellSet) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)


    def GetCellNeighbors(self, cellId: 'unsigned long', cellSet: 'setUL') -> "unsigned long":
        """GetCellNeighbors(itkMeshD3DTD3 self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellNeighbors(self, cellId, cellSet)


    def GetAssignedCellBoundaryIfOneExists(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', arg3: 'itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer') -> "bool":
        """GetAssignedCellBoundaryIfOneExists(itkMeshD3DTD3 self, int dimension, unsigned long arg1, unsigned long arg2, itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer arg3) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)


    def BuildCellLinks(self) -> "void":
        """BuildCellLinks(itkMeshD3DTD3 self)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_BuildCellLinks(self)


    def Accept(self, mv: 'itkCellInterfaceDCTI3FFULULULPF3MCULPF3::MultiVisitor *') -> "void":
        """Accept(itkMeshD3DTD3 self, itkCellInterfaceDCTI3FFULULULPF3MCULPF3::MultiVisitor * mv)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_Accept(self, mv)


    def SetCellsAllocationMethod(self, _arg: 'itkMeshEnums::MeshClassCellsAllocationMethod const') -> "void":
        """SetCellsAllocationMethod(itkMeshD3DTD3 self, itkMeshEnums::MeshClassCellsAllocationMethod const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCellsAllocationMethod(self, _arg)


    def GetCellsAllocationMethod(self) -> "itkMeshEnums::MeshClassCellsAllocationMethod const &":
        """GetCellsAllocationMethod(itkMeshD3DTD3 self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkMeshD3DTD3

    def cast(obj: 'itkLightObject') -> "itkMeshD3DTD3 *":
        """cast(itkLightObject obj) -> itkMeshD3DTD3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshD3DTD3

        Create a new object of the class itkMeshD3DTD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD3DTD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshD3DTD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshD3DTD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshD3DTD3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_Clone, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetNumberOfCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetNumberOfCells, None, itkMeshD3DTD3)
itkMeshD3DTD3.PassStructure = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_PassStructure, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetBoundingBox = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetBoundingBox, None, itkMeshD3DTD3)
itkMeshD3DTD3.SetCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCellLinks, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellLinks, None, itkMeshD3DTD3)
itkMeshD3DTD3.SetCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCells, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCells, None, itkMeshD3DTD3)
itkMeshD3DTD3.DeleteUnusedCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_DeleteUnusedCellData, None, itkMeshD3DTD3)
itkMeshD3DTD3.SetCell = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCell, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetCell = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCell, None, itkMeshD3DTD3)
itkMeshD3DTD3.SetCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCellData, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellData, None, itkMeshD3DTD3)
itkMeshD3DTD3.SetBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetBoundaryAssignment, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetBoundaryAssignment, None, itkMeshD3DTD3)
itkMeshD3DTD3.RemoveBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_RemoveBoundaryAssignment, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetNumberOfCellBoundaryFeatures, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetCellBoundaryFeature = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellBoundaryFeature, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellBoundaryFeatureNeighbors, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetCellNeighbors = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellNeighbors, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetAssignedCellBoundaryIfOneExists = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetAssignedCellBoundaryIfOneExists, None, itkMeshD3DTD3)
itkMeshD3DTD3.BuildCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_BuildCellLinks, None, itkMeshD3DTD3)
itkMeshD3DTD3.Accept = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_Accept, None, itkMeshD3DTD3)
itkMeshD3DTD3.SetCellsAllocationMethod = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_SetCellsAllocationMethod, None, itkMeshD3DTD3)
itkMeshD3DTD3.GetCellsAllocationMethod = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_GetCellsAllocationMethod, None, itkMeshD3DTD3)
itkMeshD3DTD3_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_swigregister
itkMeshD3DTD3_swigregister(itkMeshD3DTD3)

def itkMeshD3DTD3___New_orig__() -> "itkMeshD3DTD3_Pointer":
    """itkMeshD3DTD3___New_orig__() -> itkMeshD3DTD3_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3___New_orig__()

def itkMeshD3DTD3_cast(obj: 'itkLightObject') -> "itkMeshD3DTD3 *":
    """itkMeshD3DTD3_cast(itkLightObject obj) -> itkMeshD3DTD3"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshD3DTD3_cast(obj)

class itkMeshF2DTF2(itkPointSetF2DTF2):
    """Proxy of C++ itkMeshF2DTF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshF2DTF2_Pointer":
        """__New_orig__() -> itkMeshF2DTF2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshF2DTF2_Pointer":
        """Clone(itkMeshF2DTF2 self) -> itkMeshF2DTF2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_Clone(self)


    def GetNumberOfCells(self) -> "unsigned long":
        """GetNumberOfCells(itkMeshF2DTF2 self) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetNumberOfCells(self)


    def PassStructure(self, inputMesh: 'itkMeshF2DTF2') -> "void":
        """PassStructure(itkMeshF2DTF2 self, itkMeshF2DTF2 inputMesh)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_PassStructure(self, inputMesh)


    def GetBoundingBox(self) -> "itkBoundingBoxUL2FMCULPF2 const *":
        """GetBoundingBox(itkMeshF2DTF2 self) -> itkBoundingBoxUL2FMCULPF2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetBoundingBox(self)


    def SetCellLinks(self, arg0: 'itkMapContainerULSIT') -> "void":
        """SetCellLinks(itkMeshF2DTF2 self, itkMapContainerULSIT arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCellLinks(self, arg0)


    def GetCellLinks(self, *args) -> "itkMapContainerULSIT const *":
        """
        GetCellLinks(itkMeshF2DTF2 self) -> itkMapContainerULSIT
        GetCellLinks(itkMeshF2DTF2 self) -> itkMapContainerULSIT
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellLinks(self, *args)


    def SetCells(self, arg0: 'itkMapContainerULCIFCTI2FFULULULPF2MCULPF2') -> "void":
        """SetCells(itkMeshF2DTF2 self, itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCells(self, arg0)


    def GetCells(self, *args) -> "itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 const *":
        """
        GetCells(itkMeshF2DTF2 self) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2
        GetCells(itkMeshF2DTF2 self) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCells(self, *args)


    def DeleteUnusedCellData(self) -> "void":
        """DeleteUnusedCellData(itkMeshF2DTF2 self)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_DeleteUnusedCellData(self)


    def SetCell(self, arg0: 'unsigned long', arg1: 'itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer') -> "void":
        """SetCell(itkMeshF2DTF2 self, unsigned long arg0, itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer arg1)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCell(self, arg0, arg1)


    def GetCell(self, arg0: 'unsigned long', arg1: 'itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer') -> "bool":
        """GetCell(itkMeshF2DTF2 self, unsigned long arg0, itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer arg1) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCell(self, arg0, arg1)


    def SetCellData(self, *args) -> "void":
        """
        SetCellData(itkMeshF2DTF2 self, itkMapContainerULF arg0)
        SetCellData(itkMeshF2DTF2 self, unsigned long arg0, float arg1)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCellData(self, *args)


    def GetCellData(self, *args) -> "bool":
        """
        GetCellData(itkMeshF2DTF2 self) -> itkMapContainerULF
        GetCellData(itkMeshF2DTF2 self) -> itkMapContainerULF
        GetCellData(itkMeshF2DTF2 self, unsigned long arg0, float * arg1) -> bool
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellData(self, *args)


    def SetBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long', boundaryId: 'unsigned long') -> "void":
        """SetBoundaryAssignment(itkMeshF2DTF2 self, int dimension, unsigned long cellId, unsigned long featureId, unsigned long boundaryId)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)


    def GetBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long', boundaryId: 'unsigned long *') -> "bool":
        """GetBoundaryAssignment(itkMeshF2DTF2 self, int dimension, unsigned long cellId, unsigned long featureId, unsigned long * boundaryId) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)


    def RemoveBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long') -> "bool":
        """RemoveBoundaryAssignment(itkMeshF2DTF2 self, int dimension, unsigned long cellId, unsigned long featureId) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)


    def GetNumberOfCellBoundaryFeatures(self, dimension: 'int', arg1: 'unsigned long') -> "unsigned long":
        """GetNumberOfCellBoundaryFeatures(itkMeshF2DTF2 self, int dimension, unsigned long arg1) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)


    def GetCellBoundaryFeature(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', arg3: 'itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer') -> "bool":
        """GetCellBoundaryFeature(itkMeshF2DTF2 self, int dimension, unsigned long arg1, unsigned long arg2, itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer arg3) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)


    def GetCellBoundaryFeatureNeighbors(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', cellSet: 'setUL') -> "unsigned long":
        """GetCellBoundaryFeatureNeighbors(itkMeshF2DTF2 self, int dimension, unsigned long arg1, unsigned long arg2, setUL cellSet) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)


    def GetCellNeighbors(self, cellId: 'unsigned long', cellSet: 'setUL') -> "unsigned long":
        """GetCellNeighbors(itkMeshF2DTF2 self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellNeighbors(self, cellId, cellSet)


    def GetAssignedCellBoundaryIfOneExists(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', arg3: 'itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer') -> "bool":
        """GetAssignedCellBoundaryIfOneExists(itkMeshF2DTF2 self, int dimension, unsigned long arg1, unsigned long arg2, itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer arg3) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)


    def BuildCellLinks(self) -> "void":
        """BuildCellLinks(itkMeshF2DTF2 self)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_BuildCellLinks(self)


    def Accept(self, mv: 'itkCellInterfaceFCTI2FFULULULPF2MCULPF2::MultiVisitor *') -> "void":
        """Accept(itkMeshF2DTF2 self, itkCellInterfaceFCTI2FFULULULPF2MCULPF2::MultiVisitor * mv)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_Accept(self, mv)


    def SetCellsAllocationMethod(self, _arg: 'itkMeshEnums::MeshClassCellsAllocationMethod const') -> "void":
        """SetCellsAllocationMethod(itkMeshF2DTF2 self, itkMeshEnums::MeshClassCellsAllocationMethod const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCellsAllocationMethod(self, _arg)


    def GetCellsAllocationMethod(self) -> "itkMeshEnums::MeshClassCellsAllocationMethod const &":
        """GetCellsAllocationMethod(itkMeshF2DTF2 self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkMeshF2DTF2

    def cast(obj: 'itkLightObject') -> "itkMeshF2DTF2 *":
        """cast(itkLightObject obj) -> itkMeshF2DTF2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshF2DTF2

        Create a new object of the class itkMeshF2DTF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF2DTF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshF2DTF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshF2DTF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshF2DTF2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_Clone, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetNumberOfCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetNumberOfCells, None, itkMeshF2DTF2)
itkMeshF2DTF2.PassStructure = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_PassStructure, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetBoundingBox = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetBoundingBox, None, itkMeshF2DTF2)
itkMeshF2DTF2.SetCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCellLinks, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellLinks, None, itkMeshF2DTF2)
itkMeshF2DTF2.SetCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCells, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCells, None, itkMeshF2DTF2)
itkMeshF2DTF2.DeleteUnusedCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_DeleteUnusedCellData, None, itkMeshF2DTF2)
itkMeshF2DTF2.SetCell = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCell, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetCell = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCell, None, itkMeshF2DTF2)
itkMeshF2DTF2.SetCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCellData, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellData, None, itkMeshF2DTF2)
itkMeshF2DTF2.SetBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetBoundaryAssignment, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetBoundaryAssignment, None, itkMeshF2DTF2)
itkMeshF2DTF2.RemoveBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_RemoveBoundaryAssignment, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetNumberOfCellBoundaryFeatures, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetCellBoundaryFeature = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellBoundaryFeature, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellBoundaryFeatureNeighbors, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetCellNeighbors = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellNeighbors, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetAssignedCellBoundaryIfOneExists = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetAssignedCellBoundaryIfOneExists, None, itkMeshF2DTF2)
itkMeshF2DTF2.BuildCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_BuildCellLinks, None, itkMeshF2DTF2)
itkMeshF2DTF2.Accept = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_Accept, None, itkMeshF2DTF2)
itkMeshF2DTF2.SetCellsAllocationMethod = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_SetCellsAllocationMethod, None, itkMeshF2DTF2)
itkMeshF2DTF2.GetCellsAllocationMethod = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_GetCellsAllocationMethod, None, itkMeshF2DTF2)
itkMeshF2DTF2_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_swigregister
itkMeshF2DTF2_swigregister(itkMeshF2DTF2)

def itkMeshF2DTF2___New_orig__() -> "itkMeshF2DTF2_Pointer":
    """itkMeshF2DTF2___New_orig__() -> itkMeshF2DTF2_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2___New_orig__()

def itkMeshF2DTF2_cast(obj: 'itkLightObject') -> "itkMeshF2DTF2 *":
    """itkMeshF2DTF2_cast(itkLightObject obj) -> itkMeshF2DTF2"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF2DTF2_cast(obj)

class itkMeshF3DTF3(itkPointSetF3DTF3):
    """Proxy of C++ itkMeshF3DTF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMeshF3DTF3_Pointer":
        """__New_orig__() -> itkMeshF3DTF3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMeshF3DTF3_Pointer":
        """Clone(itkMeshF3DTF3 self) -> itkMeshF3DTF3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_Clone(self)


    def GetNumberOfCells(self) -> "unsigned long":
        """GetNumberOfCells(itkMeshF3DTF3 self) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetNumberOfCells(self)


    def PassStructure(self, inputMesh: 'itkMeshF3DTF3') -> "void":
        """PassStructure(itkMeshF3DTF3 self, itkMeshF3DTF3 inputMesh)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_PassStructure(self, inputMesh)


    def GetBoundingBox(self) -> "itkBoundingBoxUL3FMCULPF3 const *":
        """GetBoundingBox(itkMeshF3DTF3 self) -> itkBoundingBoxUL3FMCULPF3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetBoundingBox(self)


    def SetCellLinks(self, arg0: 'itkMapContainerULSIT') -> "void":
        """SetCellLinks(itkMeshF3DTF3 self, itkMapContainerULSIT arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCellLinks(self, arg0)


    def GetCellLinks(self, *args) -> "itkMapContainerULSIT const *":
        """
        GetCellLinks(itkMeshF3DTF3 self) -> itkMapContainerULSIT
        GetCellLinks(itkMeshF3DTF3 self) -> itkMapContainerULSIT
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellLinks(self, *args)


    def SetCells(self, arg0: 'itkMapContainerULCIFCTI3FFULULULPF3MCULPF3') -> "void":
        """SetCells(itkMeshF3DTF3 self, itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 arg0)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCells(self, arg0)


    def GetCells(self, *args) -> "itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 const *":
        """
        GetCells(itkMeshF3DTF3 self) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3
        GetCells(itkMeshF3DTF3 self) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCells(self, *args)


    def DeleteUnusedCellData(self) -> "void":
        """DeleteUnusedCellData(itkMeshF3DTF3 self)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_DeleteUnusedCellData(self)


    def SetCell(self, arg0: 'unsigned long', arg1: 'itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer') -> "void":
        """SetCell(itkMeshF3DTF3 self, unsigned long arg0, itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer arg1)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCell(self, arg0, arg1)


    def GetCell(self, arg0: 'unsigned long', arg1: 'itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer') -> "bool":
        """GetCell(itkMeshF3DTF3 self, unsigned long arg0, itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer arg1) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCell(self, arg0, arg1)


    def SetCellData(self, *args) -> "void":
        """
        SetCellData(itkMeshF3DTF3 self, itkMapContainerULF arg0)
        SetCellData(itkMeshF3DTF3 self, unsigned long arg0, float arg1)
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCellData(self, *args)


    def GetCellData(self, *args) -> "bool":
        """
        GetCellData(itkMeshF3DTF3 self) -> itkMapContainerULF
        GetCellData(itkMeshF3DTF3 self) -> itkMapContainerULF
        GetCellData(itkMeshF3DTF3 self, unsigned long arg0, float * arg1) -> bool
        """
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellData(self, *args)


    def SetBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long', boundaryId: 'unsigned long') -> "void":
        """SetBoundaryAssignment(itkMeshF3DTF3 self, int dimension, unsigned long cellId, unsigned long featureId, unsigned long boundaryId)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)


    def GetBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long', boundaryId: 'unsigned long *') -> "bool":
        """GetBoundaryAssignment(itkMeshF3DTF3 self, int dimension, unsigned long cellId, unsigned long featureId, unsigned long * boundaryId) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)


    def RemoveBoundaryAssignment(self, dimension: 'int', cellId: 'unsigned long', featureId: 'unsigned long') -> "bool":
        """RemoveBoundaryAssignment(itkMeshF3DTF3 self, int dimension, unsigned long cellId, unsigned long featureId) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)


    def GetNumberOfCellBoundaryFeatures(self, dimension: 'int', arg1: 'unsigned long') -> "unsigned long":
        """GetNumberOfCellBoundaryFeatures(itkMeshF3DTF3 self, int dimension, unsigned long arg1) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)


    def GetCellBoundaryFeature(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', arg3: 'itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer') -> "bool":
        """GetCellBoundaryFeature(itkMeshF3DTF3 self, int dimension, unsigned long arg1, unsigned long arg2, itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer arg3) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)


    def GetCellBoundaryFeatureNeighbors(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', cellSet: 'setUL') -> "unsigned long":
        """GetCellBoundaryFeatureNeighbors(itkMeshF3DTF3 self, int dimension, unsigned long arg1, unsigned long arg2, setUL cellSet) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)


    def GetCellNeighbors(self, cellId: 'unsigned long', cellSet: 'setUL') -> "unsigned long":
        """GetCellNeighbors(itkMeshF3DTF3 self, unsigned long cellId, setUL cellSet) -> unsigned long"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellNeighbors(self, cellId, cellSet)


    def GetAssignedCellBoundaryIfOneExists(self, dimension: 'int', arg1: 'unsigned long', arg2: 'unsigned long', arg3: 'itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer') -> "bool":
        """GetAssignedCellBoundaryIfOneExists(itkMeshF3DTF3 self, int dimension, unsigned long arg1, unsigned long arg2, itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer arg3) -> bool"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)


    def BuildCellLinks(self) -> "void":
        """BuildCellLinks(itkMeshF3DTF3 self)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_BuildCellLinks(self)


    def Accept(self, mv: 'itkCellInterfaceFCTI3FFULULULPF3MCULPF3::MultiVisitor *') -> "void":
        """Accept(itkMeshF3DTF3 self, itkCellInterfaceFCTI3FFULULULPF3MCULPF3::MultiVisitor * mv)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_Accept(self, mv)


    def SetCellsAllocationMethod(self, _arg: 'itkMeshEnums::MeshClassCellsAllocationMethod const') -> "void":
        """SetCellsAllocationMethod(itkMeshF3DTF3 self, itkMeshEnums::MeshClassCellsAllocationMethod const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCellsAllocationMethod(self, _arg)


    def GetCellsAllocationMethod(self) -> "itkMeshEnums::MeshClassCellsAllocationMethod const &":
        """GetCellsAllocationMethod(itkMeshF3DTF3 self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellsAllocationMethod(self)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkMeshF3DTF3

    def cast(obj: 'itkLightObject') -> "itkMeshF3DTF3 *":
        """cast(itkLightObject obj) -> itkMeshF3DTF3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkMeshF3DTF3

        Create a new object of the class itkMeshF3DTF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF3DTF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMeshF3DTF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMeshF3DTF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMeshF3DTF3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_Clone, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetNumberOfCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetNumberOfCells, None, itkMeshF3DTF3)
itkMeshF3DTF3.PassStructure = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_PassStructure, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetBoundingBox = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetBoundingBox, None, itkMeshF3DTF3)
itkMeshF3DTF3.SetCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCellLinks, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellLinks, None, itkMeshF3DTF3)
itkMeshF3DTF3.SetCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCells, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetCells = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCells, None, itkMeshF3DTF3)
itkMeshF3DTF3.DeleteUnusedCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_DeleteUnusedCellData, None, itkMeshF3DTF3)
itkMeshF3DTF3.SetCell = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCell, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetCell = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCell, None, itkMeshF3DTF3)
itkMeshF3DTF3.SetCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCellData, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetCellData = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellData, None, itkMeshF3DTF3)
itkMeshF3DTF3.SetBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetBoundaryAssignment, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetBoundaryAssignment, None, itkMeshF3DTF3)
itkMeshF3DTF3.RemoveBoundaryAssignment = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_RemoveBoundaryAssignment, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetNumberOfCellBoundaryFeatures = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetNumberOfCellBoundaryFeatures, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetCellBoundaryFeature = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellBoundaryFeature, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetCellBoundaryFeatureNeighbors = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellBoundaryFeatureNeighbors, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetCellNeighbors = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellNeighbors, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetAssignedCellBoundaryIfOneExists = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetAssignedCellBoundaryIfOneExists, None, itkMeshF3DTF3)
itkMeshF3DTF3.BuildCellLinks = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_BuildCellLinks, None, itkMeshF3DTF3)
itkMeshF3DTF3.Accept = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_Accept, None, itkMeshF3DTF3)
itkMeshF3DTF3.SetCellsAllocationMethod = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_SetCellsAllocationMethod, None, itkMeshF3DTF3)
itkMeshF3DTF3.GetCellsAllocationMethod = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_GetCellsAllocationMethod, None, itkMeshF3DTF3)
itkMeshF3DTF3_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_swigregister
itkMeshF3DTF3_swigregister(itkMeshF3DTF3)

def itkMeshF3DTF3___New_orig__() -> "itkMeshF3DTF3_Pointer":
    """itkMeshF3DTF3___New_orig__() -> itkMeshF3DTF3_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3___New_orig__()

def itkMeshF3DTF3_cast(obj: 'itkLightObject') -> "itkMeshF3DTF3 *":
    """itkMeshF3DTF3_cast(itkLightObject obj) -> itkMeshF3DTF3"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkMeshF3DTF3_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 self) -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Clone(self)


    def GetMean(self) -> "float":
        """GetMean(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_GetMean(self)


    def SetMean(self, _arg: 'float const') -> "void":
        """SetMean(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_SetMean(self, _arg)


    def GetSigma(self) -> "float":
        """GetSigma(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_GetSigma(self)


    def SetSigma(self, _arg: 'float const') -> "void":
        """SetSigma(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_SetSigma(self, _arg)


    def GetSeed(self) -> "int":
        """GetSeed(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 self) -> int"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_GetSeed(self)


    def SetSeed(self, _arg: 'int const') -> "void":
        """SetSeed(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 self, int const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_SetSeed(self, _arg)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_GetMean, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_SetMean, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.GetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_GetSigma, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.SetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_SetSigma, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.GetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_GetSeed, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2.SetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_SetSeed, None, itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2)
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_swigregister
itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_swigregister(itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2)

def itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2 *":
    """itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2DTD2MD2DTD2_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD2MD2(itkAdditiveGaussianNoiseMeshFilterMD2MD2_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD2MD2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD2MD2 self) -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Clone(self)


    def GetMean(self) -> "float":
        """GetMean(itkAdditiveGaussianNoiseMeshFilterMD2MD2 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_GetMean(self)


    def SetMean(self, _arg: 'float const') -> "void":
        """SetMean(itkAdditiveGaussianNoiseMeshFilterMD2MD2 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_SetMean(self, _arg)


    def GetSigma(self) -> "float":
        """GetSigma(itkAdditiveGaussianNoiseMeshFilterMD2MD2 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_GetSigma(self)


    def SetSigma(self, _arg: 'float const') -> "void":
        """SetSigma(itkAdditiveGaussianNoiseMeshFilterMD2MD2 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_SetSigma(self, _arg)


    def GetSeed(self) -> "int":
        """GetSeed(itkAdditiveGaussianNoiseMeshFilterMD2MD2 self) -> int"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_GetSeed(self)


    def SetSeed(self, _arg: 'int const') -> "void":
        """SetSeed(itkAdditiveGaussianNoiseMeshFilterMD2MD2 self, int const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_SetSeed(self, _arg)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD2MD2

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2 *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2MD2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD2MD2

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD2MD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD2MD2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD2MD2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD2MD2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD2MD2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2)
itkAdditiveGaussianNoiseMeshFilterMD2MD2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_GetMean, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2)
itkAdditiveGaussianNoiseMeshFilterMD2MD2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_SetMean, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2)
itkAdditiveGaussianNoiseMeshFilterMD2MD2.GetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_GetSigma, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2)
itkAdditiveGaussianNoiseMeshFilterMD2MD2.SetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_SetSigma, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2)
itkAdditiveGaussianNoiseMeshFilterMD2MD2.GetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_GetSeed, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2)
itkAdditiveGaussianNoiseMeshFilterMD2MD2.SetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_SetSeed, None, itkAdditiveGaussianNoiseMeshFilterMD2MD2)
itkAdditiveGaussianNoiseMeshFilterMD2MD2_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_swigregister
itkAdditiveGaussianNoiseMeshFilterMD2MD2_swigregister(itkAdditiveGaussianNoiseMeshFilterMD2MD2)

def itkAdditiveGaussianNoiseMeshFilterMD2MD2___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD2MD2___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD2MD2_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD2MD2_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD2MD2 *":
    """itkAdditiveGaussianNoiseMeshFilterMD2MD2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD2MD2"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD2MD2_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 self) -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Clone(self)


    def GetMean(self) -> "float":
        """GetMean(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_GetMean(self)


    def SetMean(self, _arg: 'float const') -> "void":
        """SetMean(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_SetMean(self, _arg)


    def GetSigma(self) -> "float":
        """GetSigma(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_GetSigma(self)


    def SetSigma(self, _arg: 'float const') -> "void":
        """SetSigma(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_SetSigma(self, _arg)


    def GetSeed(self) -> "int":
        """GetSeed(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 self) -> int"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_GetSeed(self)


    def SetSeed(self, _arg: 'int const') -> "void":
        """SetSeed(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 self, int const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_SetSeed(self, _arg)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_GetMean, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_SetMean, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.GetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_GetSigma, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.SetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_SetSigma, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.GetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_GetSeed, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3.SetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_SetSeed, None, itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3)
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_swigregister
itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_swigregister(itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3)

def itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3 *":
    """itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3DTD3MD3DTD3_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMD3MD3(itkAdditiveGaussianNoiseMeshFilterMD3MD3_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMD3MD3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMD3MD3 self) -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Clone(self)


    def GetMean(self) -> "float":
        """GetMean(itkAdditiveGaussianNoiseMeshFilterMD3MD3 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_GetMean(self)


    def SetMean(self, _arg: 'float const') -> "void":
        """SetMean(itkAdditiveGaussianNoiseMeshFilterMD3MD3 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_SetMean(self, _arg)


    def GetSigma(self) -> "float":
        """GetSigma(itkAdditiveGaussianNoiseMeshFilterMD3MD3 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_GetSigma(self)


    def SetSigma(self, _arg: 'float const') -> "void":
        """SetSigma(itkAdditiveGaussianNoiseMeshFilterMD3MD3 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_SetSigma(self, _arg)


    def GetSeed(self) -> "int":
        """GetSeed(itkAdditiveGaussianNoiseMeshFilterMD3MD3 self) -> int"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_GetSeed(self)


    def SetSeed(self, _arg: 'int const') -> "void":
        """SetSeed(itkAdditiveGaussianNoiseMeshFilterMD3MD3 self, int const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_SetSeed(self, _arg)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMD3MD3

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3 *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3MD3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMD3MD3

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMD3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMD3MD3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMD3MD3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMD3MD3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMD3MD3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_Clone, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3)
itkAdditiveGaussianNoiseMeshFilterMD3MD3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_GetMean, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3)
itkAdditiveGaussianNoiseMeshFilterMD3MD3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_SetMean, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3)
itkAdditiveGaussianNoiseMeshFilterMD3MD3.GetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_GetSigma, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3)
itkAdditiveGaussianNoiseMeshFilterMD3MD3.SetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_SetSigma, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3)
itkAdditiveGaussianNoiseMeshFilterMD3MD3.GetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_GetSeed, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3)
itkAdditiveGaussianNoiseMeshFilterMD3MD3.SetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_SetSeed, None, itkAdditiveGaussianNoiseMeshFilterMD3MD3)
itkAdditiveGaussianNoiseMeshFilterMD3MD3_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_swigregister
itkAdditiveGaussianNoiseMeshFilterMD3MD3_swigregister(itkAdditiveGaussianNoiseMeshFilterMD3MD3)

def itkAdditiveGaussianNoiseMeshFilterMD3MD3___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMD3MD3___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMD3MD3_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMD3MD3_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMD3MD3 *":
    """itkAdditiveGaussianNoiseMeshFilterMD3MD3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMD3MD3"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMD3MD3_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 self) -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Clone(self)


    def GetMean(self) -> "float":
        """GetMean(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_GetMean(self)


    def SetMean(self, _arg: 'float const') -> "void":
        """SetMean(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_SetMean(self, _arg)


    def GetSigma(self) -> "float":
        """GetSigma(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_GetSigma(self)


    def SetSigma(self, _arg: 'float const') -> "void":
        """SetSigma(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_SetSigma(self, _arg)


    def GetSeed(self) -> "int":
        """GetSeed(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 self) -> int"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_GetSeed(self)


    def SetSeed(self, _arg: 'int const') -> "void":
        """SetSeed(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 self, int const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_SetSeed(self, _arg)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_GetMean, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_SetMean, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.GetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_GetSigma, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.SetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_SetSigma, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.GetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_GetSeed, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2.SetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_SetSeed, None, itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2)
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_swigregister
itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_swigregister(itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2)

def itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2 *":
    """itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2DTF2MF2DTF2_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF2MF2(itkAdditiveGaussianNoiseMeshFilterMF2MF2_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF2MF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF2MF2 self) -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Clone(self)


    def GetMean(self) -> "float":
        """GetMean(itkAdditiveGaussianNoiseMeshFilterMF2MF2 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_GetMean(self)


    def SetMean(self, _arg: 'float const') -> "void":
        """SetMean(itkAdditiveGaussianNoiseMeshFilterMF2MF2 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_SetMean(self, _arg)


    def GetSigma(self) -> "float":
        """GetSigma(itkAdditiveGaussianNoiseMeshFilterMF2MF2 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_GetSigma(self)


    def SetSigma(self, _arg: 'float const') -> "void":
        """SetSigma(itkAdditiveGaussianNoiseMeshFilterMF2MF2 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_SetSigma(self, _arg)


    def GetSeed(self) -> "int":
        """GetSeed(itkAdditiveGaussianNoiseMeshFilterMF2MF2 self) -> int"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_GetSeed(self)


    def SetSeed(self, _arg: 'int const') -> "void":
        """SetSeed(itkAdditiveGaussianNoiseMeshFilterMF2MF2 self, int const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_SetSeed(self, _arg)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF2MF2

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2 *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2MF2"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF2MF2

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF2MF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF2MF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF2MF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF2MF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF2MF2.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2)
itkAdditiveGaussianNoiseMeshFilterMF2MF2.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_GetMean, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2)
itkAdditiveGaussianNoiseMeshFilterMF2MF2.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_SetMean, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2)
itkAdditiveGaussianNoiseMeshFilterMF2MF2.GetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_GetSigma, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2)
itkAdditiveGaussianNoiseMeshFilterMF2MF2.SetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_SetSigma, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2)
itkAdditiveGaussianNoiseMeshFilterMF2MF2.GetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_GetSeed, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2)
itkAdditiveGaussianNoiseMeshFilterMF2MF2.SetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_SetSeed, None, itkAdditiveGaussianNoiseMeshFilterMF2MF2)
itkAdditiveGaussianNoiseMeshFilterMF2MF2_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_swigregister
itkAdditiveGaussianNoiseMeshFilterMF2MF2_swigregister(itkAdditiveGaussianNoiseMeshFilterMF2MF2)

def itkAdditiveGaussianNoiseMeshFilterMF2MF2___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF2MF2___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF2MF2_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF2MF2_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF2MF2 *":
    """itkAdditiveGaussianNoiseMeshFilterMF2MF2_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF2MF2"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF2MF2_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 self) -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Clone(self)


    def GetMean(self) -> "float":
        """GetMean(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_GetMean(self)


    def SetMean(self, _arg: 'float const') -> "void":
        """SetMean(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_SetMean(self, _arg)


    def GetSigma(self) -> "float":
        """GetSigma(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_GetSigma(self)


    def SetSigma(self, _arg: 'float const') -> "void":
        """SetSigma(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_SetSigma(self, _arg)


    def GetSeed(self) -> "int":
        """GetSeed(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 self) -> int"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_GetSeed(self)


    def SetSeed(self, _arg: 'int const') -> "void":
        """SetSeed(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 self, int const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_SetSeed(self, _arg)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_GetMean, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_SetMean, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.GetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_GetSigma, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.SetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_SetSigma, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.GetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_GetSeed, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3.SetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_SetSeed, None, itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3)
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_swigregister
itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_swigregister(itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3)

def itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3 *":
    """itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3DTF3MF3DTF3_cast(obj)

class itkAdditiveGaussianNoiseMeshFilterMF3MF3(itkAdditiveGaussianNoiseMeshFilterMF3MF3_Superclass):
    """Proxy of C++ itkAdditiveGaussianNoiseMeshFilterMF3MF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Pointer":
        """__New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Pointer":
        """Clone(itkAdditiveGaussianNoiseMeshFilterMF3MF3 self) -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Pointer"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Clone(self)


    def GetMean(self) -> "float":
        """GetMean(itkAdditiveGaussianNoiseMeshFilterMF3MF3 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_GetMean(self)


    def SetMean(self, _arg: 'float const') -> "void":
        """SetMean(itkAdditiveGaussianNoiseMeshFilterMF3MF3 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_SetMean(self, _arg)


    def GetSigma(self) -> "float":
        """GetSigma(itkAdditiveGaussianNoiseMeshFilterMF3MF3 self) -> float"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_GetSigma(self)


    def SetSigma(self, _arg: 'float const') -> "void":
        """SetSigma(itkAdditiveGaussianNoiseMeshFilterMF3MF3 self, float const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_SetSigma(self, _arg)


    def GetSeed(self) -> "int":
        """GetSeed(itkAdditiveGaussianNoiseMeshFilterMF3MF3 self) -> int"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_GetSeed(self)


    def SetSeed(self, _arg: 'int const') -> "void":
        """SetSeed(itkAdditiveGaussianNoiseMeshFilterMF3MF3 self, int const _arg)"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_SetSeed(self, _arg)

    __swig_destroy__ = _itkAdditiveGaussianNoiseMeshFilterPython.delete_itkAdditiveGaussianNoiseMeshFilterMF3MF3

    def cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3 *":
        """cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3MF3"""
        return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_cast(obj)

    cast = staticmethod(cast)

    def New(*args, **kargs):
        """New() -> itkAdditiveGaussianNoiseMeshFilterMF3MF3

        Create a new object of the class itkAdditiveGaussianNoiseMeshFilterMF3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAdditiveGaussianNoiseMeshFilterMF3MF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAdditiveGaussianNoiseMeshFilterMF3MF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAdditiveGaussianNoiseMeshFilterMF3MF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAdditiveGaussianNoiseMeshFilterMF3MF3.Clone = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_Clone, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3)
itkAdditiveGaussianNoiseMeshFilterMF3MF3.GetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_GetMean, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3)
itkAdditiveGaussianNoiseMeshFilterMF3MF3.SetMean = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_SetMean, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3)
itkAdditiveGaussianNoiseMeshFilterMF3MF3.GetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_GetSigma, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3)
itkAdditiveGaussianNoiseMeshFilterMF3MF3.SetSigma = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_SetSigma, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3)
itkAdditiveGaussianNoiseMeshFilterMF3MF3.GetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_GetSeed, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3)
itkAdditiveGaussianNoiseMeshFilterMF3MF3.SetSeed = new_instancemethod(_itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_SetSeed, None, itkAdditiveGaussianNoiseMeshFilterMF3MF3)
itkAdditiveGaussianNoiseMeshFilterMF3MF3_swigregister = _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_swigregister
itkAdditiveGaussianNoiseMeshFilterMF3MF3_swigregister(itkAdditiveGaussianNoiseMeshFilterMF3MF3)

def itkAdditiveGaussianNoiseMeshFilterMF3MF3___New_orig__() -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3_Pointer":
    """itkAdditiveGaussianNoiseMeshFilterMF3MF3___New_orig__() -> itkAdditiveGaussianNoiseMeshFilterMF3MF3_Pointer"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3___New_orig__()

def itkAdditiveGaussianNoiseMeshFilterMF3MF3_cast(obj: 'itkLightObject') -> "itkAdditiveGaussianNoiseMeshFilterMF3MF3 *":
    """itkAdditiveGaussianNoiseMeshFilterMF3MF3_cast(itkLightObject obj) -> itkAdditiveGaussianNoiseMeshFilterMF3MF3"""
    return _itkAdditiveGaussianNoiseMeshFilterPython.itkAdditiveGaussianNoiseMeshFilterMF3MF3_cast(obj)


import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mesh_source(*args, **kwargs):
    """Procedural interface for MeshSource"""
    import itk
    instance = itk.MeshSource.New(*args, **kwargs)
    return instance.__internal_call__()

def mesh_source_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MeshSource, itkTemplate.itkTemplate):
        filter_object = itk.MeshSource.values()[0]
    else:
        filter_object = itk.MeshSource

    mesh_source.__doc__ = filter_object.__doc__
    mesh_source.__doc__ += "\n Args are Input(s) to the filter.\n"
    mesh_source.__doc__ += "Available Keyword Arguments:\n"
    mesh_source.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def additive_gaussian_noise_mesh_filter(*args, **kwargs):
    """Procedural interface for AdditiveGaussianNoiseMeshFilter"""
    import itk
    instance = itk.AdditiveGaussianNoiseMeshFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def additive_gaussian_noise_mesh_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.AdditiveGaussianNoiseMeshFilter, itkTemplate.itkTemplate):
        filter_object = itk.AdditiveGaussianNoiseMeshFilter.values()[0]
    else:
        filter_object = itk.AdditiveGaussianNoiseMeshFilter

    additive_gaussian_noise_mesh_filter.__doc__ = filter_object.__doc__
    additive_gaussian_noise_mesh_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    additive_gaussian_noise_mesh_filter.__doc__ += "Available Keyword Arguments:\n"
    additive_gaussian_noise_mesh_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])
import itkHelpers
@itkHelpers.accept_numpy_array_like_xarray
def mesh_to_mesh_filter(*args, **kwargs):
    """Procedural interface for MeshToMeshFilter"""
    import itk
    instance = itk.MeshToMeshFilter.New(*args, **kwargs)
    return instance.__internal_call__()

def mesh_to_mesh_filter_init_docstring():
    import itk
    import itkTemplate
    import itkHelpers
    if isinstance(itk.MeshToMeshFilter, itkTemplate.itkTemplate):
        filter_object = itk.MeshToMeshFilter.values()[0]
    else:
        filter_object = itk.MeshToMeshFilter

    mesh_to_mesh_filter.__doc__ = filter_object.__doc__
    mesh_to_mesh_filter.__doc__ += "\n Args are Input(s) to the filter.\n"
    mesh_to_mesh_filter.__doc__ += "Available Keyword Arguments:\n"
    mesh_to_mesh_filter.__doc__ += "".join([
        "  " + itkHelpers.camel_to_snake_case(item[3:]) + "\n"
        for item in dir(filter_object)
        if item[:3] == "Set"])



