environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script interpreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\.travis\\run_with_env.cmd"
    # Use a fixed hash seed for reproducability
    PYTHONHASHSEED: 8675309
    MYSQL_PWD: "Password12!"
    PGPASSWORD: "Password12!"
    PGUSER: "postgres"

  matrix:

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.

    ## 64-bit
    - PYTHON: "C:\\Python38-x64"
      PYTHON_VERSION: "3.8.x"
      PYTHON_ARCH: "64"
      PYTHON_EXE: python

    - PYTHON: "C:\\Python37-x64"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "64"
      PYTHON_EXE: python

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.13
      PYTHON_ARCH: "64"
      PYTHON_EXE: python

    - PYTHON: "C:\\Python36-x64"
      PYTHON_VERSION: "3.6.x" # currently 3.6.0
      PYTHON_ARCH: "64"
      PYTHON_EXE: python

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x" # currently 3.5.2
      PYTHON_ARCH: "64"
      PYTHON_EXE: python

    ## 32-bit, wheel only (no testing)

    - PYTHON: "C:\\Python38"
      PYTHON_VERSION: "3.8.x"
      PYTHON_ARCH: "32"
      PYTHON_EXE: python
      GWHEEL_ONLY: true

    - PYTHON: "C:\\Python37"
      PYTHON_VERSION: "3.7.x"
      PYTHON_ARCH: "32"
      PYTHON_EXE: python
      GWHEEL_ONLY: true

    - PYTHON: "C:\\Python36"
      PYTHON_VERSION: "3.6.x" # currently 3.6.3
      PYTHON_ARCH: "32"
      PYTHON_EXE: python
      GWHEEL_ONLY: true

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x" # currently 3.5.2
      PYTHON_ARCH: "32"
      PYTHON_EXE: python
      GWHEEL_ONLY: true

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x" # currently 2.7.13
      PYTHON_ARCH: "32"
      PYTHON_EXE: python
      GWHEEL_ONLY: true

services:
  - mysql
  - postgresql101

install:
  - "SET PATH=C:\\Program Files\\PostgreSQL\\10\\bin;C:\\Program Files\\MySql\\MySQL Server 5.7\\bin;%PATH%"
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PYTHON%\\bin;%PATH%"
  - "SET PYEXE=%PYTHON%\\%PYTHON_EXE%.exe"

  # Check that we have the expected version and architecture for Python
  - "%PYEXE% --version"
  - "%PYEXE% -c \"import sqlite3; print(sqlite3.sqlite_version)\""
  - "%PYEXE% -c \"import struct; print(struct.calcsize('P') * 8)\""

  - "%CMD_IN_ENV% %PYEXE% -m pip install --disable-pip-version-check -U pip"
  # pycparser can't be built correctly in an isolated environment.
  # See
  # https://ci.appveyor.com/project/denik/gevent/builds/23810605/job/83aw4u67artt002b#L602
  # So we violate DRY and repeate some requirements in order to use
  # --no-build-isolation
  - "%CMD_IN_ENV% %PYEXE% -m pip install -U pycparser wheel cython setuptools cffi"


build_script:
  # Build the compiled extension
  # pip 19.1 (exactly) won't work; but 19.1.1 should with
  # --no-use-pep517
  # Here, we only want to install one driver; we only support the best
  # driver on Windows.
  - if not "%GWHEEL_ONLY%"=="true" %CMD_IN_ENV% %PYEXE% -m pip install -U -e .[test,postgresql,mysql]

test_script:
  - if not "%GWHEEL_ONLY%"=="true" cmd /c .travis\mysql.cmd
  - if not "%GWHEEL_ONLY%"=="true" cmd /c .travis\postgres.cmd
  - if not "%GWHEEL_ONLY%"=="true" %PYEXE% -m zope.testrunner --test-path=src -v --color --slow-test 3

after_test:
  - "%CMD_IN_ENV% %PYEXE% setup.py bdist_wheel -d dist"
  - ps: "ls dist"

artifacts:
  - path: dist\RelStorage*

cache:
  - "%TMP%\\py\\"
  - '%LOCALAPPDATA%\pip\Cache'
