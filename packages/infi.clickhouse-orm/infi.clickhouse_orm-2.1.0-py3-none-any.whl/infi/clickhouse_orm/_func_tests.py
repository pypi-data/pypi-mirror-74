        self._test_func(F.groupBitAnd(x))
        self._test_func(F.groupBitOr(x))
        self._test_func(F.groupBitXor(x))
        self._test_func(F.CHARACTER_LENGTH(x))
        self._test_func(F.CHAR_LENGTH(x))
        self._test_func(F.covarPop(x, y))
        self._test_func(F.covarSamp(x, y))
        self._test_func(F.IPv4CIDRToRange(x, y))
        self._test_func(F.IPv4NumToString(x))
        self._test_func(F.IPv4NumToStringClassC(x))
        self._test_func(F.IPv4StringToNum(x))
        self._test_func(F.IPv4ToIPv6(x))
        self._test_func(F.IPv6CIDRToRange(x, y))
        self._test_func(F.IPv6NumToString(x))
        self._test_func(F.IPv6StringToNum(x))
        self._test_func(F.JSONExtractBool(*args))
        self._test_func(F.JSONExtractFloat(*args))
        self._test_func(F.JSONExtractInt(*args))
        self._test_func(F.JSONExtractRaw(*args))
        self._test_func(F.JSONExtractString(*args))
        self._test_func(F.JSONExtractUInt(*args))
        self._test_func(F.JSONHas(*args))
        self._test_func(F.JSONKey(*args))
        self._test_func(F.JSONLength(*args))
        self._test_func(F.JSONType(*args))
        self._test_func(F.MACNumToString(x))
        self._test_func(F.MACStringToNum(x))
        self._test_func(F.MACStringToOUI(x))
        self._test_func(F.MD5(x))
        self._test_func(F.SHA1(x))
        self._test_func(F.SHA224(x))
        self._test_func(F.SHA256(x))
        self._test_func(F.stddevPop(x))
        self._test_func(F.stddevSamp(x))
        self._test_func(F.URLHash(x))
        self._test_func(F.URLHash(x, y))
        self._test_func(F.URLHierarchy(x))
        self._test_func(F.URLPathHierarchy(x))
        self._test_func(F.varPop(x))
        self._test_func(F.varSamp(x))
        self._test_func(F.__bitSwapLastTwo(x))
        self._test_func(F.any(x))
        self._test_func(F.anyHeavy(x))
        self._test_func(F.anyLast(x))
        self._test_func(F.argMax(x, y))
        self._test_func(F.argMin(x, y))
        self._test_func(F.arrayAll(*args))
        self._test_func(F.arrayCount(*args))
        self._test_func(F.arrayCumSum(*args))
        self._test_func(F.arrayCumSumNonNegative(*args))
        self._test_func(F.arrayExists(*args))
        self._test_func(F.arrayReverseSort(*args))
        self._test_func(F.arraySort(*args))
        self._test_func(F.arraySum(*args))
        self._test_func(F.assumeNotNull(x))
        self._test_func(F.avg(x))
        self._test_func(F.basename(x))
        self._test_func(F.blockNumber())
        self._test_func(F.blockSize())
        self._test_func(F.boundingRatio(x, y))
        self._test_func(F.cityHash64())
        self._test_func(F.corr(x, y))
        self._test_func(F.corrStable(x, y))
        self._test_func(F.count())
        self._test_func(F.covarPop(x, y))
        self._test_func(F.covarPopStable(x, y))
        self._test_func(F.covarSamp(x, y))
        self._test_func(F.covarSampStable(x, y))
        self._test_func(F.currentDatabase())
        self._test_func(F.cutFragment(x))
        self._test_func(F.cutQueryString(x))
        self._test_func(F.cutQueryStringAndFragment(x))
        self._test_func(F.cutToFirstSignificantSubdomain(x))
        self._test_func(F.cutURLParameter(x, y))
        self._test_func(F.cutWWW(x))
        self._test_func(F.decodeURLComponent(x))
        self._test_func(F.defaultValueOfArgumentType(x))
        self._test_func(F.dictGet(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetDate(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetDateOrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetDateTime(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetDateTimeOrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetFloat32(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetFloat32OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetFloat64(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetFloat64OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetHierarchy(x, y))
        self._test_func(F.dictGetInt16(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetInt16OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetInt32(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetInt32OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetInt64(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetInt64OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetInt8(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetInt8OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetOrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetStringOrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetUInt16(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetUInt16OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetUInt32(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetUInt32OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetUInt64(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetUInt64OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetUInt8(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetUInt8OrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictGetUUID(dict_name, attr_name, id_expr))
        self._test_func(F.dictGetUUIDOrDefault(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.dictHas(x, y))
        self._test_func(F.domain(x))
        self._test_func(F.domainWithoutWWW(x))
        self._test_func(F.dumpColumnStructure(x))
        self._test_func(F.endsWith(x, y))
        self._test_func(F.evalMLMethod(*args))
        self._test_func(F.extract(x, y))
        self._test_func(F.extractAll(x, y))
        self._test_func(F.extractURLParameter(x, y))
        self._test_func(F.extractURLParameterNames(x))
        self._test_func(F.extractURLParameters(x))
        self._test_func(F.farmHash64())
        self._test_func(F.filesystemAvailable())
        self._test_func(F.filesystemCapacity())
        self._test_func(F.filesystemFree())
        self._test_func(F.finalizeAggregation(x))
        self._test_func(F.findClusterIndex(x, y))
        self._test_func(F.findClusterValue(x, y))
        self._test_func(F.firstSignificantSubdomain(x))
        self._test_func(F.flatten(x))
        self._test_func(F.formatReadableSize(x))
        self._test_func(F.fragment(x))
        self._test_func(F.gccMurmurHash())
        self._test_func(F.generateUUIDv4())
        self._test_func(F.geohashDecode(x))
        self._test_func(F.getSizeOfEnumType(x))
        self._test_func(F.greatCircleDistance(dict_name, attr_name, id_expr, default_value_expr))
        self._test_func(F.greatest(x, y))
        self._test_func(F.groupArray(x))
        self._test_func(F.groupArrayInsertAt(x, y))
        self._test_func(F.groupBitAnd(x))
        self._test_func(F.groupBitOr(x))
        self._test_func(F.groupBitXor(x))
        self._test_func(F.groupBitmap(x))
        self._test_func(F.groupUniqArray(x))
        self._test_func(F.halfMD5())
        self._test_func(F.hiveHash())
        self._test_func(F.hostName())
        self._test_func(F.identity(x))
        self._test_func(F.ifNull(x, y))
        self._test_func(F.ignore())
        self._test_func(F.ignoreExceptNull())
        self._test_func(F.indexHint())
        self._test_func(F.intHash32(x))
        self._test_func(F.intHash64(x))
        self._test_func(F.isFinite(x))
        self._test_func(F.isInfinite(x))
        self._test_func(F.isNaN(x))
        self._test_func(F.isNotNull(x))
        self._test_func(F.isNull(x))
        self._test_func(F.isValidUTF8(x))
        self._test_func(F.javaHash())
        self._test_func(F.jumpConsistentHash(x, y))
        self._test_func(F.kurtPop(x))
        self._test_func(F.kurtSamp(x))
        self._test_func(F.lcase(x))
        self._test_func(F.least(x, y))
        self._test_func(F.like(x, y))
        self._test_func(F.locate(x, y))
        self._test_func(F.lowCardinalityIndices(x))
        self._test_func(F.lowCardinalityKeys(x))
        self._test_func(F.match(x, y))
        self._test_func(F.materialize(x))
        self._test_func(F.max(x))
        self._test_func(F.maxIntersections(x, y))
        self._test_func(F.maxIntersectionsPosition(x, y))
        self._test_func(F.median(x))
        self._test_func(F.medianDeterministic(x, y))
        self._test_func(F.medianExact(x))
        self._test_func(F.medianExactWeighted(x, y))
        self._test_func(F.medianTDigest(x))
        self._test_func(F.medianTDigestWeighted(x, y))
        self._test_func(F.medianTiming(x))
        self._test_func(F.medianTimingWeighted(x, y))
        self._test_func(F.metroHash64())
        self._test_func(F.min(x))
        self._test_func(F.multiMatchAny(x, y))
        self._test_func(F.multiMatchAnyIndex(x, y))
        self._test_func(F.multiSearchAllPositions(x, y))
        self._test_func(F.multiSearchAllPositionsCaseInsensitive(x, y))
        self._test_func(F.multiSearchAllPositionsCaseInsensitiveUTF8(x, y))
        self._test_func(F.multiSearchAllPositionsUTF8(x, y))
        self._test_func(F.multiSearchAny(x, y))
        self._test_func(F.multiSearchAnyCaseInsensitive(x, y))
        self._test_func(F.multiSearchAnyCaseInsensitiveUTF8(x, y))
        self._test_func(F.multiSearchAnyUTF8(x, y))
        self._test_func(F.multiSearchFirstIndex(x, y))
        self._test_func(F.multiSearchFirstIndexCaseInsensitive(x, y))
        self._test_func(F.multiSearchFirstIndexCaseInsensitiveUTF8(x, y))
        self._test_func(F.multiSearchFirstIndexUTF8(x, y))
        self._test_func(F.multiSearchFirstPosition(x, y))
        self._test_func(F.multiSearchFirstPositionCaseInsensitive(x, y))
        self._test_func(F.multiSearchFirstPositionCaseInsensitiveUTF8(x, y))
        self._test_func(F.multiSearchFirstPositionUTF8(x, y))
        self._test_func(F.murmurHash2_32())
        self._test_func(F.murmurHash2_64())
        self._test_func(F.murmurHash3_128(x))
        self._test_func(F.murmurHash3_32())
        self._test_func(F.murmurHash3_64())
        self._test_func(F.ngramDistance(x, y))
        self._test_func(F.ngramDistanceCaseInsensitive(x, y))
        self._test_func(F.ngramDistanceCaseInsensitiveUTF8(x, y))
        self._test_func(F.ngramDistanceUTF8(x, y))
        self._test_func(F.ngramSearch(x, y))
        self._test_func(F.ngramSearchCaseInsensitive(x, y))
        self._test_func(F.ngramSearchCaseInsensitiveUTF8(x, y))
        self._test_func(F.ngramSearchUTF8(x, y))
        self._test_func(F.notLike(x, y))
        self._test_func(F.nullIf(x, y))
        self._test_func(F.path(x))
        self._test_func(F.pathFull(x))
        self._test_func(F.pi())
        self._test_func(F.position(x, y))
        self._test_func(F.positionCaseInsensitive(x, y))
        self._test_func(F.positionCaseInsensitiveUTF8(x, y))
        self._test_func(F.positionUTF8(x, y))
        self._test_func(F.protocol(x))
        self._test_func(F.quantile(x))
        self._test_func(F.quantileDeterministic(x, y))
        self._test_func(F.quantileExact(x))
        self._test_func(F.quantileExactWeighted(x, y))
        self._test_func(F.quantileTDigest(x))
        self._test_func(F.quantileTDigestWeighted(x, y))
        self._test_func(F.quantileTiming(x))
        self._test_func(F.quantileTimingWeighted(x, y))
        self._test_func(F.quantiles(x))
        self._test_func(F.quantilesDeterministic(x, y))
        self._test_func(F.quantilesExact(x))
        self._test_func(F.quantilesExactWeighted(x, y))
        self._test_func(F.quantilesTDigest(x))
        self._test_func(F.quantilesTDigestWeighted(x, y))
        self._test_func(F.quantilesTiming(x))
        self._test_func(F.quantilesTimingWeighted(x, y))
        self._test_func(F.queryString(x))
        self._test_func(F.queryStringAndFragment(x))
        self._test_func(F.reinterpretAsDate(x))
        self._test_func(F.reinterpretAsDateTime(x))
        self._test_func(F.reinterpretAsFixedString(x))
        self._test_func(F.reinterpretAsFloat32(x))
        self._test_func(F.reinterpretAsFloat64(x))
        self._test_func(F.reinterpretAsInt16(x))
        self._test_func(F.reinterpretAsInt32(x))
        self._test_func(F.reinterpretAsInt64(x))
        self._test_func(F.reinterpretAsInt8(x))
        self._test_func(F.reinterpretAsString(x))
        self._test_func(F.reinterpretAsUInt16(x))
        self._test_func(F.reinterpretAsUInt32(x))
        self._test_func(F.reinterpretAsUInt64(x))
        self._test_func(F.reinterpretAsUInt8(x))
        self._test_func(F.replicate(x, y))
        self._test_func(F.rowNumberInAllBlocks())
        self._test_func(F.rowNumberInBlock())
        self._test_func(F.runningAccumulate(x))
        self._test_func(F.runningDifference(x))
        self._test_func(F.runningDifferenceStartingWithFirstValue(x))
        self._test_func(F.sequenceCount(x))
        self._test_func(F.sequenceMatch(x))
        self._test_func(F.simpleLinearRegression(x, y))
        self._test_func(F.sipHash128(x))
        self._test_func(F.sipHash64())
        self._test_func(F.skewPop(x))
        self._test_func(F.skewSamp(x))
        self._test_func(F.sleep(x))
        self._test_func(F.sleepEachRow(x))
        self._test_func(F.startsWith(x, y))
        self._test_func(F.stddevPop(x))
        self._test_func(F.stddevPopStable(x))
        self._test_func(F.stddevSamp(x))
        self._test_func(F.stddevSampStable(x))
        self._test_func(F.sum(x))
        self._test_func(F.sumKahan(x))
        self._test_func(F.sumWithOverflow(x))
        self._test_func(F.sumburConsistentHash(x, y))
        self._test_func(F.throwIf(x))
        self._test_func(F.timezone())
        self._test_func(F.toColumnTypeName(x))
        self._test_func(F.toDateOrNull(d))
        self._test_func(F.toDateOrNull(d, timezone))
        self._test_func(F.toDateOrZero(d))
        self._test_func(F.toDateOrZero(d, timezone))
        self._test_func(F.toDateTimeOrNull(d))
        self._test_func(F.toDateTimeOrNull(d, timezone))
        self._test_func(F.toDateTimeOrZero(d))
        self._test_func(F.toDateTimeOrZero(d, timezone))
        self._test_func(F.toDecimal128OrNull(d))
        self._test_func(F.toDecimal128OrNull(d, timezone))
        self._test_func(F.toDecimal128OrZero(d))
        self._test_func(F.toDecimal128OrZero(d, timezone))
        self._test_func(F.toDecimal32OrNull(d))
        self._test_func(F.toDecimal32OrNull(d, timezone))
        self._test_func(F.toDecimal32OrZero(d))
        self._test_func(F.toDecimal32OrZero(d, timezone))
        self._test_func(F.toDecimal64OrNull(d))
        self._test_func(F.toDecimal64OrNull(d, timezone))
        self._test_func(F.toDecimal64OrZero(d))
        self._test_func(F.toDecimal64OrZero(d, timezone))
        self._test_func(F.toFloat32OrNull(d))
        self._test_func(F.toFloat32OrNull(d, timezone))
        self._test_func(F.toFloat64OrNull(d))
        self._test_func(F.toFloat64OrNull(d, timezone))
        self._test_func(F.toIPv4(x))
        self._test_func(F.toIPv6(x))
        self._test_func(F.toInt16OrNull(d))
        self._test_func(F.toInt16OrNull(d, timezone))
        self._test_func(F.toInt32OrNull(d))
        self._test_func(F.toInt32OrNull(d, timezone))
        self._test_func(F.toInt64OrNull(d))
        self._test_func(F.toInt64OrNull(d, timezone))
        self._test_func(F.toInt8OrNull(d))
        self._test_func(F.toInt8OrNull(d, timezone))
        self._test_func(F.toLowCardinality(x))
        self._test_func(F.toNullable(x))
        self._test_func(F.toTimeZone(x, y))
        self._test_func(F.toTypeName(x))
        self._test_func(F.toUInt16OrNull(d))
        self._test_func(F.toUInt16OrNull(d, timezone))
        self._test_func(F.toUInt32OrNull(d))
        self._test_func(F.toUInt32OrNull(d, timezone))
        self._test_func(F.toUInt64OrNull(d))
        self._test_func(F.toUInt64OrNull(d, timezone))
        self._test_func(F.toUInt8OrNull(d))
        self._test_func(F.toUInt8OrNull(d, timezone))
        self._test_func(F.toValidUTF8(x))
        self._test_func(F.topK(x))
        self._test_func(F.topKWeighted(x, y))
        self._test_func(F.topLevelDomain(x))
        self._test_func(F.trimBoth(x))
        self._test_func(F.trimLeft(x))
        self._test_func(F.trimRight(x))
        self._test_func(F.trunc(x))
        self._test_func(F.trunc(x, y))
        self._test_func(F.truncate(x))
        self._test_func(F.truncate(x, y))
        self._test_func(F.tuple(*args))
        self._test_func(F.tupleElement(x, y))
        self._test_func(F.ucase(x))
        self._test_func(F.uniq(*args))
        self._test_func(F.uniqCombined(*args))
        self._test_func(F.uniqExact(*args))
        self._test_func(F.uniqHLL12(*args))
        self._test_func(F.uniqUpTo(*args))
        self._test_func(F.uptime())
        self._test_func(F.varPop(x))
        self._test_func(F.varPopStable(x))
        self._test_func(F.varSamp(x))
        self._test_func(F.varSampStable(x))
        self._test_func(F.version())
        self._test_func(F.visibleWidth(x))
        self._test_func(F.visitParamExtractBool(x, y))
        self._test_func(F.visitParamExtractFloat(x, y))
        self._test_func(F.visitParamExtractInt(x, y))
        self._test_func(F.visitParamExtractRaw(x, y))
        self._test_func(F.visitParamExtractString(x, y))
        self._test_func(F.visitParamExtractUInt(x, y))
        self._test_func(F.visitParamHas(x, y))
        self._test_func(F.windowFunnel(x))
        self._test_func(F.xxHash32())
        self._test_func(F.xxHash64())
        self._test_func(F.yandexConsistentHash(x, y))
