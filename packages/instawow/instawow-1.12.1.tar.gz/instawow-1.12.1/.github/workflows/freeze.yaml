---
name: Create stand-alone executable
on:
  push:
    tags:
    - v*
jobs:
  freeze:
    defaults:
      run:
        shell: bash
    env:
      PYOX_VERSION: '0.7.0'
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Clone the repo
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Extract the tag
      id: get_tag
      run: |
        echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
    - name: Install Python
      uses: actions/setup-python@v1
      with:
        python-version: '3.7'
    - name: Build instawow and rename the sdist for use by PyOxidizer
      run: |
        python -m pip install nox
        python -m nox -s build
        mv dist/*.tar.gz instawow.tar.gz
        python -m nox -s clobber_build_artefacts
    - name: Restore Cargo cache for PyOxidizer
      uses: actions/cache@v2
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-main-cargo-pyox-${{ env.PYOX_VERSION }}
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
    - name: Install PyOxidizer
      run: |
        cargo install --version $PYOX_VERSION pyoxidizer
    - name: Freeze instawow and copy it into the 'dist' directory
      run: |
        mkdir -p dist
        pyoxidizer build --release | tee >(
          instawow_path=$(tail -n 1 | cut -c 23-)
          cp $instawow_path dist/${instawow_path##*[\\/]}
        )
    - name: Upload binary
      uses: actions/upload-artifact@v2
      with:
        name: instawow-${{ matrix.os }}-${{ steps.get_tag.outputs.TAG }}
        path: dist/instawow*
