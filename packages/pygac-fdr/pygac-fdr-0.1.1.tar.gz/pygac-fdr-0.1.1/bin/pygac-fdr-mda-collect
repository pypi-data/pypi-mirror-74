#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright (c) 2020 pygac-fdr developers
#
# This file is part of pygac-fdr.
#
# pygac-fdr is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# pygac-fdr is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# pygac-fdr. If not, see <http://www.gnu.org/licenses/>.

import argparse
import logging
from pygac_fdr.metadata import MetadataCollector
from pygac_fdr.utils import logging_on, LOGGER_NAME


LOG = logging.getLogger(LOGGER_NAME)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Collect metadata from level 1c files')
    parser.add_argument('--dbfile', required=True, type=str, help='Metadata database to be written')
    parser.add_argument('--if-exists', choices=('append', 'fail', 'replace'), default='fail',
                        help='What to do if database table already exists')
    parser.add_argument('filenames', nargs='+', help='Level 1c files to be analyzed')
    parser.add_argument('--verbose', action='store_true', help='Increase verbosity')
    args = parser.parse_args()
    logging_on(logging.DEBUG if args.verbose else logging.INFO)
    if args.verbose:
        import pandas as pd
        pd.set_option('display.max_rows', None)
        pd.set_option('display.max_columns', None)
        pd.set_option('display.width', None)
        pd.set_option('display.max_colwidth', 22)

    collector = MetadataCollector()
    mda = collector.get_metadata(args.filenames)
    LOG.debug(mda)
    collector.save_sql(mda, args.dbfile, args.if_exists)
