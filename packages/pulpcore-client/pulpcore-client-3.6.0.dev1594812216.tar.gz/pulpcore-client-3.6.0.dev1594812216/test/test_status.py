# coding: utf-8

"""
    Pulp 3 API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: v3
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import pulpcore.client.pulpcore
from pulpcore.client.pulpcore.models.status import Status  # noqa: E501
from pulpcore.client.pulpcore.rest import ApiException

class TestStatus(unittest.TestCase):
    """Status unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Status
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = pulpcore.client.pulpcore.models.status.Status()  # noqa: E501
        if include_optional :
            return Status(
                versions = [
                    pulpcore.client.pulpcore.models.version.Version(
                        component = '0', 
                        version = '0', )
                    ], 
                online_workers = [
                    pulpcore.client.pulpcore.models.worker.Worker(
                        pulp_href = '0', 
                        pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ], 
                online_content_apps = [
                    pulpcore.client.pulpcore.models.content_app_status.ContentAppStatus(
                        name = '0', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ], 
                database_connection = pulpcore.client.pulpcore.models.database_connection.Database connection(
                    connected = True, ), 
                redis_connection = pulpcore.client.pulpcore.models.redis_connection.Redis connection(
                    connected = True, ), 
                storage = pulpcore.client.pulpcore.models.storage.Storage(
                    total = 0, 
                    used = 0, 
                    free = 0, )
            )
        else :
            return Status(
                versions = [
                    pulpcore.client.pulpcore.models.version.Version(
                        component = '0', 
                        version = '0', )
                    ],
                online_workers = [
                    pulpcore.client.pulpcore.models.worker.Worker(
                        pulp_href = '0', 
                        pulp_created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '0', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                online_content_apps = [
                    pulpcore.client.pulpcore.models.content_app_status.ContentAppStatus(
                        name = '0', 
                        last_heartbeat = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                database_connection = pulpcore.client.pulpcore.models.database_connection.Database connection(
                    connected = True, ),
                redis_connection = pulpcore.client.pulpcore.models.redis_connection.Redis connection(
                    connected = True, ),
        )

    def testStatus(self):
        """Test Status"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
